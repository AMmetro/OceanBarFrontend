{"version":3,"sources":["n1-main/m1-ui/common/Charts/Charts.module.css","n1-main/m1-ui/navigation/Navigation.module.css","n1-main/m1-ui/common/Currency/Currency.module.css","n1-main/m1-ui/common/Exchange/ExchangeHeader/ExchangeHeader.module.css","n1-main/m1-ui/common/SuperComponents/SuperButton/SuperButton.module.css","n1-main/m1-ui/common/Exchange/Exchange.module.css","n1-main/m1-ui/common/Exchange/ExchangeBody/ExchangeBody.module.css","n1-main/m1-ui/common/Exchange/ExchangeBody/CurencyCard/CurrencyCard.module.css","n1-main/m1-ui/navigation/Navigation.tsx","n1-main/m1-ui/common/Eror404.tsx","n1-main/m1-ui/common/Start.tsx","n1-main/m1-ui/common/SuperComponents/SuperButton/SuperButtonContainer.tsx","n1-main/m3-dal/Api.tsx","n1-main/m2-bll/currencyListReducer.ts","n1-main/m1-ui/common/Currency/Currency.tsx","n1-main/m1-ui/common/Charts/DrawChart/DrawChart.tsx","n1-main/m2-bll/currencyChartReducer.ts","n1-main/m1-ui/common/Charts/Charts.tsx","n1-main/m2-bll/currencyWalletReducer.ts","n1-main/m1-ui/common/Exchange/ExchangeHeader/ExchangeHeader.tsx","n1-main/m1-ui/common/Exchange/ExchangeBody/CurencyCard/CurrencyCard.tsx","n1-main/m1-ui/common/Exchange/ExchangeBody/ExchangeBody.tsx","n1-main/m1-ui/common/Exchange/Exchange.tsx","n1-main/m1-ui/routes/Routes.tsx","n1-main/m1-ui/App.tsx","reportWebVitals.ts","n1-main/m2-bll/store.ts","index.tsx"],"names":["module","exports","Navigation","className","style","navigation_container","navigationLink_holder","to","Eror404","Start","SuperButton","red","restProps","finalClassName","default","instance","axios","create","baseURL","myAPI","dateQuery","get","currencyId","dateFrom","dateTill","initState","list","date","makeCurrencyListTC","currencyListDate","dispatch","then","res","currencyList","type","addCurrencyListAC","data","Currency","useState","setCurrencyListDate","useSelector","state","currencyListReducer","useDispatch","today","Date","setDate","getDate","toISOString","substr","currPair","map","elem","pairs_table","id","Cur_Abbreviation","Cur_Name","Cur_OfficialRate","body_container","input_container","input_lable","value","name","defaultValue","onChange","inputDate","document","getElementById","SuperButtonContainer","onClick","getMonth","getFullYear","DrawCharts","props","canvasRef","useRef","drawChart","ctx","i","lineWidth","strokeStyle","length","beginPath","moveTo","lineTo","stroke","currencyAbbreviation","filter","Cur_ID","fillStyle","font","fillText","useEffect","current","canvas","context","getContext","width","WIDTH","background","height","HEIGHT","currencyChart","currencyChartValue","slice","globalAlpha","drawGrid","chart_container","ref","Charts","setDateFrom","dateUntil","setDateUntil","setCurrencyId","currencyChartReducer","currencyListName","dateFromValue","dateUntillValue","rateData","addCurrencyChartAC","makeChartsTC","e","currentTarget","DrawChart","balance","ExchangeHeader","amount","setAmount","wallet","walletReducer","exchange_header","exchange_header_menu","enterAmount","amaunt","wallet_wrapper","viewBox","data-name","d","fill","CurrencyCard","card_items","ExchangeBody","exchange_body_container","Exchange","exchange_wrapper","PATH","Routes","path","exact","render","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","newAmount","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.e0c07082.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"body_container\":\"Charts_body_container__3J2f7\",\"input_container\":\"Charts_input_container__IOZAa\",\"pairs_table\":\"Charts_pairs_table__eHFiO\",\"input_lable\":\"Charts_input_lable__3bBb1\",\"chart_container\":\"Charts_chart_container__m8RWj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation_container\":\"Navigation_navigation_container__3_ZCD\",\"navigationLink_holder\":\"Navigation_navigationLink_holder__3peXs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body_container\":\"Currency_body_container__1GRl9\",\"input_container\":\"Currency_input_container__11qib\",\"pairs_table\":\"Currency_pairs_table__2zDl8\",\"input_lable\":\"Currency_input_lable__FABBp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"exchange_header\":\"ExchangeHeader_exchange_header__1Odyo\",\"exchange_header_menu\":\"ExchangeHeader_exchange_header_menu__1j9uF\",\"wallet_wrapper\":\"ExchangeHeader_wallet_wrapper__3EsHY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"SuperButton_red__248L6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"exchange_wrapper\":\"Exchange_exchange_wrapper__NHu7Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"exchange_body_container\":\"ExchangeBody_exchange_body_container__204T-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cards_container\":\"CurrencyCard_cards_container__1S1R5\",\"card_items\":\"CurrencyCard_card_items__3CSo3\"};","import React from 'react';\nimport {NavLink} from \"react-router-dom\";\nimport style from \"./Navigation.module.css\";\n\n\nfunction Navigation() {\n\n  return (\n    <div className={style.navigation_container}>\n       <div className={style.navigationLink_holder}>\n         <NavLink to=\"exchange\">exchange</NavLink> &nbsp;\n       </div>\n       <div className={style.navigationLink_holder}>\n          <NavLink to=\"charts\">Charts</NavLink> &nbsp;\n        </div>\n        <div className={style.navigationLink_holder}>\n          <NavLink to=\"Currency\">Currency</NavLink> <br/>\n        </div>\n        <div><br/></div>\n\n    </div>\n  );\n}\n\nexport default Navigation;\n","import React from 'react';\n\n\nimport './App.css';\n\nfunction Eror404() {\n\n  return (\n    <div className=\"App\">\n      <h1>Page not found</h1>\n    </div>\n  );\n}\n\nexport default Eror404;\n","import React from 'react';\nimport './App.css';\n\nfunction Start() {\n\n  return (\n    <div className=\"App\">\n    <h1> exchange cryptocurrencies </h1>\n    </div>\n  );\n}\n\nexport default Start;\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\nimport style from \"./SuperButton.module.css\";\n\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean,\n    value?: string\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = ({\n                  red,\n                  className,\n                  ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n                                                     }\n) => {\n\n    const finalClassName = `${red ? style.red : style.default} ${className}`;\n\n     return (\n        <button\n            className={finalClassName}\n             {...restProps}\n        >\n            {/*it should lokks like this????*/}\n            {/*{{...restProps}.value}*/}\n\n        </button>\n    );\n}\n\nexport default SuperButton;\n","import axios from 'axios'\n\n\nconst instance = axios.create({\n    baseURL: 'https://www.nbrb.by/api/exrates/',\n\n})\n\n\nexport const myAPI = {\n    getCurensysList(dateQuery:Date) {\n        const promise = instance.get<any>(`rates?ondate=${dateQuery}&periodicity=0`)\n        return promise;\n    },\n\n    getChartData(currencyId:string, dateFrom:string, dateTill:string) {\n        const promise = instance.get<any>(`Rates/Dynamics/${currencyId}?startDate=${dateFrom}&endDate=${dateTill}`)\n        return promise;\n    },\n\n}\n\n\n\n\n\n\n\n","import {myAPI} from \"../m3-dal/Api\";\nimport {Dispatch} from 'redux'\n\nexport type currencyListStateType = {list: Array<any>, date:string};\nconst initState:currencyListStateType = {list:[],date:\"\"};\n\nexport const currencyListReducer = (state = initState, action: AddCurrencyListType): currencyListStateType => { // fix any\n    switch (action.type) {\n        case \"setCurrencyList\": {\n              return state={list: [...action.currencyList], date:action.currencyListDate};\n        }\n\n        default: return state;\n    }\n};\n\n// actions-------------------------------------------------------------------\ntype AddCurrencyListType = {type: \"setCurrencyList\", currencyList:any, currencyListDate:string};\nexport const addCurrencyListAC = (currencyList:any, currencyListDate:string): any => {return {type:\"setCurrencyList\", currencyList, currencyListDate}};\n\n\n// thunks-------------------------------------------------------------------\n        export const makeCurrencyListTC = (currencyListDate:any) => {return (dispatch: Dispatch<any>) => {\n        myAPI.getCurensysList(currencyListDate)\n            .then( (res) => {\n                dispatch(addCurrencyListAC([...res.data], currencyListDate) )\n            } )\n\n      }\n    }\n","import React, {ChangeEvent, useState} from \"react\";\nimport style from \"./Currency.module.css\";\nimport SuperButtonContainer from \"../SuperComponents/SuperButton/SuperButtonContainer\";\nimport {makeCurrencyListTC, currencyListStateType} from \"../../../m2-bll/currencyListReducer\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppStoreType} from \"../../../m2-bll/store\";\n\nfunction Currency() {\n\n    const [currencyListDate, setCurrencyListDate] = useState<string>(\"\");\n\n    const currencyList=useSelector<AppStoreType,currencyListStateType>(state=>state.currencyListReducer)\n    const dispatch = useDispatch()\n\n    const today = new Date();\n    today.setDate(today.getDate() );\n    const date = today.toISOString().substr(0,10);\n\n\n      const currPair = currencyList.list.map(elem =>\n          <div className={style.pairs_table} id={elem.Cur_Abbreviation}>\n              <span>{elem.Cur_Abbreviation}</span>\n              <span>{elem.Cur_Name}</span>\n              <span>{elem.Cur_OfficialRate}</span>\n          </div> )\n\n\n    const changeCurrencyListDateHandler = ()=>{\n        //@ts-ignore\n        let inputDate=document.getElementById(\"currencyListDate\").value\n        setCurrencyListDate(inputDate)\n    }\n\n    const getCurrencyRate=()=>{\n//    --------------------------------------------------------\n\n        dispatch(makeCurrencyListTC(currencyListDate))\n    }\n     return (\n        <div className={style.body_container}>\n\n\n            <div className={style.input_container}>\n                <div className={style.input_lable}>\n                    <span>select a date for get currency rate</span>\n                </div>\n                <div>\n                    <input id=\"currencyListDate\" value={currencyListDate}\n                     type=\"date\" name=\"currencyListDate\"\n                     defaultValue={date}\n                     onChange={changeCurrencyListDateHandler}/>\n                    <SuperButtonContainer\n                        red // пропсу с булевым значением не обязательно указывать true\n                        onClick={getCurrencyRate}>\n                        get\n                    </SuperButtonContainer>\n                </div>\n\n\n            </div>\n\n            <span> {currencyList.date ? currencyList.date : today.getDate() +\"-\"+ (today.getMonth()+1) +\"-\"+ today.getFullYear()} </span>\n            {/* <span> {currencyList.date ? currencyList.date.toLocaleDateString() : date}  </span> */}\n\n            {currPair}\n\n        </div>\n    );\n}\n\nexport default Currency;\n","import React, {useRef, useEffect} from 'react'\nimport style from \"../Charts.module.css\";\n\nconst WIDTH = 400;\nconst HEIGHT = 200;\nconst DPI_WIDTH = WIDTH * 2;\nconst DPI_HEIGHT = HEIGHT * 2;\n\nconst DrawCharts = (props: any) => {\n\n    const canvasRef = useRef<HTMLCanvasElement | null>(null);\n    // const contextRef = React.useRef<CanvasRenderingContext2D | null>(null);\n\n    const drawChart = (ctx: any, data: any) => {\n        let i = 1\n             ctx!.lineWidth = 3\n             ctx!.strokeStyle = \"yellow\"\n        for (i; i < data.length; i++) {\n            ctx.beginPath();\n            ctx.moveTo(...{...data}[i - 1]);\n            ctx.lineTo(...{...data}[i]);\n            ctx.stroke();\n        }\n\n    //@ts-ignore\n    const currencyAbbreviation = props.currencyList.list.filter(elem => elem.Cur_ID === +props.currencyId )\n        if (currencyAbbreviation[0]){\n        ctx.fillStyle = \"#00F\";\n        ctx.strokeStyle = \"#F00\";\n        ctx.font = \"italic 20pt Arial\";\n        ctx.fillText(`${currencyAbbreviation[0].Cur_Abbreviation}`, 200, 30);\n        }\n    }\n\n    const drawGrid = (context:any) => {\n\n        const scaleX = 20;\n        const scaleY = 50;\n        context!.beginPath();\n        for (let i = 0; i < DPI_WIDTH; i = i + scaleX) {\n            context!.moveTo(i, 0)\n            context!.lineTo(i, 140)\n\n            context!.font = \"5pt Arial\";\n            context!.fillText(`${i}`, i, HEIGHT-50);\n        }\n\n        for (let i = 0; i < DPI_HEIGHT; i = i + scaleX) {\n            context!.moveTo(0, i)\n            context!.lineTo(DPI_HEIGHT, i)\n\n            context!.font = \"5pt Arial\";\n            context!.fillText(`${i}`, 0, i);\n        }\n        context!.stroke();\n\n    }\n//---------------------------------------------------------------------------\n\n    useEffect(() => {\n        if (canvasRef.current) {\n            const canvas = canvasRef.current\n            const context = canvas.getContext('2d')\n            canvas.style.width = WIDTH + \"px\"\n            canvas.style.background = \"lightgray\"\n            canvas.style.height = HEIGHT + \"px\"\n\n//---------------------------calc data for Chart----------------------------------------\n           if (props.currencyChart.value) {\n             //@ts-ignore\n             const currencyChartValue = props.currencyChart.value.map(elem =>\n               [+elem.Date.slice(8, 10)*10, elem.Cur_OfficialRate*12]\n                )\n               drawChart(context, currencyChartValue)\n            }\n//------------------------------------------------------------------------------\n            context!.strokeStyle = \"white\"\n            context!.lineWidth = 0.1\n            context!.globalAlpha = 0.5\n            drawGrid(context)\n        }\n    }, [drawChart])\n\n\n    return (<div className={style.chart_container}>\n            <span>chart for period {props.currencyChart.dateFrom} - {props.currencyChart.dateTill}</span>\n            <br/>\n            <canvas ref={canvasRef} {...props}\n                    {...props.currencyChartValue}\n            />\n        </div>\n    )\n}\n\nexport default DrawCharts\n","import {Dispatch} from \"redux\";\nimport {myAPI} from \"../m3-dal/Api\";\n\nexport type currencyChartStateType = {value:[] ,currencyId:any, dateFrom:any, dateTill:any};\nconst initState:currencyChartStateType = {value:[],currencyId:\"\", dateFrom:\"\", dateTill:\"\"};\n\nexport const currencyChartReducer = (state = initState, action: AddCurrencyChartType): currencyChartStateType => { // fix any\n    switch (action.type) {\n        case \"setCurrencyChart\": {\n            return state={value:action.rateData,currencyId:action.currencyId, dateFrom:action.dateFrom, dateTill:action.dateTill};\n        }\n\n        default: return state;\n    }\n};\n\n// actions-------------------------------------------------------------------\n\ntype AddCurrencyChartType = {type: string,rateData:any,currencyId:any, dateFrom:any, dateTill:any};\nexport const addCurrencyChartAC = (rateData:any,currencyId:any, dateFrom:any, dateTill:any): AddCurrencyChartType => {return {type:\"setCurrencyChart\",\n    rateData,currencyId, dateFrom, dateTill}};\n\n//thunks-------------------------------------------------------------------\n\nexport const makeChartsTC = (currencyId:string, dateFrom:string, dateTill:string) => {return (dispatch: Dispatch<any>) => {\n\n    myAPI.getChartData(currencyId, dateFrom, dateTill)\n        .then( (res) => {\n            dispatch(addCurrencyChartAC([...res.data],currencyId, dateFrom, dateTill))\n        } )\n\n}\n}\n\n","import React, {ChangeEvent, ChangeEventHandler, EventHandler, useEffect, useState} from \"react\";\nimport style from \"./Charts.module.css\";\nimport SuperButtonContainer from \"../SuperComponents/SuperButton/SuperButtonContainer\";\nimport {makeCurrencyListTC, currencyListStateType} from \"../../../m2-bll/currencyListReducer\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppStoreType} from \"../../../m2-bll/store\";\nimport DrawCharts from \"./DrawChart/DrawChart\";\nimport {makeChartsTC,currencyChartStateType} from \"../../../m2-bll/currencyChartReducer\";\n\n\nfunction Charts() {\n\n    const [dateFrom, setDateFrom] = useState<string>(\"\");\n    const [dateUntil, setDateUntil] = useState<string>(\"\");\n    const [currencyId, setCurrencyId] = useState<string>(\"\");\n\n    const currencyChart=useSelector<AppStoreType,currencyChartStateType>(state=>state.currencyChartReducer)\n    const currencyList=useSelector<AppStoreType,currencyListStateType>(state=>state.currencyListReducer)\n    const dispatch = useDispatch()\n\n    const today = new Date();\n    today.setDate(today.getDate() );\n    const date = today.toISOString().substr(0,10);\n\n    //----------------------------------------------------------------------------------\n    useEffect(() => {\n        dispatch(makeCurrencyListTC(date))\n    },[date]);\n    //----------------------------------------------------------------------------------\n\n\n    const currencyListName = currencyList.list.map(elem =>\n                                    <option key={elem.Cur_Abbreviation}\n                                            value={elem.Cur_ID}\n                                      >\n                                         {elem.Cur_Name}\n                                    </option>\n                                      )\n\n    const selectDropChart = (e:ChangeEvent<HTMLSelectElement>) => {\n        setCurrencyId(e.currentTarget.value)\n       }\n\n       const makeCharts=()=>{\n        dispatch(makeChartsTC(currencyId, dateFrom, dateUntil))\n    }\n\n    const changeDateFromHandler = ()=>{\n        //@ts-ignore\n        let dateFromValue=document.getElementById(\"dateFrom\").value\n        setDateFrom(dateFromValue)\n    }\n\n    const changeDateUntilHandler = ()=>{\n        //@ts-ignore\n        let dateUntillValue=document.getElementById(\"dateUntil\").value\n        setDateUntil(dateUntillValue)\n    }\n\n    return (\n        <div className={style.body_container}>\n\n            <div className={style.input_container}>\n                <div className={style.input_lable}>\n                        <span>select a date period</span>\n                </div>\n                <div>\n                    <input id=\"dateFrom\" value={dateFrom}\n                           type=\"date\" name=\"dateFrom\"\n                           defaultValue={date}\n                           onChange={changeDateFromHandler}/>\n                    <input id=\"dateUntil\" value={dateUntil}\n                           type=\"date\" name=\"dateUntil\"\n                           defaultValue={date}\n                           onChange={changeDateUntilHandler}/>\n                    <SuperButtonContainer\n                        red // пропсу с булевым значением не обязательно указывать true\n                        onClick={makeCharts}>\n                        draw\n                    </SuperButtonContainer>\n                </div>\n\n            </div>\n\n              <select\n                 onChange={selectDropChart}>\n                 <option>Select currency for chart</option>\n                 {currencyListName}\n              </select>\n            <br/>\n\n             <DrawCharts\n                 currencyChart={currencyChart}\n                 currencyList={currencyList}\n                 currencyId={currencyId}\n             />\n\n        </div>\n    );\n}\n\nexport default Charts;\n","\nimport {Dispatch} from 'redux'\n\nexport type walletReducerStateType = {balance: number};\nconst initState:walletReducerStateType = {balance:1000};\n\nexport const walletReducer = (state = initState, action: ChangeWalletBalanceType): walletReducerStateType => {\n    switch (action.type) {\n        case \"byCurrency\": {\n\n            // найти покупаемую валюту по ИД\n            // let newCurrencyAmount = action.amount * курс этой валюты\n            // добавить валюту и ее кол-во в редюсер\n\n              let newAmount = state.balance - action.amount\n              return state={balance: newAmount};\n        }\n        case \"sellCurrency\": {\n            let newAmount = state.balance + action.amount\n            return state={balance: newAmount};\n      }\n        default: return state;\n    }\n};\n\n// actions-------------------------------------------------------------------\ntype ChangeWalletBalanceType = {type: \"byCurrency\"|\"sellCurrency\", amount:number};\nexport const byCurrencyAC = (amount:number, currencyId:string): ChangeWalletBalanceType => {return {type:\"byCurrency\", amount}};\nexport const sellCurrencyAC = (amount:number,currencyId:string): ChangeWalletBalanceType => {return {type:\"sellCurrency\", amount}};\n\n// thunks-------------------------------------------------------------------\n        export const byCurrencyTC = (amaunt:number,currencyId:string) => {return (dispatch: Dispatch<any>) => {\n            dispatch(byCurrencyAC(amaunt,currencyId))\n      }}\n\n        export const sellCurrencyTC = (amaunt:number,currencyId:string) => {return (dispatch: Dispatch<any>) => {\n            dispatch(sellCurrencyAC(amaunt,currencyId))\n  }}\n","\nimport style from \"./ExchangeHeader.module.css\";\nimport React, {ChangeEvent, ChangeEventHandler, EventHandler, useEffect, useState} from \"react\";\nimport SuperButtonContainer from \"../../SuperComponents/SuperButton/SuperButtonContainer\";\nimport {makeCurrencyListTC, currencyListStateType} from \"../../../../m2-bll/currencyListReducer\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppStoreType} from \"../../../../m2-bll/store\";\nimport {byCurrencyTC, sellCurrencyTC, walletReducerStateType} from \"../../../../m2-bll/currencyWalletReducer\";\n\n\nconst ExchangeHeader = (props: any) => {\n    const [amount, setAmount] = useState<number>(1000);\n    const currencyList=useSelector<AppStoreType,currencyListStateType>(state=>state.currencyListReducer)\n    const wallet=useSelector<AppStoreType,walletReducerStateType>(state=>state.walletReducer)\n    const [currencyId, setCurrencyId] = useState<string>(\"\");  \n    const dispatch = useDispatch()\n\n    const today = new Date();\n    today.setDate(today.getDate() );\n    const date = today.toISOString().substr(0,10);\n\n    useEffect(() => {\n        dispatch(makeCurrencyListTC(date))\n    },[date]);\n\n    const selectDropChart = (e:ChangeEvent<HTMLSelectElement>) => {\n      setCurrencyId(e.currentTarget.value)\n     }\n\n    const bySome=()=>{\n        dispatch(byCurrencyTC(amount,currencyId))\n    }\n\n    const sellSome=()=>{\n        dispatch(sellCurrencyTC(amount,currencyId))\n    }\n\n\n    const enterAmount=(e:ChangeEvent<HTMLInputElement>)=>{\n        setAmount(+e.currentTarget.value)        \n    }\n\n    const currencyListName = currencyList.list.map(elem =>\n        <option key={elem.Cur_Abbreviation}\n                value={elem.Cur_ID}\n          >\n             {elem.Cur_Name}\n        </option>\n          )\n\n\n    return (\n    <div className={style.exchange_header} >\n       <div className={style.exchange_header_menu}>\n          <div>\n            Select currency<br/>\n            <select\n            style={{width:150}}\n            onChange={selectDropChart}>\n            {currencyListName}\n            </select>\n          </div>\n\n          <div>\n            Enter amount<br/>\n            <input type=\"number\"\n            style={{width:50}}\n            onChange={(e)=>enterAmount(e)}\n            />\n          </div>\n\n          <div>\n            press for<br/> \n            <button onClick={bySome}>By</button>\n            <button onClick={sellSome}>Sell</button>\n          </div>\n       </div>\n\n\n        <div className={style.wallet_wrapper}> \n            <div>\n                Balance <br/>\n                {wallet.balance}$\n            </div>\n            <div>\n               <svg id=\"Layer_1\" height=\"51\" viewBox=\"0 0 512 512\"\n                 width=\"51\" data-name=\"Layer 1\"><path d=\"m365.29 117.74-298.51 96.96a28.75 28.75 0 0 1 5.98-.62h317.79v-77.98a19.3 19.3 0 0 0 -25.26-18.36z\"\n                 fill=\"#7b9aaa\"/>\n                 <path d=\"m409.77 214.08h-337.01a28.927 28.927 0 0 0 -28.95 28.95v229.02a28.948 28.948 0 0 0 28.95 28.95h337.01a28.948 28.948 0 0 0 28.95-28.95v-229.02a28.948 28.948 0 0 0 -28.95-28.95z\"\n                  fill=\"#a4bdc1\"/>\n                  <path d=\"m448.89 300.52h-96.12a28.948 28.948 0 0 0 -28.95 28.95v56.14a28.948 28.948 0 0 0 28.95 28.95h96.12a19.3 19.3 0 0 0 19.3-19.3v-75.44a19.3 19.3 0 0 0 -19.3-19.3z\" fill=\"#7b9aaa\"/>\n                  <path d=\"m387.52 353.6v7.88a14.48 14.48 0 1 1 -28.96 0v-7.88a14.48 14.48 0 1 1 28.96 0z\" fill=\"#6d7486\"/>\n                  <path d=\"m336.89 11h-190.74a10.113 10.113 0 0 0 -10.15 9.83v193.17h211v-193.17a10.072 10.072 0 0 0 -10.11-9.83z\" fill=\"#81c83d\"/><path d=\"m315.675 60.95c-11.71-2.53-20.465-11.95-20.815-23.95h-106.68a24.721 24.721 0 0 1 -19.57 23.94 8.652 8.652 0 0 0 -6.61 8.21v144.85h160v-144.83a8.341 8.341 0 0 0 -6.325-8.22z\" fill=\"#9be147\"/>\n                  <path d=\"m314.83 180.4a72.84 72.84 0 0 1 -8.18 33.68h-130.26a73.316 73.316 0 1 1 138.44-33.68z\" fill=\"#81c83d\"/><path d=\"m74 472.05v-229.02a28.913 28.913 0 0 1 22.875-28.37 27.855 27.855 0 0 1 5.885-.66h-30a27.855 27.855 0 0 0 -5.885.66 28.913 28.913 0 0 0 -22.875 28.37v229.02a28.787 28.787 0 0 0 28.76 28.95h30a28.787 28.787 0 0 1 -28.76-28.95z\" fill=\"#7b8f91\"/><path d=\"m256.52 108.632a73.349 73.349 0 0 0 -88.31 71.728 72.649 72.649 0 0 0 8.18 33.64h30a73.27 73.27 0 0 1 50.13-105.368z\" fill=\"#6c9e38\"/>\n                  <g fill=\"#284268\">\n                  <path d=\"m373.039 333.121a20.5 20.5 0 0 0 -20.477 20.479v7.886a20.477 20.477 0 1 0 40.954 0v-7.886a20.5 20.5 0 0 0 -20.477-20.479zm8.477 28.362a8.477 8.477 0 0 1 -16.954 0v-7.883a8.477 8.477 0 0 1 16.954 0z\"/>\n                  <path d=\"m76 249a6 6 0 0 0 -6 6v2a6 6 0 0 0 12 0v-2a6 6 0 0 0 -6-6z\"/>\n                  <path d=\"m76 277a6 6 0 0 0 -6 6v92a6 6 0 0 0 12 0v-92a6 6 0 0 0 -6-6z\"/>\n                  <path d=\"m247.113 180.4a12.018 12.018 0 0 1 24.035-.126c0 .042-.006.083-.006.126s0 .083.006.125a12.031 12.031 0 0 1 -12.014 11.9 6 6 0 0 0 0 12 24.064 24.064 0 0 0 23.266-18.025h5.48a6 6 0 0 0 0-12h-5.48a24.022 24.022 0 0 0 -47.283 6 12.021 12.021 0 1 1 -12.02-12.021 6 6 0 0 0 0-12 24.063 24.063 0 0 0 -23.266 18.021h-4.66a6 6 0 0 0 0 12h4.66a24.022 24.022 0 0 0 47.282-6z\"/>\n                  <path d=\"m448.888 294.516h-4.168v-51.482a34.954 34.954 0 0 0 -34.954-34.953h-13.212v-71.981a25.3 25.3 0 0 0 -33.119-24.065l-10.713 3.48v-94.685a15.848 15.848 0 0 0 -15.83-15.83h-190.738a15.847 15.847 0 0 0 -15.829 15.83v166.92l-65.191 21.176a34.959 34.959 0 0 0 -27.324 34.108v229.012a34.953 34.953 0 0 0 34.954 34.954h337a34.954 34.954 0 0 0 34.954-34.954v-51.481h4.168a25.331 25.331 0 0 0 25.3-25.3v-75.447a25.33 25.33 0 0 0 -25.298-25.302zm-96.166-166.388 14.42-4.685a13.3 13.3 0 0 1 17.412 12.657v71.986h-31.832zm-210.4-107.3a3.834 3.834 0 0 1 3.832-3.828h190.738a3.834 3.834 0 0 1 3.83 3.83v187.251h-12.515v-138.906a14.247 14.247 0 0 0 -11.156-13.857c-9.425-2.042-15.932-9.291-16.192-18.037a6 6 0 0 0 -6-5.822h-106.674a6 6 0 0 0 -6 5.822 18.5 18.5 0 0 1 -14.655 18.037 14.1 14.1 0 0 0 -11.055 13.834v138.929h-14.15zm99.2 80.263a79.432 79.432 0 0 0 -73.045 48.418v-80.357a2.164 2.164 0 0 1 1.692-2.127 30.408 30.408 0 0 0 23.318-23.566h96.138c2.707 11.541 12.275 20.853 24.885 23.586a2.182 2.182 0 0 1 1.7 2.13v84.555a79.439 79.439 0 0 0 -74.687-52.637zm74.685 106.009v.977h-.367c.121-.323.25-.646.367-.977zm-185.882-6.737v7.714h-23.746zm302.4 271.679a22.954 22.954 0 0 1 -22.959 22.958h-337a22.954 22.954 0 0 1 -22.956-22.954v-229.012a22.953 22.953 0 0 1 22.954-22.953h113.513a6 6 0 0 0 0-12h-6.127a67.312 67.312 0 1 1 122.746 0h-66.619a6 6 0 0 0 0 12h173.489a22.954 22.954 0 0 1 22.954 22.954v51.481h-79.949a34.993 34.993 0 0 0 -34.953 34.953v56.142a34.993 34.993 0 0 0 34.953 34.954h79.949zm29.47-76.784a13.318 13.318 0 0 1 -13.3 13.3h-96.124a22.98 22.98 0 0 1 -22.953-22.954v-56.135a22.979 22.979 0 0 1 22.953-22.953h96.117a13.317 13.317 0 0 1 13.3 13.3z\"/></g></svg>\n            </div>\n        </div>\n     </div>\n    )\n}\n\nexport default ExchangeHeader\n","\nimport style from \"./CurrencyCard.module.css\";\nimport React, {ChangeEvent, ChangeEventHandler, EventHandler, useEffect, useState} from \"react\";\n\nimport {useDispatch, useSelector} from \"react-redux\";\n\n\nconst CurrencyCard = (props: any) => {\n\n\n\n    return (\n \n         <div className={style.card_items}\n              id={props.Cur_Abbreviation}>\n              <span>{props.Cur_Abbreviation}</span>\n              <br/>\n              <span>{props.Cur_Name}</span>\n              <br/>\n              <span>{props.Cur_OfficialRate}</span>\n         </div>\n\n    )\n}\n\nexport default CurrencyCard\n","import style from \"./ExchangeBody.module.css\";\nimport React, {ChangeEvent, ChangeEventHandler, EventHandler, useEffect, useState} from \"react\";\nimport SuperButtonContainer from \"../../SuperComponents/SuperButton/SuperButtonContainer\";\nimport {makeCurrencyListTC, currencyListStateType} from \"../../../../m2-bll/currencyListReducer\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppStoreType} from \"../../../../m2-bll/store\";\nimport {walletReducerStateType} from \"../../../../m2-bll/currencyWalletReducer\";\nimport CurrencyCard from \"./CurencyCard/CurrencyCard\";\n\n\nconst ExchangeBody = (props: any) => {\n\n    const currencyList=useSelector<AppStoreType,currencyListStateType>(state=>state.currencyListReducer)\n    const dispatch = useDispatch()\n\n    return (\n    <div className={style.exchange_body_container} >\n      \n        { currencyList.list.map(elem =>\n             <CurrencyCard\n                id={elem.Cur_Abbreviation}\n                Cur_Abbreviation={elem.Cur_Abbreviation}\n                Cur_Name={elem.Cur_Name}\n                Cur_OfficialRate={elem.Cur_OfficialRate}\n              />\n            )}\n\n\n\n     </div>\n    )\n}\n\nexport default ExchangeBody\n","\nimport style from \"./Exchange.module.css\";\nimport React, {ChangeEvent, ChangeEventHandler, EventHandler, useEffect, useState} from \"react\";\nimport SuperButtonContainer from \"../SuperComponents/SuperButton/SuperButtonContainer\";\nimport {makeCurrencyListTC, currencyListStateType} from \"../../../m2-bll/currencyListReducer\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppStoreType} from \"../../../m2-bll/store\";\nimport {walletReducerStateType} from \"../../../m2-bll/currencyWalletReducer\";\nimport ExchangeHeader from \"./ExchangeHeader/ExchangeHeader\";\nimport ExchangeBody from \"./ExchangeBody/ExchangeBody\";\n\n\nconst Exchange = (props: any) => {\n\n    return (\n     <div className={style.exchange_wrapper} >\n        <ExchangeHeader/>\n        <ExchangeBody/>\n     </div>\n    )\n}\n\nexport default Exchange\n","import React from \"react\";\nimport Error404 from \"../common/Eror404\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport Start from \"../common/Start\";\nimport Currency from \"../common/Currency/Currency\";\nimport Charts from \"../common/Charts/Charts\";\nimport Exchange from \"../common/Exchange/Exchange\";\n\n\n\n\nexport const PATH = {\n    START: \"/start\",\n    EXCHANGE: \"/exchange\",\n    CHARTS: \"/charts\",\n    CURRENCY: \"/currency\"\n}\n\nfunction Routes() {\n    return (\n        <div>\n\n          <Switch>\n            <Route path={\"/\"} exact render={() => <Redirect to={PATH.START}/>}/>\n\n            <Route path={PATH.START} render={() => <Start/>}/>\n            <Route path={PATH.EXCHANGE} render={() => <Exchange/>}/>\n            <Route path={PATH.CHARTS} render={() => <Charts/>}/>\n            <Route path={PATH.CURRENCY} render={() => <Currency/>}/>\n\n            <Route render={() => <Error404/>}/>\n\n          </Switch>\n        </div>\n    );\n}\n\nexport default Routes;\n","import React from 'react';\nimport Navigation from './navigation/Navigation';\nimport {HashRouter} from \"react-router-dom\";\nimport Routes from \"./routes/Routes\";\nimport './App.css';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n        <HashRouter>\n          <Navigation/>\n          <Routes/>\n        </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {combineReducers, createStore, applyMiddleware, Store} from \"redux\"\nimport thunkMiddleware from 'redux-thunk'\nimport * as React from \"react\"\nimport { render } from \"react-dom\"\nimport { Provider } from \"react-redux\"\nimport thunk from \"redux-thunk\"\n\nimport {currencyListReducer} from \"./currencyListReducer\";\nimport {currencyChartReducer} from \"./currencyChartReducer\";\nimport {walletReducer} from \"./currencyWalletReducer\";\n\nconst rootReducer = combineReducers({\n    currencyListReducer: currencyListReducer,\n    currencyChartReducer: currencyChartReducer,\n    walletReducer: walletReducer\n});\n\n\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\nexport default store\n\nexport type AppStoreType = ReturnType<typeof rootReducer>\n\n// @ts-ignore\nwindow.store = store; // for dev\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './n1-main/m1-ui/App';\nimport reportWebVitals from './reportWebVitals';\nimport store from \"./n1-main/m2-bll/store\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}