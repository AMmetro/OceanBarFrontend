{"version":3,"sources":["redux/actions.ts","redux/reducers/authReducer.ts","redux/reducers/cartReducer.tsx","api/index.tsx","redux/reducers/dishesReducer.ts","api/ApiAuth.ts","api/ApiUser.tsx","redux/reducers/userReducer.ts","redux/reducers/bankCardReducer.ts","redux/reducers/orderReducer.tsx","redux/reducers/usersBookingTablesReducer.ts","redux/reducers/usersOrdersReducer.ts","redux/reducers/rootReducer.ts","redux/store.ts","redux/hooks.ts","components/homePageComponents/Navbar/DropDownNavBar/DropDown.tsx","utils/useDebounce.tsx","components/Spinner/Spinner.tsx","components/homePageComponents/Navbar/Search/Search.tsx","components/homePageComponents/Navbar/navBarComp.tsx","components/homePageComponents/CustomMap/CustomMap.tsx","components/homePageComponents/ContactsCard/ContactsCard.tsx","components/ErrorBoundary/ErrorBoundary.tsx","components/homePageComponents/Footer/Footer.tsx","utils/typeMappers.ts","components/OrderToast/OrderedToast.tsx","api/ApiCart.ts","common/parceInString.ts","pages/menuPage/Menu/Assortment/ListItem.tsx","pages/menuPage/Menu/Assortment/PlatoList.tsx","pages/menuPage/Menu/Assortment/SoupList.tsx","pages/menuPage/Menu/Assortment/SaladList.tsx","pages/menuPage/Menu/Assortment/OystersList.tsx","pages/menuPage/Menu/Assortment/DessertList.tsx","pages/menuPage/Menu/Dishes/DishIngridients.tsx","pages/menuPage/Menu/Dishes/ShiftingDish.tsx","pages/menuPage/Menu/Dishes/CompletedDish.tsx","components/maybeIntresting/maybeIntresting.tsx","pages/menuPage/Menu/Dishes/Dish.tsx","pages/menuPage/Menu/MenuRoutes.tsx","components/scrollToTop/ScrollToTop.tsx","api/ApiAdmin.tsx","pages/adminPage/Admin/deleteDish/showIngridients.tsx","pages/adminPage/Admin/deleteDish/deleteDish.tsx","pages/adminPage/Admin/addDish/AddIngredients.tsx","pages/adminPage/Admin/addDish/FilesOperations.tsx","pages/adminPage/Admin/addDish/newDish.tsx","pages/adminPage/Admin/addDish/addDish.tsx","pages/adminPage/Admin/tables/Tables.tsx","pages/adminPage/Admin/orders/OrderTypeBooking.tsx","pages/adminPage/Admin/orders/OrderTypeTakeaway.tsx","pages/adminPage/Admin/orders/OrderTypeDelivery.tsx","pages/adminPage/Admin/orders/Orders.tsx","pages/adminPage/Admin/AdminRoutes.tsx","pages/menuPage/Menu/MenuHeader.tsx","pages/menuPage/Menu/Menu.tsx","pages/menuPage/menuPage.tsx","pages/adminPage/Admin/AdminHeader.tsx","pages/adminPage/Admin/Admin.tsx","pages/adminPage/adminPage.tsx","utils/validation.tsx","pages/bookingPage/ReserveATableForm.tsx","pages/bookingPage/ConfirmReservTable.tsx","api/ApiBookTable.tsx","pages/bookingPage/bookingPage.tsx","components/loginPageComponents/LoginForm.tsx","pages/loginPage/loginPage.tsx","pages/page404/page404.tsx","components/cartPageComponents/OrderItem.tsx","components/cartPageComponents/ToggleButton.tsx","components/cartPageComponents/totalSum.ts","components/cartPageComponents/OrderForms/ReserveATableForm.tsx","api/ApiDelivery.tsx","components/userProfile/deliveryAdress/SearchDelivery.tsx","components/cartPageComponents/OrderForms/DeliveryForm.tsx","components/cartPageComponents/OrderForms/TakeawayForm.tsx","components/cartPageComponents/Cart.tsx","pages/cartPage/cartPage.tsx","components/homePageComponents/Logo/Logo.tsx","components/homePageComponents/Header/Header.tsx","components/homePageComponents/HowItWorks/HowItWorks.tsx","components/homePageComponents/BookATable/BookATable.tsx","components/homePageComponents/Slider/SliderGalleryItem.tsx","components/homePageComponents/Slider/SliderGallery.tsx","components/homePageComponents/Slider/Slider.tsx","pages/homePage/homePage.tsx","components/signUpPageComponents/SignUpForm.tsx","pages/signupPage/signupPage.tsx","components/signUpPageComponents/SignUpSuccess.tsx","pages/signupSucessPage/signupSucessPage.tsx","api/ApiOrder.ts","components/userProfile/dishView.tsx","api/ApiGetUserOrders.ts","components/userProfile/orderView.tsx","components/userProfile/currentOrders.tsx","components/userProfile/completedOrders.tsx","components/userProfile/orderHistory.tsx","components/userProfile/deliveryAdress/shiftingDeliveryAPI.tsx","components/userProfile/deliveryAdress/completedDelivery.tsx","components/userProfile/deliveryAdress/absentDelivery.tsx","components/userProfile/deliveryAdress.tsx","components/userProfile/myCards/NewBankCardForm.tsx","components/userProfile/myCards/NewBankCardContainer.tsx","components/userProfile/myCards/previewCardItem.tsx","components/userProfile/myCards/previewCards.tsx","components/userProfile/myCards/absentCard.tsx","components/userProfile/myCards.tsx","components/userProfile/passwordReset/passwordResetForm.tsx","components/userProfile/passwordReset.tsx","components/userProfile/personalData/shiftingPersonalForm.tsx","components/userProfile/personalData/completedPersonal.tsx","components/userProfile/personalData.tsx","pages/profilePage/profile.tsx","pages/confirmationPage/Message.tsx","components/confirmationComponents/DetailsData.tsx","components/confirmationComponents/ChoosePaymentCart.tsx","components/confirmationComponents/OrderDetailsSection.tsx","pages/confirmationPage/confirmationPage.tsx","pages/adminPage/Admin/CheckPassword.tsx","utils/swich.tsx","App.tsx","index.tsx"],"names":["logIn","createAction","logOut","checkAuth","addDishToCart","removeDishFromCart","updateDishInCart","clearCart","plusOneDish","minusOneDish","addDishesAC","toggleLoading","getUserAC","removeUser","setUsersBookingTables","setUsersOrders","updateUsersBookingTables","deleteUserBookingTable","deleteUserOrder","updateUserOrder","addOrder","addBankCardAC","deleteBankCardAC","toggleLoadingUser","initialState","user","isAuthorized","Cookies","get","authReducer","createReducer","builder","addCase","state","action","payload","dishes","cartReducer","updState","push","id","filter","dish","index","findIndex","ingredients","numberOfDishes","url","instance","axios","create","baseURL","API","dishesReducer","isLoading","getDishesFromApiTC","dispatch","a","asyncResp","restructDishes","data","map","myObj","split","forEach","ingr","name","isAdded","$api","API_URL","TOKEN_EXPIRATION_TIME","Date","getTime","interceptors","request","use","config","headers","Authorization","response","error","originalRequest","status","_isRetry","withCredentials","set","accessToken","expires","refreshToken","console","log","ApiAuth","email","password","post","secondname","phone","ApiUser","userId","token","Promise","resolve","userData","tokenOld","patch","body","userProfile","userReducer","getUserPersonalDataTC","setUserPersonalDataTC","bankCardReducer","userCards","cvc","expiry","focus","number","splice","orderReducer","address","city","street","homeNumber","homePart","flat","date","tableSize","time","paymentType","price","usersBookingTablesReducer","bookings","table","booking","usersOrdersReducer","orders","order","rootReducer","combineReducers","auth","cart","bankCard","store","configureStore","reducer","useAppDispatch","useDispatch","useAppSelector","useSelector","DropDownNavBar","history","useHistory","NavDropdown","align","lg","title","className","Item","href","as","Link","to","onClick","remove","useDebounce","value","delay","useState","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","Spinner","src","alt","SearchField","useClickOutside","ref","isClickedOutside","setMenu","isOpen","setIsOpen","searchQuery","setSearchQuery","setIsLoading","noQuery","length","isEmpty","debouncedSearchQuery","getMenu","query","trim","filteredDishes","toLowerCase","includes","Form","FormControl","type","placeholder","onChange","event","target","val","find","NavBarComponent","Navbar","bg","variant","expand","fixed","Brand","Toggle","Collapse","Nav","navbarScroll","Search","DropDown","CustomMap","props","mapState","width","geometry","properties","hintContent","iconContent","modules","options","preset","ContactsCard","Image","height","style","padding","marginRight","center","zoom","ErrorBoundary","hasError","info","this","setState","children","Component","Footer","mapDishTypeToDishInCart","dishType","String","imageURL","position","weight","calories","mapApiDishToDishInCart","apiDish","quantity","i","indexOf","addedIngredients","slice","orderedToast","message","autoClose","toast","warn","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","ApiCart","delete","parseString","arr","string","el","join","ListItem","isLogIn","orderDish","Dish","then","res","arrayDishes","Col","Card","text","isIntresting","backgroundImage","backgroundSize","backgroundPosition","Body","Row","md","Title","sm","bottom","xs","display","alignItems","fontSize","marginLeft","Button","PlatoList","platoDishes","dishCategory","SoupList","soupDishes","SaladList","saladDishes","OystersList","oystersDishes","DessertList","desertDishes","DishIngredients","setIngredients","ingridientsItem","ingredient","marginTop","checked","elCopy","copyIngredients","setIngredient","toggleIngredient","lineHeight","ShiftingDish","changeStatus","currentDish","updateIngredients","handleClose","disableIngredientAccept","DishIngridients","updIngredients","disabled","CompletedDish","ingredientList","Modal","Header","CloseButton","window","go","y","intrestingDishes","setIndex","handleSelect","selectedIndex","sliderDishes","paddingLeft","justifyContent","useParams","dishСhangeStatus","setDishСhangeStatus","updatedDish","updIngridients","PATH","MenuRoutes","path","exact","render","ScrollToTop","routePath","useLocation","scrollTo","top","left","behavior","ApiAdmin","newDish","dishId","resp","fieldValue","fieldName","orderState","ShowIngridients","paddingRight","textAlign","AdminDishes","allDishes","border","margin","marginBottom","AddIngredients","Control","e","inputDishIngredients","opacity","cursor","deleteDishIngredients","FilesOperations","buttonRef","useRef","formData","FormData","append","dishName","size","fileURI","setFile","file64","setFileURL","file","setFileData","send","ImgDeplUrl","inputDishImage","current","click","color","flexDirection","toFixed","background","accept","newFile","files","URL","createObjectURL","handleNewDishData","clearForm","setClearForm","setDishName","dishPrice","setDishPrice","dishWeight","setDishWeight","dishCalories","setDishCalories","dishIngredients","setDishIngredients","setDishCategory","dishURL","setDishURL","fileImgIsLoaded","setFileImgIsLoaded","dishDataErr","setDishDataErr","ingredientsStr","inputDishName","preventDefault","inputDishPrice","inputDishWeight","inputDishCalories","FloatingLabel","controlId","label","Select","defaultValue","category","idx","inputDishURL","ingredientId","checkDataForSend","AddDish","OrderedTables","isShowModal","setShowModal","isDeleteButton","setIsDeleteButton","changingFieldValue","setChangingFieldValue","setFieldName","selectedRowId","setSelectedRowId","handleLoad","bookedUsers","closeEditModal","openEditModal","show","onHide","closeButton","updatedBooking","Table","hover","stopPropagation","amountofpeople","backgroundColor","OrdersBooking","updatedOrder","OrdersTakeaway","OrdersDelivery","Orders","setShow","document","querySelector","classList","add","Container","htmlCollection","getElementsByClassName","call","innerText","setClassName","OrderTypeTakeaway","AdminRoutes","MenuHeader","activeKey","activeClassName","borderWidth","Menu","MenuPage","AdminHeader","Admin","AdminPage","useValidation","validations","setEmpty","minLengthError","setMinLengthError","maxLengthError","setMaxLengthError","firstNameError","setFirstNameError","lastNameError","setLastNameError","emailError","setEmailError","phoneNumberError","setPhoneNumberError","passwordError","setPasswordError","inputValid","setInputValid","validation","test","ReserveATableForm","handleBookingData","setDate","timeSlot","setTimeSlot","setTableSize","isTimeInputSkipped","setTimeInputSkipped","isTableInputSkipped","setTableInputSkipped","orderDataError","setOrderDataError","useInput","initialValue","setValue","isDirty","setDirty","valid","onBlur","phoneNumber","userName","isTimeInvalid","isTableInvalid","isPhoneNumberInvalid","isUserNameInvalid","month","getUTCMonth","day","getUTCDate","year","getUTCFullYear","reservOrder","clearIcon","format","minDate","dayAriaLabel","monthAriaLabel","yearAriaLabel","isInvalid","count","key","Floating","htmlFor","checkBookingData","ConfirmReservTable","Text","isCompleteToggle","ApiReserve","Booking","isComplete","setIsComplete","LogInForm","authFailed","setAuthFailed","isEmailInvalid","isPasswordInvalid","Dialog","autoFocus","Error","statusText","catch","handleSubmit","Login","Page404","OrderItem","counter","setCounter","getRemovedIngredients","removedIngredientsArr","onDeleteHandler","Number","readCounterVal","Toggler","radios","checkedBtn","handleRadioValueChange","radioValue","setRadioValue","ButtonGroup","radio","ToggleButton","checkedValue","currentTarget","totalSum","reduce","sum","handleRadioValueClearance","isPaymentSkipped","setPaymentSkipped","isPaymentConfirmed","setPaymentConfirmed","setError","required","Group","Check","toLocaleDateString","ApiDelivery","SearchDelivery","adress","setAdress","getData","suggestions","currentValue","temp","searchValue","DeliveryForm","paymentMethod","setPaymentMethod","isPaymentInputSkipped","setPaymentInputSkipped","setStreet","streetError","setStreetError","setHomeNumber","homeNumberError","setHomeNumberError","setHomePart","setFlat","timeValidation","streetValidation","homeValidation","maxLength","ToggleButtonGroup","adressValues","Object","values","toString","replace","TakeawayForm","UserCart","orderType","setOrderType","cartSectionsClassName","orderCodes","handleClearCart","Cart","Logo","OceanBarHeader","HowItWorks","BookATable","needPhoneCall","setNeedPhoneCall","SliderGallertItem","imgWidth","imgHeight","imgMargin","flexWrap","categoryDish","ControlledCarousel","Carousel","activeIndex","onSelect","Slider","SliderGallery","Home","SignUp","firstName","lastName","isFirstNameInvalid","isLastNameInvalid","SignUpSuccess","SignUpSucess","ApiOrder","DishView","defaultIngredients","defaultListArr","addedListArr","orderId","OrderView","orderDishes","setOrderDishes","apiOrderDishes","dishesCodes","Accordion","eventKey","CurrentOrders","currOrders","setCurrentOrders","apiCurrentOrders","flush","CompletedOrders","doneOrders","setDoneOrders","apiDoneOrders","orderHistory","Tabs","defaultActiveKey","Tab","ShiftingDeliveryAPI","delivery","loading","setHome","userDeliveryData","completedDelivery","changeAbsent","absentDelivery","DeliveryAdress","isChange","setChangeStatus","adressAbsent","setAdressAbsent","PaymentForm","disableStatus","fieldFocus","cvcOnBlur","numberChange","nameChange","isNaN","expiryChange","cvcChange","xl","transform","focused","borderRadius","onFocus","now","returnCard","React","previewCard","card","deleteCard","cardNumber","deleteBankCardTC","MyCreditCards","isAddingCard","setIsAddingCard","cardAbsent","setCardAbsent","changeIsAddingCard","NewBankCardContainer","passwordResetForm","userPersonal","oldPassword","setOldPassword","oldPassCorrect","setOldPassCorrect","retypeNewPass","setRetypeNewPass","showOldPassError","setShowOldPassError","newPassIsEqual","setNewPassIsEqual","showEqualPassError","setShowEqualPassError","passSuccessChanged","setPassSuccessChanged","newUserPassword","oldPassChange","oldPassCheck","changeRetypeNewPass","setNewPass","PasswordReset","shiftingPersonalForm","userPersonalData","completedPersonal","PersonalData","isShifting","UserProfile","Message","orderID","DetailsData","orderingUser","orderDetails","ChoosePaymentCart","myCards","OrderDetailsSection","total","orderedDishes","orderCompleted","item","Confirmation","success","setSuccess","setOrderID","goBack","apiOrderID","isAdmin","setIsAdmin","setPassword","login","setLogin","passIsWrong","setPassIsWrong","inputLogin","inputPassword","SwitchPager","App","handleAuthCheck","newestOnTop","rtl","pauseOnFocusLoss","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f37ac4a3.chunk.js","sourcesContent":["import {createAction} from '@reduxjs/toolkit'\r\nimport {\r\n  DishInCart,\r\n  DishType,\r\n  IUpdQuantity,\r\n  IUpdContent,\r\n} from 'src/common/types/dishesType'\r\n\r\nexport const logIn = createAction<any>('SET_LOG_IN')\r\nexport const logOut = createAction('SET_LOG_OUT')\r\nexport const checkAuth = createAction<any>('CHECK_AUTH')\r\n\r\nexport const addDishToCart = createAction<DishInCart>('ADD_DISH_TO_CART')\r\nexport const removeDishFromCart = createAction<number>('REMOVE_DISH_FROM_CART')\r\nexport const updateDishInCart = createAction<IUpdContent>('UPDATE_DISH_IN-CART')\r\nexport const clearCart = createAction('CLEAR_CART')\r\nexport const plusOneDish = createAction<IUpdQuantity>('PLUS_ONE_DISH')\r\nexport const minusOneDish = createAction<IUpdQuantity>('MINUS_ONE_DISH')\r\n\r\nexport const getDishesFromApiTC = createAction<DishType[]>('GET_DISHES')\r\nexport const addDishesAC = createAction<any>('SET_DISHES')\r\nexport const toggleLoading = createAction<boolean, 'TOGGLE_LOADING'>(\r\n  'TOGGLE_LOADING'\r\n)\r\n\r\nexport const getUserPersonalDataTC = createAction<any>('GET_USER_DATA')\r\nexport const setPersonalUsersData = createAction<any>('SET_USER_DATA')\r\nexport const getUserAC = createAction<any>('SET_USER')\r\nexport const removeUser = createAction('REMOVE_USER')\r\n\r\nexport const setUsersBookingTables = createAction<any>(\r\n  'SET_USERS_BOOKING-TABLES'\r\n)\r\nexport const setUsersOrders = createAction<any>(\r\n  'SET_USERS_ORDERS'\r\n)\r\n\r\nexport const updateUsersBookingTables = createAction<any>(\r\n  'UPDATE_USERS_BOOKING-TABLES'\r\n)\r\nexport const deleteUserBookingTable = createAction<any>(\r\n  'DELETE_USER_BOOKING-TABLE'\r\n)\r\nexport const deleteUserOrder = createAction<any>(\r\n  'DELETE_USER_ORDER'\r\n)\r\n\r\nexport const updateUserOrder = createAction<any>(\r\n  'UPDATE_USER_ORDER'\r\n)\r\n\r\nexport const addOrder = createAction<any>('ADD_ORDER')\r\nexport const clearOrders = createAction<any>('CLEAR_ORDERS')\r\n\r\nexport const setBankCardTC = createAction<any>('SET_BANKCARD')\r\nexport const addBankCardAC = createAction<any>('STORE_BANKCARD')\r\nexport const deleteBankCardTC = createAction<any>('DEL_BANKCARD')\r\nexport const deleteBankCardAC = createAction<any>('DELETE_BANKCARD')\r\n\r\nexport const toggleLoadingUser = createAction<boolean, 'TOGGLE_LOADING_USER'>(\r\n  'TOGGLE_LOADING_USER'\r\n)\r\n","import {createReducer} from '@reduxjs/toolkit'\r\nimport Cookies from 'js-cookie'\r\n\r\nimport {logIn, logOut, checkAuth} from '../actions'\r\n\r\ninterface IUserState {\r\n  user: any | null,\r\n  isAuthorized: boolean\r\n}\r\n\r\nconst initialState: IUserState = {\r\n  user: null,\r\n  isAuthorized: !!Cookies.get('token')\r\n}\r\n\r\nconst authReducer = createReducer(initialState, (builder) => {\r\n  builder\r\n    .addCase(logIn, (state, action) => {\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n        isAuthorized: true,\r\n      }\r\n    })\r\n    .addCase(logOut, (state, action) => {\r\n      return {\r\n        ...state,\r\n        user: null,\r\n        isAuthorized: false\r\n      }\r\n    })\r\n    .addCase(checkAuth, (state, action) => {\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n        isAuthorized: true\r\n      }\r\n    })\r\n})\r\n\r\nexport default authReducer\r\n","import {createReducer} from '@reduxjs/toolkit'\r\n\r\nimport {\r\n  addDishToCart,\r\n  removeDishFromCart,\r\n  updateDishInCart,\r\n  clearCart,\r\n  minusOneDish,\r\n  plusOneDish,\r\n} from '../actions'\r\nimport {DishInCart} from '../../common/types/dishesType'\r\n\r\ninterface IUserState {\r\n  dishes: Array<DishInCart>\r\n}\r\n\r\nexport const initialState: IUserState = {\r\n  dishes: [],\r\n}\r\n\r\nconst cartReducer = createReducer(initialState, (builder) => {\r\n  builder\r\n    .addCase(addDishToCart, (state, action) => {\r\n      const updState = {...state}\r\n      updState.dishes = [...state.dishes]\r\n      updState.dishes.push(action.payload)\r\n      return updState\r\n    })\r\n\r\n    .addCase(removeDishFromCart, (state, action) => {\r\n      const id = action.payload\r\n      const updState = {...state}\r\n      updState.dishes = updState.dishes.filter((dish) => dish.id !== id)\r\n      return updState\r\n    })\r\n\r\n    .addCase(updateDishInCart, (state, action) => {\r\n      const index = state.dishes.findIndex(\r\n        (dish) => dish.id === action.payload.id\r\n      )\r\n      state.dishes[index].ingredients = action.payload.ingredients\r\n    })\r\n\r\n    .addCase(clearCart, (state, action) => {\r\n      return initialState\r\n    })\r\n\r\n    .addCase(plusOneDish, (state, action) => {\r\n      const index = state.dishes.findIndex(\r\n        (dish) => dish.id === action.payload.id\r\n      )\r\n      state.dishes[index].numberOfDishes = action.payload.numberOfDishes\r\n      return state\r\n    })\r\n\r\n    .addCase(minusOneDish, (state, action) => {\r\n      const index = state.dishes.findIndex(\r\n        (dish) => dish.id === action.payload.id\r\n      )\r\n      state.dishes[index].numberOfDishes = action.payload.numberOfDishes\r\n      return state\r\n    })\r\n})\r\n\r\nexport default cartReducer\r\n","import axios from 'axios'\r\n\r\nexport const url = 'http://13.51.224.150:3000/api'\r\n\r\nexport const instance = axios.create({\r\n  baseURL: url,\r\n})\r\n\r\nexport const API = {\r\n  getAllDish() {\r\n    return instance.get('menu/')\r\n  },\r\n}\r\n","import {createReducer} from '@reduxjs/toolkit'\r\nimport {AnyAction} from 'redux'\r\nimport {ThunkAction} from 'redux-thunk'\r\n\r\nimport {RootState} from '../store'\r\nimport {addDishesAC, toggleLoading} from '../actions'\r\nimport {API} from '../../api/index'\r\nimport {\r\n  DishType,\r\n  IngredientType,\r\n  InitialMenuStateType,\r\n} from '../../common/types/dishesType'\r\n\r\nconst initialState: InitialMenuStateType = {\r\n  dishes: [],\r\n  isLoading: false,\r\n}\r\n\r\nconst dishesReducer = createReducer(initialState, (builder) => {\r\n  builder\r\n    .addCase(addDishesAC, (state, action) => {\r\n      return {\r\n        dishes: action.payload,\r\n        isLoading: false,\r\n      }\r\n    })\r\n    .addCase(toggleLoading, (state, action) => {\r\n      return {\r\n        ...state,\r\n        isLoading: action.payload,\r\n      }\r\n    })\r\n})\r\n\r\nexport default dishesReducer\r\n\r\nexport const getDishesFromApiTC =\r\n  (): ThunkAction<void, RootState, unknown, AnyAction> => async (dispatch) => {\r\n    dispatch(toggleLoading(true))\r\n    try {\r\n      const asyncResp: any = await API.getAllDish()\r\n      // @ts-ignore\r\n      const restructDishes: DishType[] = asyncResp.data.data.dishes.map(\r\n        (dish: DishType) => {\r\n          const myObj: Array<IngredientType> = []\r\n          // @ts-ignore\r\n          dish.ingredients.split(';').forEach((ingr) => {\r\n            myObj.push({name: ingr, isAdded: true})\r\n          })\r\n          return {...dish, ingredients: myObj}\r\n        }\r\n      )\r\n      dispatch(addDishesAC(restructDishes))\r\n    } catch (err) {\r\n      dispatch(toggleLoading(false))\r\n    }\r\n  }\r\n","import axios, {AxiosResponse, AxiosRequestConfig} from 'axios'\r\nimport Cookies from 'js-cookie'\r\n\r\nimport {url as API_URL} from './index'\r\nimport {IAuthResponse} from '../common/types/authResponseTypes'\r\n\r\nexport const $api = axios.create({\r\n  baseURL: API_URL,\r\n})\r\n\r\nexport const TOKEN_EXPIRATION_TIME =\r\n  new Date(new Date().getTime() + 30 * 60 * 1000)\r\n\r\n$api.interceptors.request.use((config: AxiosRequestConfig) => {\r\n  if (config.headers) {\r\n    config.headers.Authorization = `Bearer ${Cookies.get('token')}`\r\n  }\r\n  return config\r\n})\r\n\r\n$api.interceptors.response.use(\r\n  (config: AxiosRequestConfig) => {\r\n    return config\r\n  },\r\n  async (error) => {\r\n    const originalRequest = error.config\r\n    if (\r\n      error.response.status === 401 &&\r\n      error.config &&\r\n      !error.config._isRetry\r\n    ) {\r\n      originalRequest._isRetry = true\r\n      try {\r\n        const response = await axios.get<IAuthResponse>(\r\n          `${API_URL}/users/refreshUser`,\r\n          {\r\n            withCredentials: true\r\n          }\r\n        )\r\n        Cookies.set(\r\n          'token',\r\n          response.data.accessToken,\r\n          {expires: TOKEN_EXPIRATION_TIME}\r\n        )\r\n        Cookies.set(\r\n          'refreshToken',\r\n          response.data.refreshToken,\r\n          {expires: TOKEN_EXPIRATION_TIME}\r\n        )\r\n        return $api.request(originalRequest)\r\n      } catch (e) {\r\n        console.log('is not authorized!')\r\n      }\r\n    }\r\n    throw error\r\n  }\r\n)\r\n\r\nexport const ApiAuth = {\r\n  async login(\r\n    email: string,\r\n    password: string\r\n  ): Promise<AxiosResponse<IAuthResponse>> {\r\n    return $api.post<IAuthResponse>('/users/auth', {\r\n      email,\r\n      password\r\n    })\r\n  },\r\n\r\n  async register(\r\n    name: string,\r\n    secondname: string,\r\n    email: string,\r\n    password: string,\r\n    phone: string\r\n  ): Promise<AxiosResponse<IAuthResponse>> {\r\n    return $api.post<IAuthResponse>('/users/register', {\r\n      name,\r\n      secondname,\r\n      email,\r\n      password,\r\n      phone\r\n    })\r\n  },\r\n\r\n  async logout(): Promise<void> {\r\n    return $api.post('/users/logout')\r\n  },\r\n}\r\n","import Cookies from 'js-cookie'\r\n\r\nimport {DeliveryAdressType} from '../../src/common/types/userTypes'\r\nimport {$api} from './ApiAuth'\r\n\r\nexport const ApiUser = {\r\n  getUserPersonalData(userId?:number) {\r\n    const token = Cookies.get('token')\r\n    {\r\n      return Promise.resolve(\r\n        $api.get(`users/${userId}`,\r\n          {headers: {Authorization: `Bearer ${token}`}}\r\n        )\r\n      )\r\n    }\r\n  },\r\n\r\n  getUserDeliveryData() {\r\n    return $api.get('users/')\r\n  },\r\n\r\n  setUserPersonalData(userData:any, tokenOld:any) {\r\n    const token = Cookies.get('token')\r\n    return Promise.resolve(\r\n      $api.patch( 'users/1', userData,\r\n        {headers: {Authorization: `Bearer ${token}`}}\r\n      )\r\n    )\r\n  },\r\n\r\n  setUserDeliveryData(deliveryData:DeliveryAdressType) {\r\n    return $api.patch('users/', {deliveryData})\r\n  },\r\n  checkUserPassword(token: string | undefined,\r\n    body?: {password: string, email: string}\r\n  ) {\r\n    return Promise.resolve(\r\n      $api.post(`users/auth`, body,\r\n        {headers: {Authorization: `Bearer ${token}`}}\r\n      )\r\n    )\r\n  },\r\n  changeUserPassword(token: string | undefined,\r\n    userId: number,\r\n    body?: {password: string}\r\n  ) {\r\n    return Promise.resolve(\r\n      $api.patch(`users/${userId}`, body,\r\n        {headers: {Authorization: `Bearer ${token}`}}\r\n      )\r\n    )\r\n  }\r\n}\r\n\r\n","import {createReducer} from '@reduxjs/toolkit'\r\nimport {AnyAction} from 'redux'\r\nimport {RootState} from '../store'\r\nimport {ThunkAction} from 'redux-thunk'\r\nimport {getUserAC, toggleLoadingUser, removeUser} from '../actions'\r\nimport {ApiUser} from '../../api/ApiUser'\r\nimport {UserType} from '../../common/types/userTypes'\r\nimport {DeliveryAdressType} from '../../common/types/userTypes'\r\n\r\ntype InitialStateType={\r\n userProfile:UserType & DeliveryAdressType,\r\n isLoading: boolean\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n\r\n  userProfile: {\r\n    'id': 1,\r\n    'name': '',\r\n    'secondname': '',\r\n    'email': '',\r\n    'phone': '',\r\n    'city': 'Минск',\r\n    'street': '',\r\n    'homeNumber': '',\r\n    'homePart': '',\r\n    'flat': ''\r\n  },\r\n  isLoading: false\r\n}\r\n\r\nconst userReducer = createReducer(initialState, (builder) => {\r\n  builder\r\n    .addCase(getUserAC, (state, action) => {\r\n      return {\r\n        ...state, userProfile: action.payload,\r\n      }\r\n    })\r\n    .addCase(toggleLoadingUser, (state, action) => {\r\n      return {\r\n        ...state,\r\n        isLoading: action.payload,\r\n      }\r\n    })\r\n    .addCase(removeUser, (state, action) => {\r\n      return initialState\r\n    })\r\n})\r\n\r\nexport default userReducer\r\n\r\nexport const getUserPersonalDataTC =\r\n  (token?:string|undefined): ThunkAction<void, RootState, unknown, AnyAction> =>\r\n    async (dispatch) => {\r\n      dispatch(toggleLoadingUser(true))\r\n      try {\r\n        const asyncResp = await ApiUser.getUserPersonalData()\r\n        // @ts-ignore\r\n        const userData = asyncResp.data.data\r\n        dispatch(getUserAC(userData))\r\n        dispatch(toggleLoadingUser(false))\r\n      } catch (err) {\r\n        dispatch(toggleLoadingUser(false))\r\n        console.log(err)\r\n      }\r\n    }\r\n\r\nexport const setUserPersonalDataTC =\r\n  (userData: any, token?:string):\r\n   ThunkAction<void, RootState, unknown, AnyAction> =>\r\n    async (dispatch) => {\r\n      dispatch(toggleLoadingUser(true))\r\n      try {\r\n        const asyncResp: any =\r\n         await ApiUser.setUserPersonalData(userData, token)\r\n        const response = asyncResp.data.data.user\r\n        dispatch(getUserAC(response))\r\n        dispatch(toggleLoadingUser(false))\r\n      } catch (err) {\r\n        dispatch(toggleLoadingUser(false))\r\n        console.log(err)\r\n      }\r\n    }\r\n","import {createReducer} from '@reduxjs/toolkit'\r\nimport {AnyAction} from 'redux'\r\nimport {RootState} from '../store'\r\nimport {ThunkAction} from 'redux-thunk'\r\nimport {addBankCardAC, toggleLoadingUser, deleteBankCardAC} from '../actions'\r\nimport {userCardsType} from '../../common/types/bankCardTypes'\r\nimport {BankCardType} from '../../common/types/bankCardTypes'\r\n\r\ntype InitialStateType={\r\n  userCards: userCardsType,\r\n  isLoading: boolean\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n  userCards: [\r\n    {cvc: '567',\r\n      expiry: '1221',\r\n      focus: '',\r\n      name: 'Alain Ducasse',\r\n      number: '2343534453644564',\r\n      id: 123456789\r\n    }\r\n  ],\r\n  isLoading: false\r\n}\r\n\r\nconst bankCardReducer = createReducer(initialState, (builder) => {\r\n  builder\r\n    .addCase(addBankCardAC, (state, action) => {\r\n      state.userCards.push(action.payload)\r\n    }\r\n    )\r\n    .addCase(deleteBankCardAC, (state, action) => {\r\n      state.userCards.splice(action.payload, 1)\r\n    }\r\n    )\r\n    .addCase(toggleLoadingUser, (state, action) => {\r\n      return {\r\n        ...state,\r\n        isLoading: action.payload,\r\n      }\r\n    })\r\n})\r\n\r\nexport default bankCardReducer\r\n\r\nexport const setBankCardTC =\r\n  (bankCard:BankCardType): ThunkAction<void, RootState, unknown, AnyAction> =>\r\n    async (dispatch) => {\r\n      dispatch(addBankCardAC(bankCard))\r\n    }\r\n\r\nexport const deleteBankCardTC =\r\n  (cardNumber: number): ThunkAction<void, RootState, unknown, AnyAction> =>\r\n    async (dispatch) => {\r\n      dispatch(deleteBankCardAC(cardNumber))\r\n    }\r\n\r\n\r\n","import {createReducer} from '@reduxjs/toolkit'\r\nimport {CommonOrderType, IOrderResponse} from '../../common/types/orderType'\r\nimport {addOrder} from '../actions'\r\n\r\nconst initialState: CommonOrderType | {orders: IOrderResponse[]}= {\r\n  address: {\r\n    city: '',\r\n    street: '',\r\n    homeNumber: '',\r\n    homePart: '',\r\n    flat: '',\r\n  },\r\n\r\n  date: '',\r\n  tableSize: '',\r\n  time: '',\r\n  paymentType: '',\r\n  price: ''\r\n}\r\n\r\nconst orderReducer = createReducer(initialState, (builder) => {\r\n  builder.addCase(addOrder, (state, action) => {\r\n    return action.payload\r\n  })\r\n})\r\n\r\nexport default orderReducer\r\n","import {createReducer} from '@reduxjs/toolkit'\r\nimport {InitialTablesType} from '../../common/types/bookingTypes'\r\nimport {\r\n  deleteUserBookingTable,\r\n  setUsersBookingTables,\r\n  updateUsersBookingTables,\r\n} from '../actions'\r\n\r\nconst initialState: InitialTablesType = {\r\n  bookings: [],\r\n}\r\n\r\nconst usersBookingTablesReducer = createReducer(initialState, (builder) => {\r\n  builder\r\n    .addCase(setUsersBookingTables, (state, action) => {\r\n      return {\r\n        bookings: action.payload,\r\n      }\r\n    })\r\n    .addCase(updateUsersBookingTables, (state, action) => {\r\n      const id = state.bookings.findIndex(\r\n        (table) => table.id === action.payload.id\r\n      )\r\n      state.bookings[id] = action.payload.booking\r\n    })\r\n    .addCase(deleteUserBookingTable, (state, action) => {\r\n      const id = action.payload\r\n      const updState = {...state}\r\n      updState.bookings = updState.bookings.filter((table) => table.id != id)\r\n      return updState\r\n    })\r\n})\r\n\r\nexport default usersBookingTablesReducer\r\n","import {createReducer} from '@reduxjs/toolkit'\r\nimport {InitialOrdersType} from '../../common/types/bookingTypes'\r\nimport {deleteUserOrder, setUsersOrders, updateUserOrder} from '../actions'\r\n\r\nconst initialState: InitialOrdersType = {\r\n  orders: [],\r\n}\r\n\r\nconst usersOrdersReducer = createReducer(initialState, (builder) => {\r\n  builder\r\n    .addCase(setUsersOrders, (state, action) => {\r\n      return {\r\n        orders: action.payload,\r\n      }\r\n    })\r\n    .addCase(deleteUserOrder, (state, action) => {\r\n      const id = action.payload\r\n      const updState = {...state}\r\n      updState.orders = updState.orders.filter((order) => order.id != id)\r\n      return updState\r\n    })\r\n    .addCase(updateUserOrder, (state, action) => {\r\n      const id = state.orders.findIndex(\r\n        (order) => order.id === action.payload.id\r\n      )\r\n      state.orders[id] = action.payload.order\r\n    })\r\n})\r\n\r\nexport default usersOrdersReducer\r\n","import {combineReducers} from 'redux'\r\n\r\nimport authReducer from './authReducer'\r\nimport cartReducer from './cartReducer'\r\nimport dishesReducer from './dishesReducer'\r\nimport userReducer from './userReducer'\r\nimport bankCardReducer from './bankCardReducer'\r\nimport orderReducer from './orderReducer'\r\nimport usersBookingTablesReducer from './usersBookingTablesReducer'\r\nimport usersOrdersReducer from './usersOrdersReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  cart: cartReducer,\r\n  dish: dishesReducer,\r\n  user: userReducer,\r\n  order: orderReducer,\r\n  bankCard: bankCardReducer,\r\n  bookings: usersBookingTablesReducer,\r\n  orders: usersOrdersReducer\r\n})\r\n\r\nexport type AppStoreType = ReturnType<typeof rootReducer>\r\nexport default rootReducer\r\n","import {configureStore} from '@reduxjs/toolkit'\r\nimport rootReducer from './reducers/rootReducer'\r\n\r\nexport const store = configureStore({reducer: rootReducer})\r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\nexport type AppDispatch = typeof store.dispatch\r\n","/* eslint-disable no-unused-vars */\r\nimport {TypedUseSelectorHook, useDispatch, useSelector} from 'react-redux'\r\nimport type {RootState, AppDispatch} from './store'\r\nimport {Middleware} from 'redux'\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector\r\n\r\nexport const exampleMiddleware: Middleware<{},\r\nRootState> = (Api) => (next) => (action) => {\r\n  const state = Api.getState()\r\n}\r\n","import {Link, useHistory} from 'react-router-dom'\r\nimport {NavDropdown} from 'react-bootstrap'\r\nimport Cookies from 'js-cookie'\r\n\r\nimport {ApiAuth} from '../../../../api/ApiAuth'\r\n\r\nimport {logOut, removeUser} from '../../../../redux/actions'\r\nimport {useAppSelector, useAppDispatch} from '../../../../redux/hooks'\r\n\r\nimport './dropDown.scss'\r\n\r\nconst DropDownNavBar = () => {\r\n  const history = useHistory()\r\n  const dispatch = useAppDispatch()\r\n  const isAuthorized = useAppSelector((state) => state.auth.isAuthorized)\r\n\r\n  const handleClose = () => {\r\n    ApiAuth.logout()\r\n    Cookies.remove('token')\r\n    Cookies.remove('refreshToken')\r\n    dispatch(logOut())\r\n    dispatch(removeUser())\r\n    history.push('/')\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <NavDropdown\r\n        align={{lg: 'end'}}\r\n        title={<i className='far fa-user icon-height'></i>}\r\n        id='navbarScrollingDropdown'\r\n        className={!isAuthorized ? 'nav-item dropdown' : 'authorized'}\r\n      >\r\n        <NavDropdown.Item href='/login'>Войти</NavDropdown.Item>\r\n        <NavDropdown.Item href='/signup'>Зарегистрироваться</NavDropdown.Item>\r\n      </NavDropdown>\r\n\r\n      {/* for authorised user */}\r\n      <NavDropdown\r\n        align={{lg: 'end'}}\r\n        title={<i className='far fa-user icon-height user-signedin'></i>}\r\n        id='navbarScrollingDropdown'\r\n        className={isAuthorized ? 'authorized change' : 'authorized'}\r\n      >\r\n        <NavDropdown.Item as={Link} to='/profile'>Профиль</NavDropdown.Item>\r\n        <NavDropdown.Item as={Link} to='/' onClick={() => handleClose()}>\r\n          Выйти из профиля\r\n        </NavDropdown.Item>\r\n      </NavDropdown>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DropDownNavBar\r\n","/* eslint-disable require-jsdoc */\r\nimport {useEffect, useState} from 'react'\r\n\r\nconst useDebounce = (value: string, delay: number) => {\r\n  const [debouncedValue, setDebouncedValue] = useState(value)\r\n\r\n  useEffect(\r\n    () => {\r\n      const handler = setTimeout(() => {\r\n        setDebouncedValue(value)\r\n      }, delay)\r\n\r\n      return () => {\r\n        clearTimeout(handler)\r\n      }\r\n    },\r\n\r\n    [value]\r\n  )\r\n\r\n  return debouncedValue\r\n}\r\n\r\nexport default useDebounce\r\n","/* eslint-disable max-len */\r\nimport './Spinner.scss'\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <>\r\n      <div className='spinner-layout'>\r\n        <img src='images/Spinner200px.svg'\r\n          className='spinner-img'\r\n          alt='Loading'>\r\n        </img>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Spinner\r\n","import axios from 'axios'\r\nimport {useEffect, useState} from 'react'\r\nimport {useHistory} from 'react-router-dom'\r\nimport {Form, FormControl} from 'react-bootstrap'\r\nimport {useClickOutside} from 'react-click-outside-hook'\r\n\r\nimport useDebounce from '../../../../utils/useDebounce'\r\nimport Spinner from '../../../Spinner/Spinner'\r\nimport {url} from '../../../../api'\r\n\r\nimport './search.scss'\r\n\r\n\r\ntype Dish = {\r\n  id: string\r\n  name: string\r\n  price: number\r\n  weight: string\r\n  calories: string\r\n  imageURL: string\r\n  ingredients: string\r\n  dishCategory: string\r\n}\r\n\r\ntype ResponseType = {\r\n  data: {\r\n    data: {\r\n      dishes: Array<Dish>\r\n    }\r\n  }\r\n}\r\n\r\nconst SearchField = () => {\r\n  const history = useHistory()\r\n  const [ref, isClickedOutside] = useClickOutside()\r\n\r\n  const [dishes, setMenu] = useState<Dish[]>([])\r\n  const [isOpen, setIsOpen] = useState<boolean>(false)\r\n  const [searchQuery, setSearchQuery] = useState<string>('')\r\n  const [isLoading, setIsLoading] = useState<boolean>(false)\r\n\r\n  const noQuery = searchQuery && searchQuery.length === 0\r\n  const isEmpty = !dishes || dishes.length === 0\r\n\r\n  const debouncedSearchQuery = useDebounce(searchQuery, 1000)\r\n\r\n  useEffect(() => {\r\n    const getMenu = async (query: string) => {\r\n      setSearchQuery(query)\r\n      setIsOpen(true)\r\n      setIsLoading(true)\r\n      if (!query || query.trim() === '') return\r\n\r\n      const response: ResponseType = await axios.get(\r\n        `${url}/menu/?name=${searchQuery}`\r\n      )\r\n      setIsLoading(false)\r\n      setMenu(response.data.data.dishes)\r\n    }\r\n    getMenu(debouncedSearchQuery)\r\n    setIsOpen(false)\r\n  }, [debouncedSearchQuery])\r\n\r\n  useEffect(() => {\r\n    if (searchQuery) {\r\n      setIsOpen(true)\r\n      setIsLoading(true)\r\n      const filteredDishes = dishes.filter((dish: Dish) =>\r\n        dish.name.toLowerCase().includes(searchQuery.toLowerCase())\r\n      )\r\n\r\n      setMenu(filteredDishes)\r\n    } else {\r\n      setIsOpen(false)\r\n      setIsLoading(false)\r\n    }\r\n  }, [debouncedSearchQuery])\r\n\r\n  useEffect(() => {\r\n    if (isClickedOutside) {\r\n      setIsOpen(false)\r\n      setSearchQuery('')\r\n      setIsLoading(false)\r\n    }\r\n  }, [isClickedOutside])\r\n\r\n  const itemClickHandler = (id: string) => {\r\n    dishes.find((dish: Dish) => dish.id === id)\r\n    setSearchQuery('')\r\n    setIsOpen(false)\r\n    history.push(`/dishes/${id} `)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Form className='d-flex mx-6 d-flex-pos' ref={ref}>\r\n        <FormControl\r\n          type='text'\r\n          placeholder='Search...'\r\n          className='form-control-pad nav-input '\r\n          aria-label='Search'\r\n          value={searchQuery}\r\n          onChange={(event) => {\r\n            setSearchQuery(event.target.value)\r\n          }}\r\n        />\r\n\r\n        {isLoading && <Spinner />}\r\n        {noQuery && isEmpty && isOpen && (\r\n          <ul className='autocomplete autocomplete-warn'>\r\n            Начните вводить название блюда\r\n          </ul>\r\n        )}\r\n\r\n        {isOpen && isEmpty && !isLoading && (\r\n          <ul className='autocomplete autocomplete-warn'>\r\n            Совпадений не найдено для &quot;{debouncedSearchQuery}&quot;\r\n          </ul>\r\n        )}\r\n\r\n        {isOpen && !isEmpty && !isLoading && (\r\n          <ul className='autocomplete'>\r\n            {dishes.map((val: Dish, index: number) => {\r\n              return (\r\n                <li\r\n                  key={index}\r\n                  className='autocomplete__item'\r\n                  onClick={() => itemClickHandler(val.id)}\r\n                >\r\n                  {val.name}\r\n                </li>\r\n              )\r\n            })}\r\n          </ul>\r\n        )}\r\n\r\n        <i className='fas fa-search icon-height search-icon'></i>\r\n      </Form>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SearchField\r\n","import React from 'react'\r\nimport {Nav, Navbar} from 'react-bootstrap'\r\nimport {Link} from 'react-router-dom'\r\nimport DropDownNavBar from './DropDownNavBar/DropDown'\r\nimport SearchField from './Search/Search'\r\n\r\nimport './navBar.scss'\r\n\r\nconst NavBarComponent: React.FC = () => {\r\n  return (\r\n    <>\r\n      <Navbar\r\n        bg='dark'\r\n        variant={'dark'}\r\n        expand='xxl'\r\n        fixed='top'\r\n      >\r\n        <Navbar.Brand as={Link} to='/' className='navbar-brand-mr'>\r\n          Ocean Bar\r\n        </Navbar.Brand>\r\n\r\n        <Navbar.Toggle aria-controls='navbarScroll' />\r\n        <Navbar.Collapse\r\n          id='navbarScroll'\r\n          className='justify-content-between mr-2'\r\n        >\r\n          <Nav className='mr-auto m-3 my-lg-0' navbarScroll>\r\n            <Nav.Link as={Link} to={'/menu'} className='nav-link-mr'>\r\n              Меню\r\n            </Nav.Link>\r\n            <Nav.Link as={Link} to={'/booking-table'} className='nav-link-mr'>\r\n              Забронировать стол\r\n            </Nav.Link>\r\n          </Nav>\r\n\r\n          <Nav\r\n            className='d-flex justify-content-end\r\n            mr-auto m-3 my-lg-0 navbar-nav-scroll'\r\n          >\r\n            <SearchField />\r\n\r\n            <Nav.Link as={Link} to={'/cart'} className='nav-link-icon'>\r\n              <i className='fas fa-shopping-basket icon-height'></i>\r\n            </Nav.Link>\r\n\r\n            <DropDownNavBar />\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NavBarComponent\r\n","import React from 'react'\r\nimport {YMaps, Map, Placemark, ZoomControl} from 'react-yandex-maps'\r\n\r\ninterface IMapState {\r\n  center: number[],\r\n  zoom: number\r\n}\r\n\r\ninterface ICustomMapProps {\r\n  mapState: IMapState\r\n};\r\n\r\nconst CustomMap: React.FunctionComponent<ICustomMapProps> = (props) => {\r\n  return (\r\n    <div className='custom-map'>\r\n      <YMaps>\r\n        <Map state={props.mapState} width='100%'>\r\n          <Placemark\r\n            geometry={[53.901573, 27.549749]}\r\n            properties={{\r\n              hintContent: 'ул. Революционная, 17',\r\n              iconContent: 'Ocean bar'\r\n            }}\r\n            modules={['geoObject.addon.hint']}\r\n            options={{\r\n              preset: 'islands#redStretchyIcon',\r\n            }}\r\n          />\r\n          <ZoomControl />\r\n        </Map>\r\n      </YMaps>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CustomMap\r\n","\r\nimport {Image, Nav} from 'react-bootstrap'\r\n\r\nimport CustomMap from '../CustomMap/CustomMap'\r\n\r\nimport './ContactsCard.scss'\r\n\r\nconst ContactsCard = () => {\r\n  return (\r\n    <>\r\n      <div className='contacts-card'>\r\n        <div className='container'>\r\n          <div className='col'>\r\n            <div className='title'>Контакты</div>\r\n            <div className='contacts'>\r\n              <div className='contact-item'>\r\n                <Image\r\n                  src='images/icons/location-icon.svg'\r\n                  alt='address'\r\n                  width={20}\r\n                  height={20}\r\n                />\r\n                <span> ул. Революционная д. 17, Минск, Беларусь</span>\r\n              </div>\r\n              <div className='contact-item'>\r\n                <Image\r\n                  src='images/icons/phone-icon.svg'\r\n                  alt='phone'\r\n                  width={20}\r\n                  height={20}\r\n                />\r\n                <span> +375 29 123 45 67</span>\r\n              </div>\r\n              <div className='contact-item'>\r\n                <Image\r\n                  src='images/icons/clock-icon.svg'\r\n                  alt='timetable'\r\n                  width={20}\r\n                  height={20}\r\n                />\r\n                <span> Пн-Вс 08:00 - 23:00</span>\r\n              </div>\r\n            </div>\r\n            <div className='socials'>\r\n              <Nav>\r\n                <Nav.Item>\r\n                  <Nav.Link\r\n                    href='https://www.instagram.com/'\r\n                    target='_blank'\r\n                    style={{padding: 0, marginRight: '7px'}}\r\n                  >\r\n                    <Image\r\n                      src='images/socials/instagram.png'\r\n                      alt='instagram'\r\n                      width={30}\r\n                      height={30}\r\n                    />\r\n                  </Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                  <Nav.Link\r\n                    href='https://www.facebook.com/'\r\n                    target='_blank'\r\n                    style={{padding: 0}}\r\n                  >\r\n                    <Image\r\n                      src='images/socials/facebook.png'\r\n                      alt='facebook'\r\n                      width={30}\r\n                      height={30}\r\n                    />\r\n                  </Nav.Link>\r\n                </Nav.Item>\r\n              </Nav>\r\n            </div>\r\n          </div>\r\n\r\n          <div className='col'>\r\n            <div className='title'>Наше приложение Ocean bar</div>\r\n            <div className='description'>\r\n              <span>\r\n                позволяет забронировать стол, выбрать еду и оформить заказ в\r\n                несколько касаний\r\n              </span>\r\n            </div>\r\n            <div className='socials'>\r\n              <Nav className='justify-content-flex-start'>\r\n                <Nav.Item>\r\n                  <Nav.Link\r\n                    href='https://play.google.com/store'\r\n                    target='_blank'\r\n                    style={{padding: 0}}\r\n                  >\r\n                    <Image\r\n                      src='images/socials/google-play.png'\r\n                      alt='google-play'\r\n                      width={146}\r\n                      height={56}\r\n                    />\r\n                  </Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                  <Nav.Link\r\n                    href='https://www.apple.com/app-store/'\r\n                    target='_blank'\r\n                    style={{padding: 0}}\r\n                  >\r\n                    <Image\r\n                      src='images/socials/app-store.png'\r\n                      alt='app-store'\r\n                      width={146}\r\n                      height={56}\r\n                    />\r\n                  </Nav.Link>\r\n                </Nav.Item>\r\n              </Nav>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <CustomMap mapState={{center: [53.901573, 27.549749], zoom: 16}} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ContactsCard\r\n","import {Component} from 'react'\r\nimport './ErrorBoundary.scss'\r\ninterface IState {\r\n  hasError: boolean\r\n}\r\n\r\n// eslint-disable-next-line require-jsdoc\r\nexport default class ErrorBoundary extends Component<any, IState> {\r\n  state = {\r\n    hasError: false,\r\n  }\r\n  // eslint-disable-next-line require-jsdoc\r\n  componentDidCatch(error: any, info: {}) {\r\n    this.setState({hasError: true})\r\n  }\r\n\r\n  // eslint-disable-next-line require-jsdoc\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return (\r\n        <div className='App'>\r\n          <p className={'errorBound'}>Ой! Произошла ошибка :(</p>\r\n        </div>\r\n      )\r\n    } else {\r\n      return this.props.children\r\n    }\r\n  }\r\n}\r\n","\r\nimport './Footer.scss'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className='footer'>\r\n      <div className='container'>\r\n        <div className='footer-row'>\r\n          <div className='title'>\r\n            <span>Ocean bar</span>\r\n          </div>\r\n          <div className='links'>\r\n            <div className='links-col'>\r\n              <span>Меню</span>\r\n              <span>Оформить заказ</span>\r\n              <span>Забронировать стол</span>\r\n              <span>Корзина</span>\r\n            </div>\r\n            <div className='links-col'>\r\n              <span>Профиль</span>\r\n              <span>Условия пользования</span>\r\n              <span>Политика конфиденциальности</span>\r\n              <span>Политика cookies</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='footer-row'>\r\n          <span>© All rights reserved</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Footer\r\n","import {DishType, DishInCart, ApiDish} from '../common/types/dishesType'\r\n\r\nexport const mapDishTypeToDishInCart = (dishType: DishType): DishInCart => {\r\n  return {\r\n    id: dishType.id,\r\n    name: dishType.name,\r\n    price: String(dishType.price),\r\n    imageURL: dishType.imageURL,\r\n    numberOfDishes: 1,\r\n    ingredients: dishType.ingredients,\r\n    position: dishType.id,\r\n    weight: dishType.weight,\r\n    calories: dishType.calories,\r\n  }\r\n}\r\n\r\nexport const mapApiDishToDishInCart = (apiDish: ApiDish): DishInCart => {\r\n  return {\r\n    id: apiDish.id,\r\n    name: apiDish.dish.name,\r\n    price: String(apiDish.dish.price),\r\n    imageURL: apiDish.dish.imageURL,\r\n    numberOfDishes: apiDish.quantity,\r\n    ingredients:\r\n      apiDish.dish.ingredients.split(';').map((i: string) =>({\r\n        name: i,\r\n        isAdded: apiDish.ingredients.indexOf(i) !== -1,\r\n      })),\r\n    position: apiDish.id,\r\n    weight: apiDish.dish.weight,\r\n    calories: apiDish.dish.calories,\r\n    addedIngredients: apiDish.ingredients.slice(1, -1),\r\n  }\r\n}\r\n","import {toast} from 'react-toastify'\r\n\r\nimport '!style-loader!css-loader!react-toastify/dist/ReactToastify.css'\r\n\r\nexport const orderedToast = (message: string, autoClose?: number) => {\r\n  toast.warn(message, {\r\n    position: 'top-center',\r\n    autoClose: autoClose || 2000,\r\n    hideProgressBar: false,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n    // need to look at problem with TS\r\n    // icon: false,\r\n  })\r\n}\r\n","import {\r\n  ApiDish,\r\n  DishFromBackAfterAdding,\r\n  UpdatedDish,\r\n} from '../common/types/dishesType'\r\n\r\nimport {$api} from './ApiAuth'\r\n\r\nexport const ApiCart = {\r\n  getCart(token: string | undefined) {\r\n    return $api.get<{cart: [ApiDish]}>('cart/')\r\n  },\r\n  addDishToCart(\r\n    id: number,\r\n    token: string | undefined,\r\n    ingredients?: string | undefined\r\n  ) {\r\n    return $api.post<DishFromBackAfterAdding>(\r\n      `cart/`,\r\n      {\r\n        id: id,\r\n        ingredients: ingredients,\r\n      }\r\n    )\r\n  },\r\n  updateDishInCart(\r\n    position: number,\r\n    quantity: number,\r\n    token: string | undefined,\r\n    ingredients?: string | undefined\r\n  ) {\r\n    return $api.patch<{updatedPosition: UpdatedDish}>(\r\n      `cart/${position}`,\r\n      {\r\n        quantity: quantity,\r\n        ingredients: ingredients,\r\n      },\r\n    )\r\n  },\r\n  deleteDishFromCart(position: number, token: string | undefined) {\r\n    return $api.delete<string>(`cart/${position}`)\r\n  },\r\n  clearCart(token: string | undefined) {\r\n    return $api.delete<string>(`cart/`)\r\n  },\r\n}\r\n","import {IngredientType} from './types/dishesType'\r\n\r\nexport const parseString = (arr: IngredientType[]) => {\r\n  const string = arr\r\n    .filter((el: {name: string; isAdded: boolean}) => {\r\n      if (el.isAdded) {\r\n        return el\r\n      }\r\n    })\r\n    .map((el: {name: string; isAdded: boolean}) => el.name)\r\n  return `\"${string.join(';')}\"`\r\n}\r\n","import {NavLink, useHistory} from 'react-router-dom'\r\nimport {Button, Card, Col, Row} from 'react-bootstrap'\r\nimport {useDispatch} from 'react-redux'\r\n\r\nimport {DishInCart, DishType} from '../../../../common/types/dishesType'\r\nimport {mapDishTypeToDishInCart} from '../../../../utils/typeMappers'\r\n\r\nimport {orderedToast} from '../../../../components/OrderToast/OrderedToast'\r\nimport {addDishToCart} from '../../../../redux/actions'\r\nimport {ApiCart} from '../../../../api/ApiCart'\r\nimport {parseString} from '../../../../common/parceInString'\r\nimport Cookies from 'js-cookie'\r\nimport {useAppSelector} from '../../../../redux/hooks'\r\n\r\ntype PropsType = {\r\n  data: Array<DishType>\r\n  isIntresting: boolean\r\n}\r\n\r\nconst ListItem = (props: PropsType) => {\r\n  const history = useHistory()\r\n  const isLogIn = useAppSelector((state) => state.auth)\r\n  const dispatch = useDispatch()\r\n  const dishes: Array<DishInCart> = useAppSelector((state) => state.cart.dishes)\r\n  const orderDish = async (Dish: DishType) => {\r\n    if (isLogIn.isAuthorized) {\r\n      if (dishes.find((dish) => dish.id === Dish.id)) {\r\n        orderedToast(`Блюдо \"${Dish.name}\" уже в корзине!`)\r\n      } else {\r\n        await ApiCart.addDishToCart(\r\n          Dish.id,\r\n          Cookies.get('token'),\r\n          parseString(Dish.ingredients)\r\n        ).then((res) => {})\r\n        dispatch(\r\n          addDishToCart(mapDishTypeToDishInCart(Dish))\r\n        )\r\n        orderedToast(`Блюдо \"${Dish.name}\" добавлено в корзину`)\r\n      }\r\n    } else {\r\n      orderedToast('Войдите в существующий аккаунт или зарегистрируйтесь', 4000)\r\n      history.push('/login')\r\n    }\r\n  }\r\n\r\n  const arrayDishes = props.data.map((dish) => {\r\n    return (\r\n      <Col style={{position: 'relative'}} key={dish.id}>\r\n        <Card\r\n          key={`${dish.id}`}\r\n          text='dark'\r\n          className='mb-3 mx-2 my-2'\r\n          style={\r\n            props.isIntresting ?\r\n              {\r\n                width: '12rem',\r\n                height: '19rem'\r\n              } :\r\n              {\r\n                width: '18rem',\r\n                height: '22rem'\r\n              }\r\n          }\r\n        >\r\n          <NavLink to={'/dishes/' + dish.id}>\r\n            <div\r\n              key={dish.id}\r\n              style={\r\n                props.isIntresting ?\r\n                  {\r\n                    height: '150px',\r\n                    width: '100%',\r\n                    backgroundImage: `url(${dish.imageURL})`,\r\n                    backgroundSize: 'cover',\r\n                    backgroundPosition: 'center',\r\n                  } :\r\n                  {\r\n                    height: '200px',\r\n                    width: '100%',\r\n                    backgroundImage: `url(${dish.imageURL})`,\r\n                    backgroundSize: 'cover',\r\n                    backgroundPosition: 'center',\r\n                  }\r\n              }\r\n            />\r\n          </NavLink>\r\n          <Card.Body>\r\n            <Row>\r\n              <Col md='auto'>\r\n                <Card.Title>{dish.name}</Card.Title>\r\n              </Col>\r\n              <Col sm={9}></Col>\r\n            </Row>\r\n            <br />\r\n            <div\r\n              style={{\r\n                position: 'absolute',\r\n                bottom: '5%',\r\n                width: '100%',\r\n              }}\r\n            >\r\n              <Row>\r\n                <Col xs={5} sm={5} md={5} lg={4}>\r\n                  <div style={{display: 'flex', alignItems: 'baseline'}}>\r\n                    <span style={{fontSize: '15px'}}>\r\n                      <strong>{dish.price}</strong>\r\n                    </span>\r\n                    <span style={{fontSize: '14px', marginLeft: '2px'}}>\r\n                      BYN\r\n                    </span>\r\n                  </div>\r\n                </Col>\r\n                <Col xs={2} sm={2} md={2} lg={3}></Col>\r\n                <Col xs={5} sm={5} md={5} lg={5}>\r\n                  {dish.weight}\r\n                </Col>\r\n              </Row>\r\n              <Button\r\n                variant='outline-warning'\r\n                onClick={() => orderDish(dish)}\r\n                key={dish.id}\r\n                style={props.isIntresting ? {display: 'none'} : {}}\r\n              >\r\n                Заказать\r\n              </Button>\r\n            </div>\r\n            <br />\r\n          </Card.Body>\r\n        </Card>\r\n      </Col>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <Col className='row my-3'>{arrayDishes}</Col>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ListItem\r\n","import {Row} from 'react-bootstrap'\r\n\r\nimport ListItem from './ListItem'\r\nimport {useAppSelector} from '../../../../redux/hooks'\r\n\r\nconst PlatoList = () => {\r\n  const allDishes = useAppSelector((state) => state.dish.dishes)\r\n\r\n  const platoDishes = allDishes.filter((dish) =>\r\n    dish.dishCategory === 'Плато'\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <ListItem data={platoDishes} isIntresting={false} />\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PlatoList\r\n","import {Row} from 'react-bootstrap'\r\n\r\nimport ListItem from './ListItem'\r\nimport {useAppSelector} from '../../../../redux/hooks'\r\n\r\nconst SoupList = () => {\r\n  const allDishes = useAppSelector((state) => state.dish.dishes\r\n  )\r\n\r\n  const soupDishes = allDishes.filter((dish) =>\r\n    dish.dishCategory === 'Супы'\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <Row >\r\n        <ListItem data={soupDishes} isIntresting={false} />\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SoupList\r\n","import {Row} from 'react-bootstrap'\r\n\r\nimport ListItem from './ListItem'\r\nimport {useAppSelector} from '../../../../redux/hooks'\r\n\r\n\r\nconst SaladList = () => {\r\n  const allDishes = useAppSelector((state) => state.dish.dishes)\r\n\r\n  const saladDishes = allDishes.filter((dish) =>\r\n    dish.dishCategory=='Салаты'\r\n  )\r\n\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <ListItem data={saladDishes} isIntresting={false} />\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SaladList\r\n","import {Row} from 'react-bootstrap'\r\nimport ListItem from './ListItem'\r\nimport {useAppSelector} from '../../../../redux/hooks'\r\n\r\nconst OystersList = () => {\r\n  const allDishes = useAppSelector((state) => state.dish.dishes)\r\n\r\n  const oystersDishes = allDishes.filter(\r\n    (dish) => dish.dishCategory === 'Запеченные устрицы'\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <ListItem data={oystersDishes} isIntresting={false} />\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OystersList\r\n","import {Row} from 'react-bootstrap'\r\n\r\nimport ListItem from './ListItem'\r\nimport {useAppSelector} from '../../../../redux/hooks'\r\n\r\nconst DessertList = () => {\r\n  const allDishes = useAppSelector((state) => state.dish.dishes)\r\n\r\n  const desertDishes = allDishes.filter((dish) =>\r\n    dish.dishCategory === 'Десерты'\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <Row >\r\n        <ListItem data={desertDishes} isIntresting={false} />\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DessertList\r\n","import {useState} from 'react'\r\nimport {Col, Row} from 'react-bootstrap'\r\n\r\nimport {IngredientType} from '../../../../common/types/dishesType'\r\n\r\ntype PropsType = {\r\n  setIngredient: (arg0: any) => void\r\n  ingredients: Array<IngredientType>\r\n}\r\n\r\nconst DishIngredients = (props: PropsType) => {\r\n  const [ingredients, setIngredients] = useState<Array<IngredientType>>(\r\n    props.ingredients\r\n  )\r\n\r\n  const toggleIngredient = (el: IngredientType, i: number) => {\r\n    const elCopy = {...el}\r\n    elCopy.isAdded = !el.isAdded\r\n    const copyIngredients = [...ingredients]\r\n    copyIngredients[i] = elCopy\r\n    setIngredients(copyIngredients)\r\n    props.setIngredient(copyIngredients)\r\n  }\r\n\r\n  const ingridientsItem = ingredients.map((ingredient, i) => {\r\n    return (\r\n      <Row key={i}>\r\n        <Col xs={11}>\r\n          <label style={{marginTop: '10px'}}>\r\n            <input\r\n              style={{marginRight: '10px'}}\r\n              checked={!!ingredient.isAdded}\r\n              type='checkbox'\r\n              name='name'\r\n              onChange={() => {\r\n                toggleIngredient(ingredient, i)\r\n              }}\r\n            />\r\n            <span style={{lineHeight: '15px'}}>{ingredient.name}</span>\r\n          </label>\r\n        </Col>\r\n        <Col xs={1}></Col>\r\n      </Row>\r\n    )\r\n  })\r\n\r\n  return <>{ingridientsItem}</>\r\n}\r\n\r\nexport default DishIngredients\r\n","import {useState} from 'react'\r\nimport {Row, Col} from 'react-bootstrap'\r\n\r\nimport DishIngridients from './DishIngridients'\r\n\r\nimport {\r\n  DishType,\r\n  DishInCart,\r\n  IngredientType,\r\n  IngredientsType\r\n} from '../../../../common/types/dishesType'\r\n\r\nimport './Dish.scss'\r\n\r\ntype PropsType = {\r\n  changeStatus: () => void\r\n  currentDish: DishType | DishInCart\r\n  updateIngredients: (arg0: any) => void\r\n  handleClose?: () => void\r\n}\r\n\r\nconst ShiftingDish = ({\r\n  changeStatus,\r\n  currentDish,\r\n  updateIngredients,\r\n  handleClose,\r\n}: PropsType) => {\r\n  const [ingredients, setIngredients] = useState<IngredientType[]>(\r\n    currentDish?.ingredients\r\n  )\r\n\r\n  let disableIngredientAccept = false\r\n  const minAmountIngredient = 1\r\n\r\n  const addedIngredients = ingredients.filter((el) => {\r\n    return el.isAdded == true\r\n  })\r\n\r\n  if (addedIngredients.length > minAmountIngredient) {\r\n    disableIngredientAccept = false\r\n  } else {\r\n    disableIngredientAccept = true\r\n  }\r\n\r\n  const updateIngridient = (updIngredients: IngredientsType) => {\r\n    updateIngredients(updIngredients)\r\n    setIngredients(updIngredients)\r\n  }\r\n\r\n  const finishSifting = () => {\r\n    if (handleClose) {\r\n      handleClose()\r\n    } else changeStatus()\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className={'title-dish'}>\r\n        <h1>{currentDish.name}</h1>\r\n      </div>\r\n      <Row>\r\n        <Col xs={'auto'} sm={6} md={8} lg={8}>\r\n          <div\r\n            style={{\r\n              height: '100%',\r\n              width: '100%',\r\n              backgroundImage: `url(${currentDish.imageURL})`,\r\n              backgroundSize: 'cover',\r\n              backgroundPosition: 'center',\r\n            }}\r\n          />\r\n        </Col>\r\n        <Col xs={'auto'} sm={6} md={4} lg={4}>\r\n          <div className={'ingredients'}>\r\n            <div className={'changing-shifting'}>\r\n              <span className={'composition'}>Состав</span>\r\n            </div>\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <DishIngridients\r\n              setIngredient={updateIngridient}\r\n              ingredients={ingredients}\r\n            />\r\n            {\r\n              disableIngredientAccept &&\r\n              <span className='error'>\r\n                Блюдо должно содержать не менее двух ингредиентов :)\r\n              </span>\r\n            }\r\n            <button\r\n              className='btn btn-warning mt-4 w-50'\r\n              onClick={finishSifting}\r\n              disabled={disableIngredientAccept}>\r\n              Готово\r\n            </button>\r\n            <br /> <br /> <br />\r\n            <span>\r\n              <h5>Вес: {currentDish?.weight}</h5>\r\n            </span>\r\n            <span>\r\n              <h5>Калории: {currentDish?.calories}</h5>\r\n            </span>\r\n            <div className='line-dish'></div>\r\n            <br />\r\n            <div style={{display: 'flex', alignItems: 'baseline'}}>\r\n              <span style={{fontSize: '15px'}}>\r\n                <h5>Стоимость:</h5>\r\n              </span>\r\n              <span style={{fontSize: '20px', marginLeft: '3px'}}>\r\n                {currentDish?.price}\r\n              </span>\r\n              <span style={{fontSize: '18px', marginLeft: '2px'}}>BYN</span>\r\n            </div>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ShiftingDish\r\n","import {useDispatch} from 'react-redux'\r\nimport {CloseButton, Col, Modal, Row} from 'react-bootstrap'\r\n\r\nimport {\r\n  DishInCart,\r\n  DishType,\r\n  IngredientsType\r\n} from '../../../../common/types/dishesType'\r\nimport {mapDishTypeToDishInCart} from '../../../../utils/typeMappers'\r\n\r\nimport {addDishToCart} from '../../../../redux/actions'\r\nimport {orderedToast} from '../../../../components/OrderToast/OrderedToast'\r\n\r\nimport './Dish.scss'\r\nimport {ApiCart} from '../../../../api/ApiCart'\r\nimport Cookies from 'js-cookie'\r\nimport {parseString} from '../../../../common/parceInString'\r\nimport {useHistory} from 'react-router-dom'\r\nimport {useAppSelector} from '../../../../redux/hooks'\r\n\r\ntype PropsType = {\r\n  changeStatus: () => void\r\n  currentDish: DishType\r\n}\r\n\r\nconst CompletedDish = (props: PropsType) => {\r\n  const dishes = useAppSelector((state) => state.cart.dishes)\r\n  const history = useHistory()\r\n  const isLogIn = useAppSelector((state) => state.auth)\r\n  const dispatch = useDispatch()\r\n  const ingredientList = props.currentDish.ingredients.map((el, i) => {\r\n    if (el.isAdded) {\r\n      return (\r\n        <li key={i} style={{lineHeight: '15px'}}>\r\n          <p>{el.name}</p>\r\n        </li>\r\n      )\r\n    }\r\n  })\r\n\r\n  const orderDish = async (name: string, ingredients: IngredientsType) => {\r\n    if (isLogIn.isAuthorized) {\r\n      if (dishes.find((dish: DishInCart) => dish.id === props.currentDish.id)) {\r\n        orderedToast(`Блюдо \"${props.currentDish.name}\" уже в корзине!`)\r\n      } else {\r\n        await ApiCart.addDishToCart(\r\n          props.currentDish.id,\r\n          Cookies.get('token'),\r\n          parseString(ingredients)\r\n        ).then((res) => {})\r\n        dispatch(\r\n          addDishToCart(mapDishTypeToDishInCart(props.currentDish))\r\n        )\r\n        orderedToast(`Блюдо \"${props.currentDish.name}\" добавлено в корзину`)\r\n      }\r\n    } else {\r\n      orderedToast('Войдите в существующий аккаунт или зарегистрируйтесь', 4000)\r\n      history.push('/login')\r\n    }\r\n  }\r\n\r\n  const handleClose = () => {\r\n    window.history.go(-1)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className={'title-dish'}>\r\n        <h1>{props.currentDish.name}</h1>\r\n      </div>\r\n      <Row>\r\n        <Col xs={'auto'} sm={6} md={8} lg={8}>\r\n          <div\r\n            key={props.currentDish.id}\r\n            style={{\r\n              height: '100%',\r\n              width: '100%',\r\n              backgroundImage: `url(${props.currentDish.imageURL})`,\r\n              backgroundSize: 'cover',\r\n              backgroundPosition: 'center',\r\n            }}\r\n          />\r\n        </Col>\r\n        <Col xs={'auto'} sm={6} md={4} lg={4}>\r\n          <div className={'ingredients'}>\r\n            <span>\r\n              <Modal.Header className='border-0'>\r\n                <CloseButton onClick={() => handleClose()} />\r\n              </Modal.Header>\r\n            </span>\r\n            <div className={'changing'}>\r\n              <span className={'composition'}>Состав</span>\r\n              <span\r\n                className={'change-ingr'}\r\n                onClick={() => {\r\n                  props.changeStatus()\r\n                }}\r\n              >\r\n                Изменить\r\n              </span>\r\n            </div>\r\n\r\n            <ul>{ingredientList}</ul>\r\n\r\n            <br />\r\n            <span>\r\n              <h5>Вес: {props.currentDish?.weight}</h5>\r\n            </span>\r\n            <span>\r\n              <h5>Калории: {props.currentDish?.calories}</h5>\r\n            </span>\r\n            <div className='line-dish'></div>\r\n            <br />\r\n            <div style={{display: 'flex', alignItems: 'baseline'}}>\r\n              <span style={{fontSize: '15px'}}>\r\n                <h5>Стоимость:</h5>\r\n              </span>\r\n              <span style={{fontSize: '20px', marginLeft: '3px'}}>\r\n                {props.currentDish?.price}\r\n              </span>\r\n              <span style={{fontSize: '18px', marginLeft: '2px'}}>BYN</span>\r\n            </div>\r\n            <button\r\n              className={'order-btn-dish'}\r\n              onClick={() => {\r\n                orderDish(props.currentDish.name, props.currentDish.ingredients)\r\n              }}\r\n            >\r\n              Заказать\r\n            </button>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CompletedDish\r\n","import {useState} from 'react'\r\n\r\nimport ListItem from '../../pages/menuPage/Menu/Assortment/ListItem'\r\nimport {DishType} from '../../common/types/dishesType'\r\nimport {useAppSelector} from '../../redux/hooks'\r\n\r\nimport './maybeIntresting.scss'\r\nimport {AppStoreType} from '../../redux/reducers/rootReducer'\r\n\r\nconst CompletedDish = () => {\r\n  const intrestingDishes =\r\n   useAppSelector<DishType[]>((state: AppStoreType) => state.dish.dishes)\r\n\r\n  let [index, setIndex] = useState(0)\r\n  const handleSelect = (selectedIndex: string) => {\r\n    if (selectedIndex == 'previous' && index > 0) {\r\n      setIndex(--index)\r\n    }\r\n    if (selectedIndex == 'next' && index < (intrestingDishes.length - 4)) {\r\n      setIndex(++index)\r\n    }\r\n  }\r\n\r\n  let y\r\n  let i = index\r\n  if (intrestingDishes.length < 4) {\r\n    y = index + intrestingDishes.length\r\n  } else {\r\n    y = index + 4\r\n  }\r\n\r\n  const sliderDishes: Array<DishType> = []\r\n  for (i; i < y; i++) {\r\n    sliderDishes.push(intrestingDishes[i])\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={'may-be-intresting'}>\r\n      <h2 style={{paddingLeft: '15%'}}>Вас так же могут заинтересовать</h2>\r\n      <div style={{\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n      }}>\r\n        <i className='arrow bi bi-arrow-left-circle'\r\n          onClick={() => {\r\n            handleSelect('previous')\r\n          }}\r\n        ></i>\r\n        <ListItem isIntresting={true} data={sliderDishes} />\r\n        <i className='arrow bi bi-arrow-right-circle'\r\n          onClick={() => {\r\n            handleSelect('next')\r\n          }}\r\n        ></i>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CompletedDish\r\n","import {useState, useEffect} from 'react'\r\nimport {useParams} from 'react-router-dom'\r\nimport ShiftingDish from './ShiftingDish'\r\nimport CompletedDish from './CompletedDish'\r\nimport {useAppSelector} from '../../../../redux/hooks'\r\nimport MaybeIntresting\r\n  from '../../../../components/maybeIntresting/maybeIntresting'\r\nimport {IngredientsType} from '../../../../common/types/dishesType'\r\nimport {DishType} from '../../../../common/types/dishesType'\r\n\r\nconst Dish = () => {\r\n  const token = + useParams<{token: string}>().token\r\n\r\n  const allDishes: DishType[] =\r\n  useAppSelector<DishType[]>((state) => state.dish.dishes)\r\n\r\n  const currentDish: DishType | any =\r\n  allDishes.find((el) => el.id === token)\r\n\r\n  const [dishСhangeStatus, setDishСhangeStatus] = useState<boolean>(false)\r\n  const [ingredients, setIngredients] = useState<IngredientsType>([])\r\n\r\n  useEffect(() => {\r\n    if (currentDish) {\r\n      setIngredients(currentDish.ingredients)\r\n    }\r\n  }, [currentDish])\r\n\r\n  const updatedDish = {...currentDish, ingredients}\r\n\r\n  const updateIngredients = (updIngridients: IngredientsType) => {\r\n    setIngredients(updIngridients)\r\n  }\r\n\r\n  const changeStatus = () => {\r\n    setDishСhangeStatus(!dishСhangeStatus)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {dishСhangeStatus ? (\r\n        <ShiftingDish\r\n          changeStatus={changeStatus}\r\n          currentDish={updatedDish}\r\n          updateIngredients={updateIngredients}\r\n        />\r\n      ) : (\r\n        <CompletedDish changeStatus={changeStatus} currentDish={updatedDish} />\r\n      )}\r\n\r\n      {!dishСhangeStatus ? (\r\n        <div>\r\n          <MaybeIntresting />\r\n        </div>\r\n      ) : (\r\n        <div style={{marginTop: '100px'}}></div>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Dish\r\n","import React from 'react'\r\nimport {Redirect, Switch, Route} from 'react-router-dom'\r\nimport PlatoList from './Assortment/PlatoList'\r\nimport SoupList from './Assortment/SoupList'\r\nimport SaladList from './Assortment/SaladList'\r\nimport OystersList from './Assortment/OystersList'\r\nimport DessertList from './Assortment/DessertList'\r\nimport Dish from '../Menu/Dishes/Dish'\r\n\r\n\r\nexport const PATH = {\r\n  MENU: '/menu',\r\n  PLATO: '/menu/plato',\r\n  SOUP: '/menu/soup',\r\n  SALAD: '/menu/salad',\r\n  OYSTERS: '/menu/oysters',\r\n  DESSERT: '/menu/dessert',\r\n}\r\n\r\nconst MenuRoutes: React.FC = () => {\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <Route\r\n          path={PATH.MENU}\r\n          exact\r\n          render={() => <Redirect to={PATH.SOUP} />}\r\n        />\r\n        <Route path={PATH.PLATO} render={() => <PlatoList />} />\r\n        <Route path={PATH.SOUP} render={() => <SoupList />} />\r\n        <Route path={PATH.SALAD} render={() => <SaladList />} />\r\n        <Route path={PATH.OYSTERS} render={() => <OystersList />} />\r\n        <Route path={PATH.DESSERT} render={() => <DessertList />} />\r\n        <Route\r\n          path={'/dishes' + '/:token/:id1?'}\r\n          exact\r\n          render={() => <Dish />}\r\n        />\r\n      </Switch>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MenuRoutes\r\n","import {useEffect} from 'react'\r\nimport {useLocation} from 'react-router'\r\n\r\n\r\nconst ScrollToTop = () => {\r\n  const routePath = useLocation()\r\n\r\n  useEffect(() => {\r\n    window.scrollTo({\r\n      top: 0,\r\n      left: 0,\r\n      behavior: 'smooth'\r\n    })\r\n  }, [routePath])\r\n\r\n  return null\r\n}\r\n\r\n\r\nexport default ScrollToTop\r\n","import Cookies from 'js-cookie'\r\nimport {BookingTablesType} from '../common/types/bookingTypes'\r\nimport {$api} from './ApiAuth'\r\n\r\nconst token = Cookies.get('token')\r\n\r\nexport const ApiAdmin = {\r\n  getNewDishImgFileUrl(newDishImgFile?: any) {\r\n    {\r\n      return Promise.resolve(\r\n        $api.post('menu/image', newDishImgFile, {\r\n          headers: {Authorization: `Bearer ${token}`},\r\n        })\r\n      )\r\n    }\r\n  },\r\n  setNewDish(newDish: any) {\r\n    {\r\n      return Promise.resolve(\r\n        $api.post('menu/', newDish, {\r\n          headers: {Authorization: `Bearer ${token}`},\r\n        })\r\n      )\r\n    }\r\n  },\r\n  deleteDish(dishId: number) {\r\n    {\r\n      return Promise.resolve(\r\n        $api.delete(`menu/${dishId}`, {\r\n          headers: {Authorization: `Bearer ${token}`},\r\n        })\r\n      )\r\n    }\r\n  },\r\n  getBookedTables() {\r\n    {\r\n      return Promise.resolve<{data: {bookedUsers: BookingTablesType[]}}>(\r\n        $api.get(`booking/usersbooking`)\r\n      ).then((resp) => {\r\n        return resp\r\n      })\r\n    }\r\n  },\r\n  getAllOrders() {\r\n    {\r\n      return Promise.resolve<{data: {orders: []}}>(\r\n        $api.get('admin/order/')\r\n      )\r\n    }\r\n  },\r\n  updateBookedTables(fieldValue: any, id: string, fieldName:any) {\r\n    {\r\n      return Promise.resolve<{data: {bookedUsers: BookingTablesType[]}}>(\r\n        $api.patch(`booking/usersbooking/?id=${id}`, {\r\n          [fieldName]: fieldValue\r\n        })\r\n      ).then((resp) => {\r\n        return resp\r\n      })\r\n    }\r\n  },\r\n  deleteBookedTable(id: string) {\r\n    {\r\n      return Promise.resolve<{data: {bookedUsers: BookingTablesType[]}}>(\r\n        $api.delete(`booking/usersbooking/?id=${id}`)\r\n      ).then((resp) => {\r\n        return resp\r\n      })\r\n    }\r\n  },\r\n  deleteOrder(id: string) {\r\n    {\r\n      return Promise.resolve(\r\n        $api.delete(`admin/order/${id}`)\r\n      ).then((resp) => {\r\n        return resp\r\n      })\r\n    }\r\n  },\r\n  updateOrder(id: string, orderState:string) {\r\n    {\r\n      return Promise.resolve(\r\n        $api.patch(`admin/order/${id}`, {\r\n          state: orderState\r\n        })\r\n      ).then((resp) => {\r\n        return resp\r\n      })\r\n    }\r\n  },\r\n}\r\n","// import {useState} from 'react'\r\n// import {Col, Row} from 'react-bootstrap'\r\n\r\nimport {IngredientType} from '../../../../common/types/dishesType'\r\n\r\ntype PropsType = {\r\n  // setIngredient: (arg0: any) => void\r\n  ingredients: Array<IngredientType>\r\n}\r\n\r\nconst ShowIngridients = (props:PropsType) => {\r\n  // const [ingredients, setIngredients] = useState<Array<IngredientType>>(\r\n  //   props.ingredients\r\n  // )\r\n\r\n  // const toggleIngredient = (el: IngredientType, i: number) => {\r\n  //   const elCopy = {...el}\r\n  //   elCopy.isAdded = !el.isAdded\r\n  //   const copyIngredients = [...ingredients]\r\n  //   copyIngredients[i] = elCopy\r\n  //   setIngredients(copyIngredients)\r\n  //   props.setIngredient(copyIngredients)\r\n  // }\r\n\r\n  const ingridientsItem = props.ingredients.map((ingredient, i) => {\r\n    return (\r\n      <span\r\n        key={i}\r\n        style={{paddingRight: '13px'}}\r\n      >\r\n        {ingredient.name};\r\n      </span>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        textAlign: 'left',\r\n        // display: 'flex',\r\n        lineHeight: '15px',\r\n      }}\r\n    >\r\n      {ingridientsItem}\r\n    </div>)\r\n}\r\n\r\nexport default ShowIngridients\r\n","import {Button, Col, Row} from 'react-bootstrap'\r\nimport {NavLink} from 'react-router-dom'\r\nimport {orderedToast} from '../../../../components/OrderToast/OrderedToast'\r\nimport {getDishesFromApiTC} from '../../../../redux/reducers/dishesReducer'\r\nimport {ApiAdmin} from '../../../../api/ApiAdmin'\r\nimport ShowIngridients from './showIngridients'\r\nimport {useAppSelector} from '../../../../redux/hooks'\r\nimport {useDispatch} from 'react-redux'\r\n\r\nconst AdminDishes = () => {\r\n  const allDishes = useAppSelector((state) => state.dish.dishes)\r\n  const dispatch = useDispatch()\r\n\r\n  const deleteDish=(dishId: number)=>{\r\n    ApiAdmin.deleteDish(dishId)\r\n      .then((res)=>{\r\n        // @ts-ignore\r\n        if (res.data.error) {\r\n          orderedToast(`Блюдо удалить не удалось`)\r\n        } else if (res.status=204) {\r\n          orderedToast(`Блюдо удалено`)\r\n          dispatch(getDishesFromApiTC())\r\n        }\r\n      })\r\n  }\r\n\r\n  const arrayDishes = allDishes.map((dish) => {\r\n    return (\r\n      <div\r\n        key={dish.id}\r\n        style={{border: '1px solid black', margin: '10px'}}\r\n      >\r\n\r\n        <Row>\r\n          <h4> {dish.name} </h4>\r\n\r\n          <Col xs={'auto'} sm={5} md={4} lg={3}\r\n            style={{marginLeft: '10px'}}\r\n          >\r\n            <NavLink to={'/dishes/' + dish.id}>\r\n              <div\r\n                key={dish.id}\r\n                style={{\r\n                  height: '180px',\r\n                  width: '200px',\r\n                  marginBottom: '5px',\r\n                  backgroundImage: `url(${dish.imageURL})`,\r\n                  backgroundSize: 'cover',\r\n                  backgroundPosition: 'center',\r\n                } }\r\n              />\r\n            </NavLink>\r\n          </Col>\r\n\r\n          <Col xs={'auto'} sm={7} md={6} lg={6}>\r\n            <div >\r\n              <div style=\r\n                {{display: 'flex', alignItems: 'baseline', height: '22px'}}\r\n              >\r\n                <span style={{fontSize: '15px'}}>\r\n                  <h5>Стоимость:</h5>\r\n                </span>\r\n                <span style={{fontSize: '20px', marginLeft: '3px'}}>\r\n                  {dish.price}\r\n                </span>\r\n                <span style={{fontSize: '18px', marginLeft: '2px'}}>BYN</span>\r\n              </div>\r\n              <div style=\r\n                {{display: 'flex', alignItems: 'baseline', height: '22px'}}\r\n              >\r\n                <span style={{fontSize: '15px'}}>\r\n                  <h5>Вес:</h5>\r\n                </span>\r\n                <span style={{fontSize: '20px', marginLeft: '3px'}}>\r\n                  {dish.weight}\r\n                </span>\r\n              </div>\r\n              <div style=\r\n                {{display: 'flex', alignItems: 'baseline', height: '22px'}}\r\n              >\r\n                <span style={{fontSize: '15px'}}>\r\n                  <h5>Калории:</h5>\r\n                </span>\r\n                <span style={{fontSize: '20px', marginLeft: '3px'}}>\r\n                  {dish.calories}\r\n                </span>\r\n              </div>\r\n            </div>\r\n\r\n            <br/>\r\n\r\n            <div style={{\r\n              display: 'flex',\r\n              justifyContent: 'flex-start'\r\n            }}\r\n            >\r\n              <ShowIngridients\r\n                ingredients={dish.ingredients}\r\n              />\r\n            </div>\r\n          </Col>\r\n          <Col>\r\n            <Button\r\n              variant='outline-warning'\r\n              onClick={() => deleteDish(dish.id)}\r\n              style={{margin: '20px', marginLeft: '-4px'}}\r\n            >\r\n                Удалить\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    )\r\n  })\r\n\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        {arrayDishes}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AdminDishes\r\n","import {Form} from 'react-bootstrap'\r\n\r\ntype PropsType = {\r\n  ingredients: Array<string>\r\n  inputDishIngredients:(e:any, id: number)=>void\r\n  deleteDishIngredients:(id: number)=>void\r\n}\r\n\r\nconst AddIngredients = (props:PropsType) => {\r\n  const ingridientsItem = props.ingredients.map((ingredient, i) => {\r\n    return (\r\n      <div key={i} style={{display: 'flex'}}>\r\n        <Form.Control\r\n          style={{width: '250px', height: '30px', marginBottom: '5px'}}\r\n          id='Ingredients'\r\n          type='text'\r\n          placeholder={`ингредиент ${i+1}`}\r\n          value={ingredient}\r\n          onChange={(e) => props.inputDishIngredients(e, i)}\r\n        />\r\n        <span\r\n          style={{marginTop: '4px', opacity: '0.4', cursor: 'pointer'}}\r\n          onClick={()=>props.deleteDishIngredients(i)}\r\n        >\r\n           &#10060;\r\n        </span>\r\n      </div>\r\n    )\r\n  })\r\n\r\n  return <div>{ingridientsItem}</div>\r\n}\r\n\r\nexport default AddIngredients\r\n","/* eslint-disable require-jsdoc */\r\nimport axios from 'axios'\r\nimport Cookies from 'js-cookie'\r\n\r\nimport {url as baseURL} from '../../../../api/index'\r\nexport const instance = axios.create({\r\n  baseURL\r\n})\r\n\r\nimport {ChangeEvent, useRef} from 'react'\r\nimport {useState} from 'react'\r\nimport {Button} from 'react-bootstrap'\r\n\r\n\r\nexport default function FilesOperations(props:any) {\r\n  const buttonRef=useRef<HTMLInputElement>(null)\r\n\r\n  const formData = new FormData()\r\n  formData.append('name', `${props.dishName}`)\r\n  formData.append('category', `${props.dishCategory}`)\r\n\r\n  const [fileURI, setFile]=useState<any>()\r\n  const [file64, setFileURL]=useState({})\r\n  const [file, setFileData]=useState({})\r\n\r\n\r\n  const upLoad=(e:ChangeEvent<HTMLInputElement>)=>{\r\n    const newFile= e.target.files && e.target.files[0]\r\n\r\n    if (newFile) {\r\n      setFile(newFile)\r\n      setFileURL(window.URL.createObjectURL(newFile))\r\n      formData.append('file', newFile)\r\n      setFileData(formData)\r\n    }\r\n  }\r\n\r\n  const sendImgDeplUrl=(ImgDeplUrl: any)=>{\r\n    props.inputDishImage(ImgDeplUrl)\r\n  }\r\n\r\n\r\n  const send = () => {\r\n    const token = Cookies.get('token')\r\n    instance.post('menu/image', file,\r\n      {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      }).then((res: any)=>sendImgDeplUrl(res.data.url)\r\n    )\r\n  }\r\n\r\n  const returnFileSize=(size:number)=>{\r\n    if (size<1024) {\r\n      return size + 'bytes'\r\n    } else if (size>1024 && size < 1048576) {\r\n      return (size/1024).toFixed(2) + 'Kb'\r\n    } else if (size > 1048576) {\r\n      return (size/1048576).toFixed(2) + 'Mb'\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div className='form-sectionAdmin'>\r\n        <div className='form-adminField'>\r\n          <div className='section-header'>\r\n            <span>Фотография блюда</span>\r\n          </div>\r\n          <div>\r\n            <Button\r\n              onClick={() => buttonRef && buttonRef.current &&\r\n                          buttonRef.current.click() }\r\n              style={{\r\n                width: '250px',\r\n                color: 'gray',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                height: '30px',\r\n                lineHeight: '30px',\r\n                justifyContent: 'space-around',\r\n                marginTop: '10px'\r\n              }}\r\n              variant='outline-warning'\r\n            >\r\n              загрузка с диска <h4>&#8635;</h4>\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      { fileURI ?<>\r\n        <div className='form-sectionAdmin' style={{height: '220px'}}>\r\n          <div className='form-adminField'>\r\n            <div className='section-header'>\r\n              <span> Миниатюра изображения</span>\r\n            </div>\r\n            <div\r\n              style={{\r\n                height: '200px',\r\n                width: '250px',\r\n                backgroundImage: `url(${file64})`,\r\n                backgroundSize: 'cover',\r\n                backgroundPosition: 'center'\r\n              }}\r\n            >\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>:null}\r\n\r\n      { fileURI &&\r\n      <div style={{display: 'flex', flexDirection: 'column',\r\n        marginTop: '-70px',\r\n        textAlign: 'start',\r\n        marginLeft: '55px'}}>\r\n        <div><i>size: {fileURI && returnFileSize(fileURI.size)}</i></div>\r\n        <div><i>type: {fileURI && fileURI.type}</i></div>\r\n      </div>\r\n      }\r\n\r\n      { fileURI ?<>\r\n        <div className='form-sectionAdmin' /* style={{height: '0px'}} */>\r\n          <div className='form-adminField'>\r\n            <div className='section-header'>\r\n              {/* <span>Сохранить фото</span> */}\r\n            </div>\r\n            <div>\r\n              <Button\r\n                onClick={() => send() }\r\n                style={{\r\n                  width: '250px',\r\n                  background: '#FFFAFA',\r\n                  color: 'gray',\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  height: '30px',\r\n                  lineHeight: '30px',\r\n                  justifyContent: 'space-around',\r\n                  fontSize: '12px',\r\n                  marginTop: '10px'\r\n                }}\r\n                variant='outline-warning'\r\n              >\r\n              загрузить изображене в облако <h5>&#8593;</h5>\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div></>:null}\r\n\r\n      <div>\r\n        <input type='file'\r\n          ref={buttonRef}\r\n          accept='.jpg,.jpeg,.png'\r\n          onChange={upLoad}\r\n          style={{display: 'none'}}\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n","import React, {useState, ChangeEvent, useEffect} from 'react'\r\nimport {Form, Button, FloatingLabel} from 'react-bootstrap'\r\nimport AddIngridients from './AddIngredients'\r\nimport FilesOperations from './FilesOperations'\r\nimport './newDishForms.scss'\r\nimport {DishType} from './../../../../common/types/dishesType'\r\n\r\ninterface newDishType {\r\n  handleNewDishData: (newDish: DishType) => void\r\n  setClearForm: (status: boolean) => void\r\n  clearForm: boolean\r\n}\r\n\r\nconst newDish: React.FC<newDishType> =\r\n  ({handleNewDishData, clearForm, setClearForm}) => {\r\n    const [dishName, setDishName] = useState<string>('')\r\n    const [dishPrice, setDishPrice] = useState<number>()\r\n    const [dishWeight, setDishWeight] = useState<number>()\r\n    const [dishCalories, setDishCalories] = useState<number>()\r\n    const [dishIngredients, setDishIngredients] =\r\n     useState<Array<string>>(['', ''])\r\n    const [dishCategory, setDishCategory] = useState<string>('')\r\n    const [dishURL, setDishURL] = useState<string>('')\r\n    const [fileImgIsLoaded, setFileImgIsLoaded]=useState<boolean>(false)\r\n    const [dishDataErr, setDishDataErr]=useState<boolean>(false)\r\n\r\n    const handleCLearFrom=()=>{\r\n      setClearForm(false)\r\n      setDishName('')\r\n      setDishPrice(0)\r\n      setDishWeight(0)\r\n      setDishCalories(0)\r\n      setDishIngredients(['', ''])\r\n      setDishCategory('')\r\n      setDishURL('')\r\n      setFileImgIsLoaded(false)\r\n      setDishDataErr(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n      if (clearForm) {\r\n        handleCLearFrom()\r\n      }\r\n    }, [clearForm])\r\n\r\n    const inputDishName=(e: any)=>{\r\n      setDishName(e.target.value)\r\n    }\r\n\r\n    const inputDishPrice=(e: any)=>{\r\n      e.preventDefault()\r\n      setDishPrice(+e.target.value)\r\n    }\r\n\r\n    const inputDishWeight=(e: any)=>{\r\n      e.preventDefault()\r\n      setDishWeight(+e.target.value)\r\n    }\r\n\r\n    const inputDishCalories=(e: any)=>{\r\n      e.preventDefault()\r\n      setDishCalories(+e.target.value)\r\n    }\r\n\r\n    const inputDishIngredients=(e: any, id: number)=>{\r\n      e.preventDefault()\r\n      const copyIngredients=[...dishIngredients]\r\n      copyIngredients[id]=e.target.value\r\n      setDishIngredients(copyIngredients)\r\n    }\r\n\r\n    const addIngredientsField=(e: any)=>{\r\n      e.preventDefault()\r\n      const copyIngredients=[...dishIngredients]\r\n      copyIngredients.push('')\r\n      setDishIngredients(copyIngredients)\r\n    }\r\n\r\n    const deleteDishIngredients=(ingredientId: number)=>{\r\n      const copyIngredients=[...dishIngredients]\r\n      copyIngredients.splice(ingredientId, 1)\r\n      setDishIngredients(copyIngredients)\r\n    }\r\n\r\n    const inputDishURL=(e: any)=>{\r\n      e.preventDefault()\r\n      setDishURL(e.target.value)\r\n    }\r\n\r\n    const inputDishImage=(ImgDeplUrl: any)=>{\r\n      setDishURL(ImgDeplUrl)\r\n      setFileImgIsLoaded(true)\r\n    }\r\n\r\n    const dishCategoryArray: Array<string> = [\r\n      'Плато', 'Салаты', 'Супы', 'Запеченные устрицы', 'Десерты'\r\n    ]\r\n    const ingredientsStr: string=dishIngredients.join(';')\r\n\r\n    const newDish: any ={\r\n      name: dishName,\r\n      price: dishPrice,\r\n      weight: `${dishWeight} гр`,\r\n      calories: `${dishCalories} ккал`,\r\n      imageURL: dishURL,\r\n      ingredients: `${ingredientsStr}`,\r\n      dishCategory: dishCategory\r\n    }\r\n\r\n    const checkDataForSend=(newDish: DishType)=>{\r\n      if (dishIngredients.length<2 || dishIngredients[0]=='' ||\r\n      dishIngredients[1]=='' || dishName.length<1 || dishCategory.length<1 ||\r\n      dishPrice==undefined || dishWeight==undefined ||\r\n       dishCalories==undefined ) {\r\n        setDishDataErr(true)\r\n      } else {\r\n        setDishDataErr(false)\r\n        handleNewDishData(newDish)\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className='reserve-a-table-form-booking shadow'>\r\n\r\n        <div className='form-sectionAdmin'>\r\n          <div className='form-adminField'>\r\n            <div className='section-header'>\r\n              <span>Название блюда</span>\r\n            </div>\r\n            <Form.Control\r\n              style={{width: '400px'}}\r\n              id='userName'\r\n              type='text'\r\n              placeholder='введите название'\r\n              value={dishName}\r\n              onChange={(e) => inputDishName(e)}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className='form-sectionAdmin'>\r\n          <div className='form-adminField'>\r\n            <div className='section-header'>\r\n              <span>Стоимость (рубли)</span>\r\n            </div>\r\n            <Form.Control\r\n              style={{width: '400px'}}\r\n              id='userName'\r\n              type='number'\r\n              placeholder='укажите стоимость блюда'\r\n              value={dishPrice}\r\n              onChange={(e) => inputDishPrice(e)}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className='form-sectionAdmin'>\r\n          <div className='form-adminField'>\r\n            <div className='section-header'>\r\n              <span>Вес (граммы)</span>\r\n            </div>\r\n            <Form.Control\r\n              style={{width: '400px'}}\r\n              id='userName'\r\n              type='number'\r\n              placeholder='укажите вес блюда'\r\n              value={dishWeight}\r\n              onChange={(e) => inputDishWeight(e)}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className='form-sectionAdmin'>\r\n          <div className='form-adminField'>\r\n            <div className='section-header'>\r\n              <span>Калории</span>\r\n            </div>\r\n            <Form.Control\r\n              style={{width: '400px'}}\r\n              id='userName'\r\n              type='number'\r\n              placeholder={'укажите калории'}\r\n              value={dishCalories}\r\n              onChange={(e) => inputDishCalories(e)}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className='form-sectionAdmin' style={{height: '100px'}}>\r\n          <div className='form-adminField'>\r\n            <div className='section-header'>\r\n              <span>Категория блюда</span>\r\n            </div>\r\n            <FloatingLabel\r\n              controlId='floatingSelectGrid'\r\n              label='выбирите из списка:'\r\n            >\r\n              <Form.Select\r\n                aria-label='Floating label select example'\r\n                defaultValue={dishCategory}\r\n                style={{width: '250px'}}\r\n                onChange={(e: ChangeEvent<HTMLSelectElement>) => {\r\n                  setDishCategory(e.target.value)\r\n                }}\r\n              >\r\n                <option value=''>Выбрать...</option>\r\n                {dishCategoryArray.map((category, idx) => (\r\n                  <option\r\n                    value={category}\r\n                    key={idx}\r\n                  >\r\n                    {category}\r\n                  </option>\r\n                ))}\r\n              </Form.Select>\r\n            </FloatingLabel>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='form-sectionAdmin'>\r\n          <div className='form-adminField'>\r\n            <div className='section-header'>\r\n              <span>Фотография блюда</span>\r\n            </div>\r\n            <div>\r\n              <Form.Control\r\n                style={{width: '250px'}}\r\n                id='userName'\r\n                type='text'\r\n                placeholder={'по URL адресу'}\r\n                value={dishURL}\r\n                onChange={(e) => inputDishURL(e)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n\r\n        { dishURL.length>1 && !fileImgIsLoaded ?<>\r\n          <div className='form-sectionAdmin' style={{height: '210px'}}>\r\n            <div className='form-adminField'>\r\n              <div className='section-header'>\r\n                <span> Миниатюра изображения</span>\r\n              </div>\r\n              <div\r\n                style={{\r\n                  height: '200px',\r\n                  width: '250px',\r\n                  backgroundImage: `url(${dishURL})`,\r\n                  backgroundSize: 'cover',\r\n                  backgroundPosition: 'center'\r\n                }}\r\n              >\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>:null}\r\n\r\n        {dishCategory.length>1 && dishName.length>0 ?\r\n          <FilesOperations\r\n            inputDishImage={inputDishImage}\r\n            dishCategory={dishCategory}\r\n            dishName={dishName}\r\n          />:null}\r\n\r\n        <br/>\r\n        <div className='form-sectionAdmin' style={{height: '100%'}}>\r\n          <div className='form-adminField'>\r\n            <div className='section-header'>\r\n              <div>\r\n                <span>Добавьте ингредиенты</span>\r\n                <br/>\r\n                <Button\r\n                  onClick={addIngredientsField}\r\n                  style={{\r\n                    width: '10px',\r\n                    background: '#FFFAFA',\r\n                    color: 'gray',\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    height: '20px',\r\n                    justifyContent: 'space-around',\r\n                  }}\r\n                  variant='outline-warning'\r\n                >\r\n                  +\r\n                </Button>\r\n              </div>\r\n            </div>\r\n\r\n            <AddIngridients\r\n              inputDishIngredients={inputDishIngredients}\r\n              deleteDishIngredients={deleteDishIngredients}\r\n              ingredients={dishIngredients}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className='form-sectionAdmin' style={{height: '20px'}}>\r\n          <div className='form-separation'></div>\r\n        </div>\r\n\r\n        {dishDataErr ?\r\n          <div style={{\r\n            color: 'red',\r\n            fontSize: '16px',\r\n            marginTop: '10px',\r\n            marginBottom: '20px',\r\n          }}>\r\n                    некорректно заполнены данные\r\n          </div>: null}\r\n\r\n        <Button\r\n          onClick={()=>checkDataForSend(newDish)}\r\n          style={{width: '160px'}}\r\n          variant='outline-warning'\r\n        >\r\n              Добавить блюдо\r\n        </Button>\r\n        <br/>\r\n        <br/>\r\n        <br/>\r\n        <br/>\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default newDish\r\n","import {useState} from 'react'\r\nimport {ApiAdmin} from '../../../../api/ApiAdmin'\r\nimport {orderedToast} from '../../../../components/OrderToast/OrderedToast'\r\nimport {DishType} from './../../../../common/types/dishesType'\r\nimport NewDish from './newDish'\r\n\r\nconst AddDish = () => {\r\n  const [clearForm, setClearForm]=useState<boolean>(false)\r\n\r\n  const handleNewDishData=(newDish:DishType)=>{\r\n    ApiAdmin.setNewDish(newDish)\r\n      .then((res)=>{\r\n        // @ts-ignore\r\n        if (res.data.error) {\r\n          orderedToast(`Ошибка добавления блюда`)\r\n        } else if (res.status=200) {\r\n          orderedToast(`Блюдо добавлено`)\r\n          setClearForm(true)\r\n        } else {\r\n          (console.log(res)\r\n          )\r\n        }\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h3>заполните поля:</h3>\r\n      <NewDish\r\n        handleNewDishData={handleNewDishData }\r\n        setClearForm={setClearForm}\r\n        clearForm={clearForm}\r\n      />\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default AddDish\r\n","import {useDispatch} from 'react-redux'\r\nimport {\r\n  deleteUserBookingTable,\r\n  setUsersBookingTables, updateUsersBookingTables\r\n} from '../../../../redux/actions'\r\nimport {ApiAdmin} from '../../../../api/ApiAdmin'\r\nimport {useEffect, useState} from 'react'\r\nimport {useAppSelector} from '../../../../redux/hooks'\r\nimport './Tables.scss'\r\nimport {Button, FormControl, Modal, Table} from 'react-bootstrap'\r\nimport {BookingTablesType} from '../../../../common/types/bookingTypes'\r\nimport {orderedToast} from '../../../../components/OrderToast/OrderedToast'\r\n\r\nconst OrderedTables = () => {\r\n  const dispatch = useDispatch()\r\n  const [isShowModal, setShowModal] = useState(false)\r\n  const [isDeleteButton, setIsDeleteButton] = useState(false)\r\n  const [changingFieldValue, setChangingFieldValue] = useState('')\r\n  const [fieldName, setFieldName] = useState('')\r\n  const [selectedRowId, setSelectedRowId] = useState('')\r\n  const bookings = useAppSelector((state) => state.bookings.bookings)\r\n\r\n  useEffect(() => {\r\n    handleLoad()\r\n  }, [])\r\n  const handleLoad = () => {\r\n    ApiAdmin.getBookedTables().then((el) => {\r\n      dispatch(setUsersBookingTables(el.data.bookedUsers))\r\n    })\r\n  }\r\n  const closeEditModal = () => {\r\n    setShowModal(false)\r\n    setIsDeleteButton(false)\r\n  }\r\n  const openEditModal = (id: any, value: any, name: any) => {\r\n    setFieldName(name)\r\n    setChangingFieldValue(value)\r\n    setSelectedRowId(id)\r\n    setShowModal(true)\r\n  }\r\n  const openDeleteModal = (id: any) => {\r\n    setSelectedRowId(id)\r\n    setIsDeleteButton(true)\r\n    setShowModal(true)\r\n  }\r\n  const onClickDeleteButtonEditModal = () => {\r\n    ApiAdmin.deleteBookedTable(selectedRowId).then(() => {\r\n      dispatch(deleteUserBookingTable(selectedRowId))\r\n      closeEditModal()\r\n    })\r\n  }\r\n\r\n  const onClickSaveButtonEditModal = () => {\r\n    ApiAdmin.updateBookedTables(\r\n      changingFieldValue,\r\n      selectedRowId,\r\n      fieldName\r\n    ).then((el: any) => {\r\n      dispatch(\r\n        updateUsersBookingTables({\r\n          booking: el.data.updatedBooking,\r\n          id: selectedRowId\r\n        })\r\n      )\r\n      closeEditModal()\r\n    })\r\n  }\r\n  const arrayTables = () => {\r\n    return (\r\n      <Table hover>\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>Имя</th>\r\n            <th>Телефон</th>\r\n            <th>Дата</th>\r\n            <th>Время</th>\r\n            <th>Количество гостей</th>\r\n          </tr>\r\n        </thead>\r\n        {bookings.map((booking: BookingTablesType) => (\r\n          <tr key={booking.id}>\r\n            <td\r\n              onClick={(e: any) => {\r\n                e.stopPropagation()\r\n                orderedToast('Нельзя изменить ID')\r\n              }}\r\n            >\r\n              {booking.id}\r\n            </td>\r\n            <td\r\n              onClick={() => {\r\n                openEditModal(booking.id, booking.name, 'name')\r\n              }}\r\n            >\r\n              {booking.name}\r\n            </td>\r\n            <td\r\n              onClick={() => {\r\n                openEditModal(booking.id, booking.phone, 'phone')\r\n              }}\r\n            >\r\n              {booking.phone}\r\n            </td>\r\n            <td\r\n              onClick={() => {\r\n                openEditModal(booking.id, booking.date, 'date')\r\n              }}\r\n            >\r\n              {booking.date}\r\n            </td>\r\n            <td\r\n              onClick={() => {\r\n                openEditModal(booking.id, booking.time, 'time')\r\n              }}\r\n            >\r\n              {booking.time}\r\n            </td>\r\n            <td\r\n              onClick={() => {\r\n                openEditModal(\r\n                  booking.id,\r\n                  booking.amountofpeople,\r\n                  'amountofpeople'\r\n                )\r\n              }}\r\n              width={'14%'}\r\n            >\r\n              {booking.amountofpeople}\r\n            </td>\r\n            <td\r\n              onClick={(e) => {\r\n                e.stopPropagation()\r\n              }}\r\n              width={'10%'}\r\n            >\r\n              <Button\r\n                onClick={() => {\r\n                  openDeleteModal(booking.id)\r\n                }}\r\n                style={{backgroundColor: '#ff2828'}}\r\n                variant='danger'\r\n                size={'sm'}\r\n              >\r\n                Удалить\r\n              </Button>\r\n            </td>\r\n          </tr>\r\n        ))}\r\n      </Table>\r\n    )\r\n  }\r\n  return (\r\n    <div>\r\n      {isShowModal ? (\r\n        <>\r\n          <Modal show={isShowModal} onHide={closeEditModal}>\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>\r\n                Изменение данных для ID: {selectedRowId}\r\n              </Modal.Title>\r\n            </Modal.Header>\r\n            {isDeleteButton ? (\r\n              <div>Уверены что хотите удалить стол с ID: {selectedRowId}</div>\r\n            ) : (\r\n              <Modal.Body>\r\n                <FormControl\r\n                  aria-label='Small'\r\n                  defaultValue={changingFieldValue}\r\n                  onChange={(e) => {\r\n                    setChangingFieldValue(e.target.value)\r\n                  }}\r\n                  aria-describedby='inputGroup-sizing-sm'\r\n                />\r\n              </Modal.Body>\r\n            )}\r\n\r\n            <Modal.Footer>\r\n              <Button variant='secondary' onClick={closeEditModal}>\r\n                Закрыть\r\n              </Button>\r\n              <Button\r\n                variant='primary'\r\n                onClick={() => {\r\n                  isDeleteButton ?\r\n                    onClickDeleteButtonEditModal() :\r\n                    onClickSaveButtonEditModal()\r\n                }}\r\n              >\r\n                {isDeleteButton ? <div>Удалить</div> : <div>Сохранить</div>}\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n        </>\r\n      ) : null}\r\n      {arrayTables()}\r\n    </div>\r\n  )\r\n}\r\nexport default OrderedTables\r\n","import {Button, FormControl, Modal, Table} from 'react-bootstrap'\r\nimport {OrdersType} from '../../../../common/types/bookingTypes'\r\nimport {useState} from 'react'\r\nimport {ApiAdmin} from '../../../../api/ApiAdmin'\r\nimport {deleteUserOrder, updateUserOrder} from '../../../../redux/actions'\r\nimport {useDispatch} from 'react-redux'\r\n\r\nconst OrdersBooking = ({orders}: any) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const [isShowModal, setShowModal] = useState(false)\r\n  const [isDeleteButton, setIsDeleteButton] = useState(false)\r\n  const [changingFieldValue, setChangingFieldValue] = useState('')\r\n  const [selectedRowId, setSelectedRowId] = useState('')\r\n\r\n  const closeEditModal = () => {\r\n    setShowModal(false)\r\n    setIsDeleteButton(false)\r\n  }\r\n  const openEditModal = (id: any, value: any, name: any) => {\r\n    setChangingFieldValue(value)\r\n    setSelectedRowId(id)\r\n    setShowModal(true)\r\n  }\r\n  const openDeleteModal = (id: any) => {\r\n    setSelectedRowId(id)\r\n    setIsDeleteButton(true)\r\n    setShowModal(true)\r\n  }\r\n  const onClickDeleteButtonEditModal = () => {\r\n    ApiAdmin.deleteOrder(selectedRowId).then(() => {\r\n      dispatch(deleteUserOrder(selectedRowId))\r\n      closeEditModal()\r\n    })\r\n  }\r\n\r\n  const onClickSaveButtonEditModal = () => {\r\n    ApiAdmin.updateOrder(\r\n      selectedRowId,\r\n      changingFieldValue\r\n    ).then((el: any) => {\r\n      dispatch(\r\n        updateUserOrder({\r\n          order: el.data.updatedOrder,\r\n          id: selectedRowId\r\n        })\r\n      )\r\n      closeEditModal()\r\n    })\r\n  }\r\n  const arrayTables = () => {\r\n    return (\r\n      <Table hover>\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>Стоимость(руб.)</th>\r\n            <th>Состояние</th>\r\n            <th>Дата</th>\r\n            <th>Время</th>\r\n            <th>Количество гостей</th>\r\n            <th>Тип оплаты</th>\r\n          </tr>\r\n        </thead>\r\n        {orders.map((el: OrdersType) => {\r\n          if (el.type === 'Бронирование стола') {\r\n            return (\r\n              <tr key={el.id}>\r\n                <td>{el.id}</td>\r\n                <td>{el.price}</td>\r\n                <td onClick={() => {\r\n                  openEditModal(el.id, el.state, 'state')\r\n                }}>{el.state}</td>\r\n                <td>{el.date}</td>\r\n                <td>{el.time}</td>\r\n                <td width={'14%'}>{el.tableSize}</td>\r\n                <td width={'14%'}>\r\n                  {el.paymentType ? el.paymentType : 'Наличными'}\r\n                </td>\r\n                <Button\r\n                  onClick={() => {\r\n                    openDeleteModal(el.id)\r\n                  }}\r\n                  style={{backgroundColor: '#ff2828'}}\r\n                  variant='danger'\r\n                  size={'sm'}\r\n                >\r\n                  Удалить\r\n                </Button>\r\n              </tr>\r\n            )\r\n          }\r\n        })}\r\n      </Table>\r\n    )\r\n  }\r\n  return <div>\r\n    {isShowModal ? (\r\n      <>\r\n        <Modal show={isShowModal} onHide={closeEditModal}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>\r\n              Изменение данных для ID: {selectedRowId}\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          {isDeleteButton ? (\r\n            <div>Уверены что хотите удалить заказ с ID: {selectedRowId}</div>\r\n          ) : (\r\n            <Modal.Body>\r\n              <FormControl\r\n                aria-label='Small'\r\n                defaultValue={changingFieldValue}\r\n                onChange={(e) => {\r\n                  setChangingFieldValue(e.target.value)\r\n                }}\r\n                aria-describedby='inputGroup-sizing-sm'\r\n              />\r\n            </Modal.Body>\r\n          )}\r\n\r\n          <Modal.Footer>\r\n            <Button variant='secondary' onClick={closeEditModal}>\r\n              Закрыть\r\n            </Button>\r\n            <Button\r\n              variant='primary'\r\n              onClick={() => {\r\n                isDeleteButton ?\r\n                  onClickDeleteButtonEditModal() :\r\n                  onClickSaveButtonEditModal()\r\n              }}\r\n            >\r\n              {isDeleteButton ? <div>Удалить</div> : <div>Сохранить</div>}\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n    ) : null}{arrayTables()}</div>\r\n}\r\n\r\nexport default OrdersBooking\r\n","import {Button, FormControl, Modal, Table} from 'react-bootstrap'\r\nimport {OrdersType} from '../../../../common/types/bookingTypes'\r\nimport {useDispatch} from 'react-redux'\r\nimport {useState} from 'react'\r\nimport {ApiAdmin} from '../../../../api/ApiAdmin'\r\nimport {deleteUserOrder, updateUserOrder} from '../../../../redux/actions'\r\n\r\nconst OrdersTakeaway = ({orders}:any) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const [isShowModal, setShowModal] = useState(false)\r\n  const [isDeleteButton, setIsDeleteButton] = useState(false)\r\n  const [changingFieldValue, setChangingFieldValue] = useState('')\r\n  const [selectedRowId, setSelectedRowId] = useState('')\r\n\r\n  const closeEditModal = () => {\r\n    setShowModal(false)\r\n    setIsDeleteButton(false)\r\n  }\r\n  const openEditModal = (id: any, value: any, name: any) => {\r\n    setChangingFieldValue(value)\r\n    setSelectedRowId(id)\r\n    setShowModal(true)\r\n  }\r\n  const openDeleteModal = (id: any) => {\r\n    setSelectedRowId(id)\r\n    setIsDeleteButton(true)\r\n    setShowModal(true)\r\n  }\r\n  const onClickDeleteButtonEditModal = () => {\r\n    ApiAdmin.deleteOrder(selectedRowId).then(() => {\r\n      dispatch(deleteUserOrder(selectedRowId))\r\n      closeEditModal()\r\n    })\r\n  }\r\n\r\n  const onClickSaveButtonEditModal = () => {\r\n    ApiAdmin.updateOrder(\r\n      selectedRowId,\r\n      changingFieldValue\r\n    ).then((el: any) => {\r\n      dispatch(\r\n        updateUserOrder({\r\n          order: el.data.updatedOrder,\r\n          id: selectedRowId\r\n        })\r\n      )\r\n      closeEditModal()\r\n    })\r\n  }\r\n  const arrayTables = () => {\r\n    return (\r\n      <Table size={'lg'} hover>\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>Стоимость(руб.)</th>\r\n            <th>Состояние</th>\r\n            <th>Дата</th>\r\n            <th>Время</th>\r\n            <th>Тип оплаты</th>\r\n          </tr>\r\n        </thead>\r\n        {orders.map((el: OrdersType) => {\r\n          if (el.type === 'Навынос') {\r\n            return (\r\n              <tr key={el.id}>\r\n                <td>{el.id}</td>\r\n                <td>{el.price}</td>\r\n                <td onClick={() => {\r\n                  openEditModal(el.id, el.state, 'state')\r\n                }} >{el.state}</td>\r\n                <td>{el.date}</td>\r\n                <td>{el.time}</td>\r\n                <td width={'14%'}>{el.paymentType}</td>\r\n                <Button\r\n                  onClick={() => {\r\n                    openDeleteModal(el.id)\r\n                  }}\r\n                  style={{backgroundColor: '#ff2828'}}\r\n                  variant='danger'\r\n                  size={'sm'}\r\n                >\r\n                  Удалить\r\n                </Button>\r\n              </tr>\r\n            )\r\n          }\r\n        })}\r\n      </Table>\r\n    )\r\n  }\r\n  return <div>\r\n    {isShowModal ? (\r\n      <>\r\n        <Modal show={isShowModal} onHide={closeEditModal}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>\r\n              Изменение данных для ID: {selectedRowId}\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          {isDeleteButton ? (\r\n            <div>Уверены что хотите удалить заказ с ID: {selectedRowId}</div>\r\n          ) : (\r\n            <Modal.Body>\r\n              <FormControl\r\n                aria-label='Small'\r\n                defaultValue={changingFieldValue}\r\n                onChange={(e) => {\r\n                  setChangingFieldValue(e.target.value)\r\n                }}\r\n                aria-describedby='inputGroup-sizing-sm'\r\n              />\r\n            </Modal.Body>\r\n          )}\r\n\r\n          <Modal.Footer>\r\n            <Button variant='secondary' onClick={closeEditModal}>\r\n              Закрыть\r\n            </Button>\r\n            <Button\r\n              variant='primary'\r\n              onClick={() => {\r\n                isDeleteButton ?\r\n                  onClickDeleteButtonEditModal() :\r\n                  onClickSaveButtonEditModal()\r\n              }}\r\n            >\r\n              {isDeleteButton ? <div>Удалить</div> : <div>Сохранить</div>}\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n    ) : null}{arrayTables()}</div>\r\n}\r\n\r\nexport default OrdersTakeaway\r\n","import {Button, FormControl, Modal, Table} from 'react-bootstrap'\r\nimport {OrdersType} from '../../../../common/types/bookingTypes'\r\nimport {useDispatch} from 'react-redux'\r\nimport {useState} from 'react'\r\nimport {ApiAdmin} from '../../../../api/ApiAdmin'\r\nimport {deleteUserOrder, updateUserOrder} from '../../../../redux/actions'\r\n\r\nconst OrdersDelivery = ({orders}: any) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const [isShowModal, setShowModal] = useState(false)\r\n  const [isDeleteButton, setIsDeleteButton] = useState(false)\r\n  const [changingFieldValue, setChangingFieldValue] = useState('')\r\n  const [selectedRowId, setSelectedRowId] = useState('')\r\n\r\n  const closeEditModal = () => {\r\n    setShowModal(false)\r\n    setIsDeleteButton(false)\r\n  }\r\n  const openEditModal = (id: any, value: any, name: any) => {\r\n    setChangingFieldValue(value)\r\n    setSelectedRowId(id)\r\n    setShowModal(true)\r\n  }\r\n  const openDeleteModal = (id: any) => {\r\n    setSelectedRowId(id)\r\n    setIsDeleteButton(true)\r\n    setShowModal(true)\r\n  }\r\n  const onClickDeleteButtonEditModal = () => {\r\n    ApiAdmin.deleteOrder(selectedRowId).then(() => {\r\n      dispatch(deleteUserOrder(selectedRowId))\r\n      closeEditModal()\r\n    })\r\n  }\r\n\r\n  const onClickSaveButtonEditModal = () => {\r\n    ApiAdmin.updateOrder(\r\n      selectedRowId,\r\n      changingFieldValue\r\n    ).then((el: any) => {\r\n      dispatch(\r\n        updateUserOrder({\r\n          order: el.data.updatedOrder,\r\n          id: selectedRowId\r\n        })\r\n      )\r\n      closeEditModal()\r\n    })\r\n  }\r\n  const arrayTables = () => {\r\n    return (\r\n      <Table hover>\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>Стоимость(руб.)</th>\r\n            <th>Состояние</th>\r\n            <th>Дата</th>\r\n            <th>Время</th>\r\n            <th>Тип оплаты</th>\r\n            <th>Адрес</th>\r\n          </tr>\r\n        </thead>\r\n        {orders.map((el: OrdersType) => {\r\n          if (el.type === 'Доставка') {\r\n            return (\r\n              <tr key={el.id}>\r\n                <td>{el.id}</td>\r\n                <td>{el.price}</td>\r\n                <td onClick={() => {\r\n                  openEditModal(el.id, el.state, 'state')\r\n                }}>{el.state}</td>\r\n                <td>{el.date}</td>\r\n                <td>{el.time}</td>\r\n                <td width={'14%'}>{el.paymentType}</td>\r\n                <td width={'25%'}>{el.address}</td>\r\n                <Button\r\n                  onClick={() => {\r\n                    openDeleteModal(el.id)\r\n                  }}\r\n                  style={{backgroundColor: '#ff2828'}}\r\n                  variant='danger'\r\n                  size={'sm'}\r\n                >\r\n                  Удалить\r\n                </Button>\r\n              </tr>\r\n            )\r\n          }\r\n        })}\r\n      </Table>\r\n    )\r\n  }\r\n  return <div>{isShowModal ? (\r\n    <>\r\n      <Modal show={isShowModal} onHide={closeEditModal}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            Изменение данных для ID: {selectedRowId}\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        {isDeleteButton ? (\r\n          <div>Уверены что хотите удалить заказ с ID: {selectedRowId}</div>\r\n        ) : (\r\n          <Modal.Body>\r\n            <FormControl\r\n              aria-label='Small'\r\n              defaultValue={changingFieldValue}\r\n              onChange={(e) => {\r\n                setChangingFieldValue(e.target.value)\r\n              }}\r\n              aria-describedby='inputGroup-sizing-sm'\r\n            />\r\n          </Modal.Body>\r\n        )}\r\n\r\n        <Modal.Footer>\r\n          <Button variant='secondary' onClick={closeEditModal}>\r\n            Закрыть\r\n          </Button>\r\n          <Button\r\n            variant='primary'\r\n            onClick={() => {\r\n              isDeleteButton ?\r\n                onClickDeleteButtonEditModal() :\r\n                onClickSaveButtonEditModal()\r\n            }}\r\n          >\r\n            {isDeleteButton ? <div>Удалить</div> : <div>Сохранить</div>}\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  ) : null}{arrayTables()}</div>\r\n}\r\n\r\nexport default OrdersDelivery\r\n","import {useEffect, useState} from 'react'\r\nimport {ApiAdmin} from '../../../../api/ApiAdmin'\r\nimport {useDispatch} from 'react-redux'\r\nimport {setUsersOrders} from '../../../../redux/actions'\r\nimport {Col, Container, Row} from 'react-bootstrap'\r\nimport './Orders.scss'\r\nimport OrdersBooking from './OrderTypeBooking'\r\nimport {useAppSelector} from '../../../../redux/hooks'\r\nimport OrderTypeTakeaway from './OrderTypeTakeaway'\r\nimport OrdersDelivery from './OrderTypeDelivery'\r\n\r\nconst Orders = () => {\r\n  const dispatch = useDispatch()\r\n  const [show, setShow] = useState('')\r\n  const orders = useAppSelector((state) => state.orders.orders)\r\n  const handleLoad = () => {\r\n    ApiAdmin.getAllOrders().then((el) => {\r\n      dispatch(setUsersOrders(el.data.orders))\r\n      const a:any = document.querySelector('#delivery')\r\n      a.classList.add('menuLinkStylesActive')\r\n    })\r\n  }\r\n  useEffect(() => {\r\n    handleLoad()\r\n  }, [])\r\n\r\n  const setClassName = (text: string) => {\r\n    const htmlCollection = document.getElementsByClassName('menuLinkStyles')\r\n    const arr = [].slice.call(htmlCollection)\r\n    arr.forEach((el: any) => {\r\n      if (el.innerText === text) {\r\n        setShow(text)\r\n        el.classList.add('menuLinkStylesActive')\r\n      } else {\r\n        el.classList.remove('menuLinkStylesActive')\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Container className={'cont'}>\r\n        <Row\r\n          className={'row'}\r\n          onClick={(e: any) => {\r\n            setClassName(e.target.innerText)\r\n          }}\r\n          style={{width: '100%'}}\r\n        >\r\n          <Col xs={2} sm={2} md={3} lg={2}>\r\n            <a className={'menuLinkStyles'}>\r\n              <span style={{fontSize: '15px'}}>Навынос</span>\r\n            </a>\r\n          </Col>\r\n          <Col xs={3} sm={3} md={3} lg={3}>\r\n            <a id={'delivery'} className={'menuLinkStyles'}>\r\n              <span style={{fontSize: '15px'}}>Доставка</span>\r\n            </a>\r\n          </Col>\r\n          <Col xs={4} sm={4} md={4} lg={3}>\r\n            <a className={'menuLinkStyles'}>\r\n              <span style={{fontSize: '15px'}}>Бронирование стола</span>\r\n            </a>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      {show === 'Бронирование стола' ? (\r\n        <div>\r\n          <OrdersBooking orders={orders} />\r\n        </div>\r\n      ) : show === 'Навынос' ? (\r\n        <div>\r\n          <OrderTypeTakeaway orders={orders} />\r\n        </div>\r\n      ): <div>\r\n        <OrdersDelivery orders={orders} />\r\n      </div>}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Orders\r\n","import React from 'react'\r\nimport {Route, Switch} from 'react-router-dom'\r\nimport AllDishes from './deleteDish/deleteDish'\r\nimport NewDish from './addDish/addDish'\r\nimport OrderedTables from './tables/Tables'\r\nimport Orders from './orders/Orders'\r\n\r\nconst AdminRoutes: React.FC = () => {\r\n  return (\r\n    <div>\r\n      <Switch>\r\n        <Route path={'/admin/dishes/delete'} render={() => <AllDishes />} />\r\n        <Route path={'/admin/dishes/new'} render={() => <NewDish />} />\r\n        <Route path={'/admin/bookings'} render={() => <OrderedTables />} />\r\n        <Route path={'/admin/orders'} render={() => <Orders />} />\r\n      </Switch>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AdminRoutes\r\n","\r\nimport {Col, Container, Row, Nav} from 'react-bootstrap'\r\nimport {NavLink} from 'react-router-dom'\r\nimport {PATH} from './MenuRoutes'\r\nimport './Menu.scss'\r\n\r\n\r\nconst MenuHeader = () => (\r\n  <Container>\r\n    <Nav className='justify-content-start' activeKey='/home'>\r\n      <Row\r\n      >\r\n        <Col xs={'auto'}>\r\n          <NavLink\r\n            className={'menuLinkStyle'}\r\n            activeClassName={'menuActiveLink'}\r\n            to={PATH.PLATO}>\r\n            <h5>Плато</h5>\r\n          </NavLink>\r\n        </Col>\r\n        <Col xs={'auto'}>\r\n          <NavLink\r\n            className={'menuLinkStyle'}\r\n            activeClassName={'menuActiveLink'}\r\n\r\n            to={PATH.SOUP}>\r\n            <h5>Супы</h5>\r\n          </NavLink>\r\n        </Col>\r\n        <Col xs={'auto'}>\r\n          <NavLink\r\n            className={'menuLinkStyle'}\r\n            activeClassName={'menuActiveLink'}\r\n            to={PATH.SALAD}>\r\n            <h5>Салаты</h5>\r\n          </NavLink>\r\n        </Col>\r\n\r\n        <Col xs={'auto'}>\r\n          <NavLink\r\n            className={'menuLinkStyle'}\r\n            activeClassName={'menuActiveLink'}\r\n            to={PATH.OYSTERS}>\r\n            <h5>Запеченные устрицы</h5>\r\n          </NavLink>\r\n        </Col>\r\n\r\n        <Col xs={'auto'}>\r\n          <NavLink\r\n            className={'menuLinkStyle'}\r\n            activeClassName={'menuActiveLink'}\r\n            to={PATH.DESSERT}>\r\n            <h5>Дессерты</h5>\r\n          </NavLink>\r\n        </Col>\r\n\r\n      </Row>\r\n    </Nav>\r\n    <hr style=\r\n      {{\r\n        height: '2px',\r\n        borderWidth: '0',\r\n        color: 'gray',\r\n        backgroundColor: 'gray'\r\n      }}\r\n    />\r\n  </Container>\r\n)\r\n\r\n\r\nexport default MenuHeader\r\n","import React from 'react'\r\nimport {Col, Container, Row} from 'react-bootstrap'\r\nimport MenuHeader from './MenuHeader'\r\nimport ScrollToTop from '../../../components/scrollToTop/ScrollToTop'\r\n\r\n\r\nconst Menu: React.FC = () => (\r\n  <Container>\r\n    <ScrollToTop />\r\n    <Row>\r\n      <Col xs={3} className='justify-content-md-start'>\r\n        <h2 style={{padding: '20px', color: 'black'}}>\r\n            Меню\r\n        </h2>\r\n      </Col>\r\n      <Col xs={9}>\r\n      </Col>\r\n    </Row>\r\n    <MenuHeader/>\r\n  </Container>\r\n)\r\n\r\nexport default Menu\r\n","import Menu from './Menu/Menu'\r\n\r\nconst MenuPage = () => (\r\n  <Menu/>\r\n)\r\n\r\n\r\nexport default MenuPage\r\n","\r\nimport {Col, Container, Row, Nav} from 'react-bootstrap'\r\nimport {NavLink} from 'react-router-dom'\r\nimport './Admin.scss'\r\n\r\n\r\nconst AdminHeader = () => (\r\n  <Container>\r\n    <Nav className='justify-content-start' activeKey='/admin'>\r\n      <Row style={{width: '100%'}}\r\n      >\r\n        <Col xs={2} sm={2} md={3} lg={2} >\r\n          <NavLink\r\n            className={'menuLinkStyle'}\r\n            activeClassName={'menuActiveLink'}\r\n            to={'/admin/dishes/new'}>\r\n            <span style={{fontSize: '16px'}}>Добавить блюдо</span>\r\n          </NavLink>\r\n        </Col>\r\n        <Col xs={3} sm={3} md={3} lg={3} >\r\n          <NavLink\r\n            className={'menuLinkStyle'}\r\n            activeClassName={'menuActiveLink'}\r\n            to={'/admin/dishes/delete'}>\r\n            <span style={{fontSize: '16px'}}>Удалить блюдо</span>\r\n          </NavLink>\r\n        </Col>\r\n        <Col xs={4} sm={4} md={4} lg={3} >\r\n          <NavLink\r\n            className={'menuLinkStyle'}\r\n            activeClassName={'menuActiveLink'}\r\n            to={'/admin/bookings'}>\r\n            <span style={{fontSize: '16px'}}>Забронированные столы</span>\r\n          </NavLink>\r\n        </Col>\r\n        <Col xs={2} sm={2} md={2} lg={2}>\r\n          <NavLink\r\n            className={'menuLinkStyle'}\r\n            activeClassName={'menuActiveLink'}\r\n            to={'/admin/orders'}>\r\n            <span style={{fontSize: '16px'}}>Заказы</span>\r\n          </NavLink>\r\n        </Col>\r\n\r\n      </Row>\r\n    </Nav>\r\n    <hr style=\r\n      {{\r\n        height: '2px',\r\n        borderWidth: '0',\r\n        color: 'gray',\r\n        backgroundColor: 'gray'\r\n      }}\r\n    />\r\n  </Container>\r\n)\r\n\r\n\r\nexport default AdminHeader\r\n","import AdminHeader from './AdminHeader'\r\nimport ScrollToTop from '../../../components/scrollToTop/ScrollToTop'\r\n\r\nconst Admin = () => {\r\n  return (\r\n    <div>\r\n      <h2 style={{padding: '20px', color: 'black'}}>\r\n        Панель администратора\r\n      </h2>\r\n      <AdminHeader/>\r\n      <ScrollToTop />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Admin\r\n","import Admin from './Admin/Admin'\r\n\r\nconst AdminPage = () => (\r\n  <Admin/>\r\n)\r\n\r\nexport default AdminPage\r\n","import {useState, useEffect} from 'react'\r\n\r\nexport const useValidation = (value: string, validations: any) => {\r\n  const [isEmpty, setEmpty] = useState(true)\r\n  const [minLengthError, setMinLengthError] = useState(false)\r\n  const [maxLengthError, setMaxLengthError] = useState(false)\r\n  const [firstNameError, setFirstNameError] = useState(false)\r\n  const [lastNameError, setLastNameError] = useState(false)\r\n  const [emailError, setEmailError] = useState(false)\r\n  const [phoneNumberError, setPhoneNumberError] = useState(false)\r\n  const [passwordError, setPasswordError] = useState(false)\r\n  const [inputValid, setInputValid] = useState(false)\r\n\r\n  useEffect(() => {\r\n    // eslint-disable-next-line guard-for-in\r\n    for (const validation in validations) {\r\n      switch (validation) {\r\n      case 'isEmpty':\r\n        value ? setEmpty(false) : setEmpty(true)\r\n        break\r\n      case 'minLengthError':\r\n        (value.length < validations[validation]) ?\r\n          setMinLengthError(true) :\r\n          setMinLengthError(false)\r\n        break\r\n      case 'maxLengtnError':\r\n        (value.length > validations[validation]) ?\r\n          setMaxLengthError(true) :\r\n          setMaxLengthError(false)\r\n        break\r\n      case 'firstNameError':\r\n        // eslint-disable-next-line max-len\r\n        const regExpFirstName = /^[a-zA-Zа-яА-Я-]{2,30}$/\r\n        regExpFirstName.test(value) ?\r\n          setFirstNameError(false) :\r\n          setFirstNameError(true)\r\n        break\r\n      case 'lastNameError':\r\n        // eslint-disable-next-line max-len\r\n        const regExpLastName = /^[a-zA-Zа-яА-Я-]{3,30}$/\r\n        regExpLastName.test(value) ?\r\n          setLastNameError(false) :\r\n          setLastNameError(true)\r\n        break\r\n      case 'emailError':\r\n        const regExpEmail = /^[a-z\\d]{2,64}?@[a-z\\d.\\-]{2,253}\\.[a-z]{2,6}$/ig\r\n        regExpEmail.test(value.toLowerCase()) ?\r\n          setEmailError(false) :\r\n          setEmailError(true)\r\n        break\r\n      case 'phoneNumberError':\r\n        // eslint-disable-next-line max-len\r\n        const regExpPhoneNumber = /^(\\+?375-?|8-?0)(25|29|33|44|17)-?([1-9]\\d{2})(-?\\d{2}){2}$/\r\n        regExpPhoneNumber.test(value) ?\r\n          setPhoneNumberError(false) :\r\n          setPhoneNumberError(true)\r\n        break\r\n      case 'passwordError':\r\n        // eslint-disable-next-line max-len\r\n        const regExpPass = /^(?=.*[a-zа-я])(?=.*[A-ZА-Я])(?=.*[0-9])[a-zа-яA-ZА-Я\\d]{8,15}$/\r\n        regExpPass.test(value) ?\r\n          setPasswordError(false) :\r\n          setPasswordError(true)\r\n      }\r\n    }\r\n  }, [value])\r\n\r\n  useEffect(() => {\r\n    // eslint-disable-next-line max-len\r\n    if (isEmpty || minLengthError || maxLengthError || firstNameError || lastNameError || emailError || phoneNumberError || passwordError) {\r\n      setInputValid(false)\r\n    } else {\r\n      setInputValid(true)\r\n    }\r\n  }, [\r\n    isEmpty,\r\n    minLengthError,\r\n    maxLengthError,\r\n    firstNameError,\r\n    lastNameError,\r\n    emailError,\r\n    phoneNumberError,\r\n    passwordError\r\n  ])\r\n\r\n  return {\r\n    isEmpty,\r\n    minLengthError,\r\n    maxLengthError,\r\n    firstNameError,\r\n    lastNameError,\r\n    emailError,\r\n    phoneNumberError,\r\n    passwordError,\r\n    inputValid\r\n  }\r\n}\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport {useSelector} from 'react-redux'\r\nimport DatePicker from 'react-date-picker'\r\nimport {Form, FloatingLabel, Button, Modal} from 'react-bootstrap'\r\nimport {AppStoreType} from '../../redux/reducers/rootReducer'\r\nimport {useValidation} from '../../utils/validation'\r\nimport {ValidationType} from '../../common/types/userTypes'\r\nimport {UserType} from '../../common/types/userTypes'\r\nimport {bookingOrderType} from '../../common/types/bookingTypes'\r\nimport './BookingForms.scss'\r\n\r\ninterface IReserveATableFormProps {\r\n  handleBookingData: (reservOrder: bookingOrderType) => void\r\n}\r\n\r\nconst ReserveATableForm: React.FC<IReserveATableFormProps> =\r\n  ({handleBookingData}) => {\r\n    const user =\r\n     useSelector<AppStoreType, UserType>((state) => state.user.userProfile)\r\n\r\n    const [date, setDate] = useState<Date>(new Date())\r\n    const [timeSlot, setTimeSlot] = useState<string>('')\r\n    const [tableSize, setTableSize] = useState<any>()\r\n    const [isTimeInputSkipped, setTimeInputSkipped] = useState<boolean>(false)\r\n    const [isTableInputSkipped, setTableInputSkipped] = useState<boolean>(false)\r\n    const [orderDataError, setOrderDataError] = useState<boolean>(false)\r\n\r\n    const useInput = (initialValue: string, validations: ValidationType) => {\r\n      const [value, setValue] = useState(initialValue)\r\n      const [isDirty, setDirty] = useState(false)\r\n      const valid = useValidation(value, validations)\r\n\r\n      const onChange = (e: any) => {\r\n        setValue(e.target.value)\r\n      }\r\n\r\n      const onBlur = (e: any) => {\r\n        setDirty(true)\r\n      }\r\n\r\n      return {\r\n        value,\r\n        onChange,\r\n        onBlur,\r\n        isDirty,\r\n        ...valid\r\n      }\r\n    }\r\n\r\n    const table = useInput('', {isEmpty: true})\r\n    const time = useInput('', {isEmpty: true})\r\n\r\n    const phoneNumber = useInput(`${user.phone}`, {\r\n      isEmpty: true,\r\n      phoneNumberError: true,\r\n    })\r\n\r\n    const userName = useInput(`${user.name}`, {\r\n      isEmpty: true,\r\n      firstNameError: true,\r\n      minLengthError: 2,\r\n      maxLengthError: 30,\r\n    })\r\n\r\n\r\n    const checkBookingData=(reservOrder: any)=>{\r\n      if (isTableInvalid || isTimeInvalid || !date ||\r\n        isUserNameInvalid || isPhoneNumberInvalid) {\r\n        setOrderDataError(true)\r\n      } else {\r\n        handleBookingData(reservOrder)\r\n        setOrderDataError(false)\r\n      }\r\n    }\r\n\r\n    const isTimeInvalid = !time.isDirty || time.isDirty && isTimeInputSkipped\r\n\r\n    const isTableInvalid = !table.isDirty ||table.isDirty && isTableInputSkipped\r\n\r\n    const isPhoneNumberInvalid = phoneNumber.isDirty &&\r\n    (phoneNumber.isEmpty || phoneNumber.phoneNumberError)\r\n\r\n    const isUserNameInvalid = (userName.firstNameError && userName.isDirty) ||\r\n    (userName.isEmpty && userName.isDirty)\r\n\r\n    const tableSizes: Array<{count:string, key: number}> = [\r\n      {count: 'двоих гостей', key: 2},\r\n      {count: 'четверых гостей', key: 4},\r\n      {count: 'шестерых гостей', key: 6},\r\n      {count: 'восьмерых гостей', key: 8},\r\n      {count: 'десятерых гостей', key: 10},\r\n    ]\r\n\r\n    const timeSlots: Array<string> = [\r\n      '10:00',\r\n      '10:30',\r\n      '11:00',\r\n      '11:30',\r\n      '12:00',\r\n      '12:30',\r\n      '13:00',\r\n      '13:30',\r\n      '14:00',\r\n      '14:30',\r\n      '15:00',\r\n      '15:30',\r\n      '16:00',\r\n      '16:30',\r\n      '17:00',\r\n      '17:30',\r\n      '18:00',\r\n      '18:30',\r\n      '19:00',\r\n      '19:30',\r\n      '20:00',\r\n      '20:30',\r\n      '21:00',\r\n      '21:30',\r\n      '22:00',\r\n    ]\r\n\r\n    const month = date.getUTCMonth() + 1\r\n    const day = date.getUTCDate() + 1\r\n    const year = date.getUTCFullYear()\r\n    const strDate = `${year}-${month}-${day}`\r\n\r\n    const reservOrder={\r\n      date: strDate,\r\n      name: userName.value,\r\n      phone: phoneNumber.value,\r\n      time: timeSlot,\r\n      amountofpeople: tableSize\r\n    }\r\n\r\n    // -------------------------------------------------------\r\n\r\n    //  const data={date: strDate,\r\n    //   name: userName.value,\r\n    //   phone: phoneNumber.value,\r\n    //   time: timeSlot}\r\n\r\n    // let reservOrder: any ={}\r\n    // if (tableSize==2) {\r\n    //   reservOrder = {...data, amountofpeople: 2, forTwoPerson: 1}\r\n    // }\r\n    // if (tableSize==4) {\r\n    //   reservOrder = {...data, amountofpeople: 4, forFourPerson: 1}\r\n    // }\r\n    // -------------------------------------------------------\r\n\r\n    return (\r\n      <div className='reserve-a-table-form-booking shadow'>\r\n        <div className='form-section'>\r\n\r\n          <div className='form-data'>\r\n\r\n            <div className='section-numeration'>\r\n              <span>1</span>\r\n            </div>\r\n\r\n            <div className='section-header'>\r\n              <span>Выберите дату</span>\r\n            </div>\r\n\r\n            <div className='section-content'>\r\n              <DatePicker\r\n                clearIcon={null}\r\n                format='d-MM-y'\r\n                minDate={new Date()}\r\n                onChange={(date: Date) => setDate(date)}\r\n                value={date}\r\n                dayAriaLabel='Day'\r\n                monthAriaLabel='Month'\r\n                yearAriaLabel='Year'\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className='form-separation'></div>\r\n        </div>\r\n\r\n        <div className='form-section'>\r\n          <div className='form-data'>\r\n            <div className='section-numeration'>\r\n              <span>2</span>\r\n            </div>\r\n\r\n            <div className='section-header'>\r\n              <span>Количество гостей</span>\r\n            </div>\r\n\r\n            <div className='section-content'>\r\n              <FloatingLabel\r\n                controlId='floatingSelectGrid'\r\n                label='Столик для:'\r\n              >\r\n                {/* -------------------------------------- */}\r\n                <Form.Select\r\n                  aria-label='Floating label select example'\r\n                  defaultValue={tableSize}\r\n                  onChange={(e: ChangeEvent<HTMLSelectElement>) => {\r\n                    setTableSize(+ e.target.value)\r\n                    setTableInputSkipped(!e.target.value)\r\n                  }}\r\n                  onBlur={(e) => table.onBlur(e)}\r\n                  isInvalid={isTableInputSkipped}\r\n                >\r\n                  <option value=''>Выбрать...</option>\r\n                  {tableSizes.map((size, idx) => (\r\n                    <option\r\n                      value={size.key}\r\n                      key={idx}\r\n                    >\r\n                      {size.count}\r\n                    </option>\r\n                  ))}\r\n                </Form.Select>\r\n              </FloatingLabel>\r\n            </div>\r\n          </div>\r\n\r\n          <div className='form-separation'></div>\r\n        </div>\r\n\r\n        <div className='form-section'>\r\n          <div className='form-data'>\r\n            <div className='section-numeration'>\r\n              <span>3</span>\r\n            </div>\r\n\r\n            <div className='section-header'>\r\n              <span>Выберите время</span>\r\n            </div>\r\n\r\n            <div className='section-content'>\r\n              <FloatingLabel\r\n                controlId='floatingSelectGrid'\r\n                label='Бронь столика доступна с 10:00 до 22:00'\r\n              >\r\n                <Form.Select\r\n                  aria-label='Floating label select example'\r\n                  defaultValue={timeSlot}\r\n                  onChange={(e: ChangeEvent<HTMLSelectElement>) => {\r\n                    setTimeSlot(e.target.value)\r\n                    setTimeInputSkipped(!e.target.value)\r\n                  }}\r\n                  onBlur={(e) => time.onBlur(e)}\r\n                  isInvalid={isTimeInputSkipped}\r\n                >\r\n                  <option value=''>Выбрать...</option>\r\n                  {timeSlots.map((time, idx) => (\r\n                    <option value={time} key={time}>{time}</option>\r\n                  ))}\r\n                </Form.Select>\r\n              </FloatingLabel>\r\n            </div>\r\n          </div>\r\n\r\n          <div className='form-separation'></div>\r\n        </div>\r\n\r\n        <div className='form-section'>\r\n          <div className='form-data'>\r\n            <div className='section-numeration'>\r\n              <span>4</span>\r\n            </div>\r\n\r\n            <div className='section-header'>\r\n              <span>Контактные данные</span>\r\n            </div>\r\n\r\n            <div className='section-content payment-types'>\r\n\r\n\r\n              <Form.Floating className='mx-1'>\r\n                <Form.Control\r\n                  id='userName'\r\n                  type='text'\r\n                  placeholder='userName'\r\n                  value={userName.value}\r\n                  isInvalid={isUserNameInvalid}\r\n                  onChange={(e) => userName.onChange(e)}\r\n                  onBlur={(e) => userName.onBlur(e)}\r\n                />\r\n                <label htmlFor='userName'>\r\n                  Имя\r\n                </label>\r\n              </Form.Floating>\r\n              {\r\n                isUserNameInvalid &&\r\n                  <div className='error'>\r\n                   Имя обязательно\r\n                  </div>\r\n              }\r\n\r\n              <Form.Floating className='mx-1 my-3'>\r\n                <Form.Control\r\n                  id='userPhones'\r\n                  type='phoneNumber'\r\n                  placeholder='phones'\r\n                  value={phoneNumber.value}\r\n                  isInvalid={isPhoneNumberInvalid}\r\n                  onChange={(e) => phoneNumber.onChange(e)}\r\n                  onBlur={(e) => phoneNumber.onBlur(e)}\r\n                />\r\n                <label htmlFor='userPhones'>\r\n                  Номер телефона\r\n                </label>\r\n                {\r\n                  isPhoneNumberInvalid &&\r\n                  <div className='error'>\r\n                    Телефон должен содержать код в формате\r\n                    +375 (+ опционально) либо 80 и 9 цифр основного номера.\r\n                    Обязательно к заполнению.\r\n                  </div>\r\n                }\r\n              </Form.Floating>\r\n\r\n            </div>\r\n          </div>\r\n\r\n          <div className='form-separation'></div>\r\n        </div>\r\n\r\n        { orderDataError ?\r\n          <div style={{\r\n            color: 'red',\r\n            fontSize: '16px',\r\n            marginTop: '10px',\r\n            marginBottom: '20px',\r\n          }}>\r\n                    некорректно заполнены данные\r\n          </div>: null}\r\n\r\n        <div className='form-section'>\r\n          <div className='form-buttons'>\r\n            <Modal.Footer className='justify-content-center border-0'>\r\n              <Button\r\n                onClick={()=>checkBookingData(reservOrder)}\r\n                style={{width: '140px'}}\r\n                variant='outline-warning'\r\n                // disabled={ isTableInvalid || isTimeInvalid || !date ||\r\n                //   isUserNameInvalid || isPhoneNumberInvalid\r\n                // }\r\n              >\r\n              Забронировать\r\n              </Button>\r\n            </Modal.Footer>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default ReserveATableForm\r\n","\r\nimport {useHistory} from 'react-router-dom'\r\nimport {Card, Button} from 'react-bootstrap'\r\n\r\nconst ConfirmReservTable = (props:any) => {\r\n  const history = useHistory()\r\n\r\n  const handleClick = () => {\r\n    props.isCompleteToggle()\r\n    history.push('/')\r\n  }\r\n  return (\r\n    <div className='registration-form'>\r\n      <div className='container'>\r\n        <Card className='shadow p-3 my-5 bg-body rounded'>\r\n          <Card.Body>\r\n            <Card.Title><h2>Столик забронирован!</h2></Card.Title>\r\n            <Card.Text className='mb-5'>\r\n            </Card.Text>\r\n            <Button\r\n              variant='outline-warning'\r\n              type='button'\r\n              onClick={() => handleClick()}\r\n            >\r\n              Ok\r\n            </Button>\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ConfirmReservTable\r\n\r\n\r\n// const ConfirmReservTable = () => {\r\n//   return (\r\n//     <div className='cart'>\r\n//       <div className='container'>\r\n//         <h1>\r\n//    Спасибо за вашу заявку ! Администратор свяжется с вами в течение 10 минут\r\n//         </h1>\r\n//       </div>\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n// export default ConfirmReservTable\r\n","import axios from 'axios'\r\n\r\nimport {url as baseURL} from './index'\r\nimport {bookingOrderType} from '../common/types/bookingTypes'\r\n\r\nconst instance = axios.create({\r\n  baseURL\r\n})\r\n\r\nexport const ApiReserve = {\r\n  bookTableUnregistred(order:bookingOrderType) {\r\n    {\r\n      return Promise.resolve(\r\n        instance.post('booking/', order )\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\n","import {useState} from 'react'\r\nimport ReserveATableForm from './ReserveATableForm'\r\nimport ConfirmReservTable from './ConfirmReservTable'\r\nimport {ApiReserve} from '../../api/ApiBookTable'\r\nimport {bookingOrderType} from '../../common/types/bookingTypes'\r\n\r\n\r\nconst Booking = () => {\r\n  const [isComplete, setIsComplete] = useState<boolean>(true)\r\n\r\n  const handleBookingData = (reservOrder: bookingOrderType) => {\r\n    isCompleteToggle()\r\n    ApiReserve.bookTableUnregistred(reservOrder)\r\n      .then((res)=>console.log(res))\r\n  }\r\n\r\n  const isCompleteToggle = ()=>{\r\n    setIsComplete(!isComplete)\r\n  }\r\n\r\n  return (\r\n    <div className='cart'>\r\n      <div className='container'>\r\n        {!isComplete ?\r\n          <ConfirmReservTable isCompleteToggle={isCompleteToggle} />:\r\n          <>\r\n            <h1 className='m-3'>Забронируйте стол</h1>\r\n            <ReserveATableForm\r\n              handleBookingData={(reservOrder: bookingOrderType) =>\r\n                handleBookingData(reservOrder)\r\n              }/>\r\n          </>\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Booking\r\n","import React, {useState, ChangeEvent} from 'react'\r\nimport {useHistory} from 'react-router-dom'\r\nimport {useDispatch} from 'react-redux'\r\nimport Cookies from 'js-cookie'\r\nimport {Button, CloseButton, Form, Modal} from 'react-bootstrap'\r\n\r\nimport Spinner from '../Spinner/Spinner'\r\n\r\nimport {ApiAuth, TOKEN_EXPIRATION_TIME} from '../../api/ApiAuth'\r\nimport {ApiCart} from '../../api/ApiCart'\r\n\r\nimport {addDishToCart, logIn, getUserAC} from '../../redux/actions'\r\n\r\nimport {useValidation} from '../../utils/validation'\r\nimport {mapApiDishToDishInCart} from '../../utils/typeMappers'\r\n\r\nimport {ValidationType} from '../../common/types/userTypes'\r\nimport {ApiDish} from '../../common/types/dishesType'\r\n\r\nimport './LoginForm.scss'\r\n\r\ntype FormControlElement = HTMLInputElement | HTMLTextAreaElement\r\n\r\nconst LogInForm = () => {\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n\r\n  const [authFailed, setAuthFailed] = useState<boolean>(false)\r\n  const [isLoading, setIsLoading] = useState<boolean>(false)\r\n\r\n  const useInput = (initialValue: string, validations: ValidationType) => {\r\n    const [value, setValue] = useState<string>(initialValue)\r\n    const [isDirty, setDirty] = useState<boolean>(false)\r\n    const valid = useValidation(value, validations)\r\n\r\n    const onChange = (e: ChangeEvent<FormControlElement>) => {\r\n      setValue(e.target.value)\r\n      setAuthFailed(false)\r\n    }\r\n\r\n    const onBlur = (e: ChangeEvent<FormControlElement>) => {\r\n      setDirty(true)\r\n    }\r\n\r\n    return {\r\n      value,\r\n      onChange,\r\n      onBlur,\r\n      isDirty,\r\n      ...valid,\r\n    }\r\n  }\r\n\r\n  const email = useInput('', {\r\n    isEmpty: true,\r\n    minLengthError: 8,\r\n    maxLengthError: 325,\r\n    emailError: true,\r\n  })\r\n\r\n  const password = useInput('', {\r\n    isEmpty: true,\r\n    minLengthError: 8,\r\n    maxLengthError: 15,\r\n    passwordError: true,\r\n  })\r\n\r\n  const user = {\r\n    email: email.value,\r\n    password: password.value,\r\n  }\r\n\r\n  const isEmailInvalid =\r\n    email.isDirty &&\r\n    (email.isEmpty ||\r\n      email.minLengthError ||\r\n      email.maxLengthError ||\r\n      email.emailError)\r\n\r\n  const isPasswordInvalid =\r\n    password.isDirty &&\r\n    (password.isEmpty ||\r\n      password.minLengthError ||\r\n      password.maxLengthError ||\r\n      password.passwordError)\r\n\r\n  const handleClose = () => {\r\n    history.push('/')\r\n  }\r\n\r\n  const handleSubmit = (e: React.MouseEvent<Element, MouseEvent>) => {\r\n    e.preventDefault()\r\n    setIsLoading(true)\r\n\r\n    ApiAuth.login(user.email, user.password).then((response) => {\r\n      try {\r\n        if (response.status >= 200 && response.status < 300) {\r\n          Cookies.set(\r\n            'token',\r\n            response.data.accessToken,\r\n            {expires: TOKEN_EXPIRATION_TIME}\r\n          )\r\n          Cookies.set(\r\n            'refreshToken',\r\n            response.data.refreshToken,\r\n            {expires: TOKEN_EXPIRATION_TIME}\r\n          )\r\n          setIsLoading(false)\r\n          dispatch(logIn(response.data.data))\r\n          dispatch(getUserAC(response.data.data))\r\n          history.push('/')\r\n        } else {\r\n          setIsLoading(false)\r\n          throw new Error(response.statusText)\r\n        }\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    })\r\n      .catch((error) => {\r\n        setIsLoading(false)\r\n        setAuthFailed(true)\r\n      })\r\n      .then(() => {\r\n        ApiCart.getCart(Cookies.get('token')).then((resp) => {\r\n          resp.data.cart.forEach((dish: ApiDish) => {\r\n            dispatch(\r\n              addDishToCart(mapApiDishToDishInCart(dish))\r\n            )\r\n          })\r\n        })\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div className='login-form'>\r\n      <div className='container'>\r\n        <Modal.Dialog className='shadow p-3 mb-5 bg-body rounded'>\r\n          <Modal.Header className='border-0'>\r\n            <Modal.Title className='form-title'>Вход</Modal.Title>\r\n            <CloseButton onClick={() => handleClose()} />\r\n          </Modal.Header>\r\n          {isLoading && <Spinner />}\r\n          {authFailed && (\r\n            <div className='error validation'>\r\n              Адрес электронной почты или пароль введен с ошибкой. Пожалуйста,\r\n              попробуйте еще раз.\r\n            </div>\r\n          )}\r\n\r\n          <Modal.Body>\r\n            <Form className='my-3' style={{width: '100%'}}>\r\n              <Form.Floating className='mb-3 mx-3'>\r\n                <Form.Control\r\n                  autoFocus\r\n                  id='userEmail'\r\n                  type='email'\r\n                  placeholder='name@example.com'\r\n                  value={email.value}\r\n                  onChange={(e) => email.onChange(e)}\r\n                  onBlur={(e) => email.onBlur(e)}\r\n                />\r\n                <label htmlFor='userEmail'>Электронная почта</label>\r\n                {isEmailInvalid && (\r\n                  <div className='error'>\r\n                    Электронная почта должна быть в формате xxx@yyy.zzz, без\r\n                    специальных символов (#, %, &, !, $, etc.). Обязательно к\r\n                    заполнению.\r\n                  </div>\r\n                )}\r\n              </Form.Floating>\r\n\r\n              <Form.Floating className='mx-3'>\r\n                <Form.Control\r\n                  id='userPassword'\r\n                  type='password'\r\n                  placeholder='password'\r\n                  value={!authFailed ? password.value : ''}\r\n                  onChange={(e) => password.onChange(e)}\r\n                  onBlur={(e) => password.onBlur(e)}\r\n                />\r\n                <label htmlFor='userPassword'>Пароль</label>\r\n                {isPasswordInvalid && (\r\n                  <div className='error'>\r\n                    Пароль должен содержать 8-15 символов (включая 1 символ в\r\n                    верхнем регистре, 1 символ в нижнем регистре и 1 цифру) без\r\n                    пробелов и специальных знаков (#, %, &, !, $, etc.).\r\n                    Обязательно к заполнению.\r\n                  </div>\r\n                )}\r\n              </Form.Floating>\r\n            </Form>\r\n          </Modal.Body>\r\n\r\n          <Modal.Footer className='justify-content-center border-0'>\r\n            <Button\r\n              variant='outline-secondary'\r\n              type='button'\r\n              onClick={() => handleClose()}\r\n            >\r\n              Отменить\r\n            </Button>\r\n            <Button\r\n              disabled={!email.inputValid || !password.inputValid || authFailed}\r\n              variant='outline-warning'\r\n              type='submit'\r\n              onClick={(e) => handleSubmit(e)}\r\n            >\r\n              Войти\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal.Dialog>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LogInForm\r\n","\r\n\r\nimport LogInForm from '../../components/loginPageComponents/LoginForm'\r\n\r\nconst Login = () => {\r\n  return (\r\n    <div>\r\n      <LogInForm />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","/* eslint-disable max-len */\r\nimport React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport './page404.scss'\r\n\r\n\r\nconst Page404: React.FC = () => {\r\n  return (\r\n    <div>\r\n      <img\r\n        className='error-img'\r\n        src='images/BurntToast-big.png' alt='Error'/>\r\n      <p className='error-title'>Sorry, there is nothing here</p>\r\n      <p className='error-text'>\r\n      The child had looked so excited when the clown had presented a large red balloon. You had seen this, but in the throes of your morning commute you didn’t register it until it was too late. Who asked the government to support a fair right through Main Street during a week day anyway? Your bike barrelled right between the child and the clown and sent the balloon on its merry way. You didn’t turn back to see the damage you had done. Later you saw the balloon floating outside your office window.\r\n      </p>\r\n      <Link className='home-link' to='/'>Back to main page\r\n      </Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Page404\r\n","import React, {useState} from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport {Image} from 'react-bootstrap'\r\nimport Cookies from 'js-cookie'\r\n\r\nimport {orderedToast} from '../OrderToast/OrderedToast'\r\nimport ShiftingDish from '../../pages/menuPage/Menu/Dishes/ShiftingDish'\r\n\r\nimport {parseString} from '../../common/parceInString'\r\nimport {\r\n  DishInCart,\r\n  IngredientType,\r\n  IngredientsType,\r\n} from '../../common/types/dishesType'\r\nimport {TOrderItem} from '../../common/types/cartTypes'\r\n\r\nimport {\r\n  minusOneDish,\r\n  plusOneDish,\r\n  removeDishFromCart,\r\n  updateDishInCart,\r\n} from '../../redux/actions'\r\nimport {useAppSelector} from '../../redux/hooks'\r\nimport {ApiCart} from '../../api/ApiCart'\r\n\r\nimport './Cart.scss'\r\n\r\nconst OrderItem: React.FC<TOrderItem> = ({\r\n  id,\r\n  name,\r\n  price,\r\n  imageURL,\r\n  numberOfDishes,\r\n  position,\r\n}) => {\r\n  const token = Cookies.get('token')\r\n\r\n  const cartDishes: DishInCart[] =\r\n    useAppSelector((state) => state.cart.dishes)\r\n  const currentDish = cartDishes.find((el: DishInCart) => el.id === id)\r\n\r\n  const [counter, setCounter] = useState<number>(numberOfDishes)\r\n  const [show, setShow] = useState<boolean>(false)\r\n  const [dishСhangeStatus, setDishСhangeStatus] = useState<boolean>(false)\r\n  const [ingredients, setIngredients] =\r\n    useState<IngredientsType>(currentDish ? currentDish.ingredients : [])\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const getRemovedIngredients = (ingredients: IngredientType[]) => {\r\n    const removedIngredientsArr: Array<string> = []\r\n\r\n    ingredients.forEach((ingredient) => {\r\n      if (ingredient.isAdded === false) {\r\n        removedIngredientsArr.push(ingredient.name)\r\n      }\r\n    })\r\n\r\n    return removedIngredientsArr.join(', ')\r\n  }\r\n\r\n  const showIngredientsList = () => setShow(true)\r\n\r\n  const updateIngredients = (updIngridients: IngredientsType) => {\r\n    setIngredients(updIngridients)\r\n  }\r\n\r\n  const changeStatus = () => {\r\n    setDishСhangeStatus(!dishСhangeStatus)\r\n  }\r\n\r\n  const closeIngredientsList = () => {\r\n    ApiCart.updateDishInCart(\r\n      position,\r\n      numberOfDishes,\r\n      token,\r\n      parseString(ingredients)\r\n    ).then(() => {\r\n      getRemovedIngredients(ingredients)\r\n      dispatch(updateDishInCart({id: id, ingredients: ingredients}))\r\n      setShow(false)\r\n    })\r\n  }\r\n\r\n  const onDeleteHandler = () => {\r\n    ApiCart.deleteDishFromCart(position, Cookies.get('token')).then(() => {\r\n      dispatch(removeDishFromCart(id))\r\n      orderedToast(`Блюдо \"${name}\" удалено из корзины`)\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {show && currentDish ? (\r\n        <ShiftingDish\r\n          changeStatus={changeStatus}\r\n          currentDish={{\r\n            ...currentDish,\r\n            ingredients,\r\n          }}\r\n          updateIngredients={updateIngredients}\r\n          handleClose={closeIngredientsList}\r\n        />\r\n      ) : (\r\n        <div className='order-item shadow' id={String(id)}>\r\n          <div className='order-block order-img'>\r\n            <Image\r\n              className='rounded-3'\r\n              src={imageURL}\r\n              width={80}\r\n              height={80}\r\n            />\r\n          </div>\r\n\r\n          <div className='order-block order-details'>\r\n            <span className='order-title bold'>{name}</span>\r\n            <span>{Number(price) * numberOfDishes} BYN</span>\r\n            <a onClick={showIngredientsList} style={{cursor: 'pointer'}}>\r\n              Изменить состав\r\n            </a>\r\n            {\r\n              getRemovedIngredients(ingredients) &&\r\n              <span className='short-notice'>\r\n                без добавления ингредиента: {getRemovedIngredients(ingredients)}\r\n              </span>\r\n            }\r\n          </div>\r\n          <div className='order-block order-counter'>\r\n            <button\r\n              className='control'\r\n              onClick={() => {\r\n                if (counter > 1) {\r\n                  const readCounterVal = counter - 1\r\n                  setCounter(readCounterVal)\r\n                  ApiCart.updateDishInCart(position, readCounterVal, token)\r\n                    .then(\r\n                      () => {\r\n                        dispatch(minusOneDish({\r\n                          id: id,\r\n                          numberOfDishes: readCounterVal\r\n                        }))\r\n                      }\r\n                    )\r\n                } else {\r\n                  onDeleteHandler()\r\n                }\r\n              }}\r\n            >\r\n              -\r\n            </button>\r\n            <span className='counter'>{counter < 0 ? 0 : counter}</span>\r\n            <button\r\n              className='control'\r\n              onClick={() => {\r\n                const readCounterVal = counter + 1\r\n                setCounter(readCounterVal)\r\n                ApiCart.updateDishInCart(position, readCounterVal, token).then(\r\n                  () => {\r\n                    dispatch(plusOneDish({\r\n                      id: id,\r\n                      numberOfDishes: readCounterVal\r\n                    }))\r\n                  }\r\n                )\r\n              }}\r\n            >\r\n              +\r\n            </button>\r\n          </div>\r\n\r\n          <div className='order-block'>\r\n            <div className='order-deletion' onClick={() => onDeleteHandler()}>\r\n              <i className='far fa-trash-alt icon-height delete-button'></i>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OrderItem\r\n","import React from 'react'\r\nimport {useState} from 'react'\r\nimport {ButtonGroup, ToggleButton} from 'react-bootstrap'\r\n\r\nimport {TRadioBtnParams} from '../../common/types/cartTypes'\r\n\r\ninterface ITogglerProps {\r\n  radios: TRadioBtnParams[],\r\n  size: 'sm' | 'lg',\r\n  checkedBtn: string,\r\n  handleRadioValueChange: (value: string) => void\r\n}\r\n\r\nconst Toggler: React.FC<ITogglerProps> =\r\n  ({radios, size, checkedBtn, handleRadioValueChange}) => {\r\n    const [radioValue, setRadioValue] = useState<string>(checkedBtn)\r\n\r\n    const showCheckedOrderType = (checkedValue: string) => {\r\n      handleRadioValueChange(checkedValue)\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <ButtonGroup>\r\n          {radios.map((radio, idx) => (\r\n            <ToggleButton\r\n              size={size}\r\n              key={radio.value}\r\n              id={`radio-${idx}`}\r\n              type='radio'\r\n              variant='outline-warning'\r\n              name='radio'\r\n              value={radio.value}\r\n              checked={checkedBtn !== '' && radioValue === radio.value}\r\n              onChange={(e) => {\r\n                setRadioValue(e.currentTarget.value)\r\n                showCheckedOrderType(e.currentTarget.value)\r\n              }}\r\n            >\r\n              {radio.name}\r\n            </ToggleButton>\r\n          ))}\r\n        </ButtonGroup>\r\n      </>\r\n    )\r\n  }\r\n\r\nexport default Toggler\r\n","import {DishInCart} from '../../common/types/dishesType'\r\nimport {useAppSelector} from '../../redux/hooks'\r\n\r\nconst totalSum = () => {\r\n  const orderedDishes = useAppSelector<DishInCart[]>(\r\n    (state) => state.cart.dishes\r\n  )\r\n\r\n  const totalSum = orderedDishes.reduce(\r\n    (sum: number, current) =>\r\n      sum + Number(current.price) * current.numberOfDishes,\r\n    0\r\n  )\r\n  return totalSum\r\n}\r\n\r\nexport default totalSum\r\n\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport DatePicker from 'react-date-picker'\r\nimport {\r\n  Form,\r\n  FloatingLabel,\r\n  Button\r\n} from 'react-bootstrap'\r\nimport {useHistory} from 'react-router-dom'\r\nimport {useDispatch} from 'react-redux'\r\n\r\nimport {addOrder} from '../../../redux/actions'\r\nimport totalSum from '../totalSum'\r\n\r\nimport './OrderForms.scss'\r\ninterface IReserveATableFormProps {\r\n  handleRadioValueClearance: (value: string) => void\r\n}\r\n\r\nconst ReserveATableForm: React.FC<IReserveATableFormProps> =\r\n  ({handleRadioValueClearance}) => {\r\n    const history = useHistory()\r\n\r\n    const [date, setDate] = useState<Date>(new Date())\r\n\r\n    const [timeSlot, setTimeSlot] = useState<string>('')\r\n    const [isTimeInputSkipped, setTimeInputSkipped] = useState<boolean>(false)\r\n\r\n    const [tableSize, setTableSize] = useState<string>('')\r\n    const [isTableInputSkipped, setTableInputSkipped]=\r\n    useState<boolean>(false)\r\n\r\n    const [isPaymentSkipped, setPaymentSkipped] = useState<boolean>(false)\r\n    const [isPaymentConfirmed, setPaymentConfirmed] = useState<boolean>(false)\r\n\r\n    const [error, setError] = useState<boolean>(false)\r\n\r\n    const useInput = () => {\r\n      const [isDirty, setDirty] = useState<boolean>(false)\r\n\r\n      const onBlur = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        setDirty(true)\r\n        setError(false)\r\n      }\r\n\r\n      return {\r\n        onBlur,\r\n        isDirty\r\n      }\r\n    }\r\n\r\n    const table = useInput()\r\n    const time = useInput()\r\n\r\n    const isTimeInvalid =\r\n      !time.isDirty ||\r\n      (time.isDirty &&\r\n      isTimeInputSkipped)\r\n\r\n    const isTableInvalid =\r\n      !table.isDirty ||\r\n      (table.isDirty &&\r\n      isTableInputSkipped)\r\n\r\n    const tableSizes: Array<string> = [\r\n      'двоих гостей',\r\n      'четверых гостей',\r\n      'шестерых гостей',\r\n      'восьмерых гостей',\r\n      'десятерых гостей',\r\n    ]\r\n\r\n    const timeSlots: Array<string> = [\r\n      '10:00 - 11:00',\r\n      '11:00 - 12:00',\r\n      '12:00 - 13:00',\r\n      '13:00 - 14:00',\r\n      '14:00 - 15:00',\r\n      '15:00 - 16:00',\r\n      '16:00 - 17:00',\r\n      '17:00 - 18:00',\r\n      '18:00 - 19:00',\r\n      '19:00 - 20:00',\r\n      '20:00 - 21:00',\r\n      '21:00 - 22:00',\r\n    ]\r\n\r\n    const sum = totalSum()\r\n    const dispatch = useDispatch()\r\n    const handleSubmit = (e: React.MouseEvent<Element, MouseEvent>) => {\r\n      dispatch(addOrder({\r\n        date: date.toLocaleDateString(),\r\n        tableSize: tableSize,\r\n        time: timeSlot,\r\n        type: 'Бронирование стола',\r\n        paymentType: 'Картой онлайн',\r\n        price: sum\r\n      }))\r\n      history.push('/confirmation')\r\n    }\r\n\r\n    const clearCheckedOrderType = (checkedValue: string) => {\r\n      handleRadioValueClearance(checkedValue)\r\n    }\r\n\r\n    return (\r\n      <div className='reserve-a-table-form shadow'>\r\n        <div className='form-section'>\r\n          <div className='form-data'>\r\n            <div className='section-numeration'>\r\n              <span>1</span>\r\n            </div>\r\n\r\n            <div className='section-header'>\r\n              <span>Выберите дату</span>\r\n            </div>\r\n\r\n            <div className='section-content'>\r\n              <DatePicker\r\n                clearIcon={null}\r\n                format='dd.MM.y'\r\n                minDate={new Date()}\r\n                onChange={(date: Date) => setDate(date)}\r\n                value={date}\r\n                dayAriaLabel='Day'\r\n                monthAriaLabel='Month'\r\n                yearAriaLabel='Year'\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className='form-separation'></div>\r\n        </div>\r\n\r\n        <div className='form-section'>\r\n          <div className='form-data'>\r\n            <div className='section-numeration'>\r\n              <span>2</span>\r\n            </div>\r\n\r\n            <div className='section-header'>\r\n              <span>Количество гостей</span>\r\n            </div>\r\n\r\n            <div className='section-content'>\r\n              <FloatingLabel\r\n                controlId='floatingSelectGrid'\r\n                label='Столик для:'\r\n              >\r\n                <Form.Select\r\n                  required\r\n                  aria-label='Floating label select example'\r\n                  defaultValue={tableSize}\r\n                  onChange={(e: ChangeEvent<HTMLSelectElement>) => {\r\n                    setTableSize(e.target.value)\r\n                    setTableInputSkipped(!e.target.value)\r\n                    setError(false)\r\n                  }}\r\n                  onBlur={(e) => table.onBlur(e)}\r\n                  isInvalid={isTableInputSkipped}\r\n                >\r\n                  <option value=''>Выбрать...</option>\r\n                  {tableSizes.map((size, idx) => (\r\n                    <option\r\n                      value={size}\r\n                      key={size}\r\n                    >\r\n                      {size}\r\n                    </option>\r\n                  ))}\r\n                </Form.Select>\r\n              </FloatingLabel>\r\n            </div>\r\n          </div>\r\n\r\n          <div className='form-separation'></div>\r\n        </div>\r\n\r\n        <div className='form-section'>\r\n          <div className='form-data'>\r\n            <div className='section-numeration'>\r\n              <span>3</span>\r\n            </div>\r\n\r\n            <div className='section-header'>\r\n              <span>Выберите время</span>\r\n            </div>\r\n\r\n            <div className='section-content'>\r\n              <FloatingLabel\r\n                controlId='floatingSelectGrid'\r\n                label='Бронь столика доступна с 10:00 до 22:00'\r\n              >\r\n                <Form.Select\r\n                  aria-label='Floating label select example'\r\n                  defaultValue={timeSlot}\r\n                  onChange={(e: ChangeEvent<HTMLSelectElement>) => {\r\n                    setTimeSlot(e.target.value)\r\n                    setTimeInputSkipped(!e.target.value)\r\n                    setError(false)\r\n                  }}\r\n                  onBlur={(e) => time.onBlur(e)}\r\n                  isInvalid={isTimeInputSkipped}\r\n                >\r\n                  <option value=''>Выбрать...</option>\r\n                  {timeSlots.map((time, idx) => (\r\n                    <option value={time} key={time}>{time}</option>\r\n                  ))}\r\n                </Form.Select>\r\n              </FloatingLabel>\r\n            </div>\r\n          </div>\r\n\r\n          <div className='form-separation'></div>\r\n        </div>\r\n\r\n        <div className='form-section'>\r\n          <div className='form-data'>\r\n            <div className='section-numeration'>\r\n              <span>4</span>\r\n            </div>\r\n\r\n            <div className='section-header'>\r\n              <span>Оплата</span>\r\n            </div>\r\n\r\n            <div className='section-content payment-types'>\r\n              <Form.Group controlId='formBasicCheckbox'>\r\n                <Form.Check\r\n                  type='checkbox'\r\n                  label='Я согласен оплатить заказ онлайн'\r\n                  checked={isPaymentConfirmed}\r\n                  onChange={\r\n                    (e: ChangeEvent<HTMLInputElement>) => {\r\n                      if (e.target.checked) {\r\n                        setPaymentConfirmed(true)\r\n                        setPaymentSkipped(false)\r\n                      } else {\r\n                        setPaymentConfirmed(false)\r\n                        setPaymentSkipped(true)\r\n                      }\r\n                    }\r\n                  }\r\n                  isInvalid={isPaymentSkipped}\r\n                />\r\n                {\r\n                  (error && isPaymentSkipped) &&\r\n                  <div className='error'>\r\n                    Бронь стола доступна только по предварительному заказу\r\n                  </div>\r\n                }\r\n              </Form.Group>\r\n            </div>\r\n          </div>\r\n\r\n          <div className='form-separation'></div>\r\n        </div>\r\n\r\n        <div className='form-section'>\r\n          {error &&\r\n            <div className='error error-form'>\r\n              Все поля формы должны быть заполнены\r\n            </div>\r\n          }\r\n          <div className='form-buttons'>\r\n            <Button\r\n              variant='outline-secondary mx-2'\r\n              onClick={() => clearCheckedOrderType('')}\r\n            >\r\n              Отмена\r\n            </Button>\r\n            <Button\r\n              variant='outline-warning'\r\n              onClick={(e) => {\r\n                if (!isTableInvalid &&\r\n                  !isTimeInvalid &&\r\n                  !isPaymentSkipped &&\r\n                  date &&\r\n                  isPaymentConfirmed) {\r\n                  handleSubmit(e)\r\n                } else setError(true)\r\n              }}\r\n            >\r\n              Далее\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default ReserveATableForm\r\n","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://suggestions.dadata.ru/suggestions/api/4_1/rs/suggest/address',\r\n})\r\n\r\nconst KEY= 'dff137738364ea1d173be3de51fd7c58c1ccba70'\r\n\r\nexport const ApiDelivery = {\r\n  getDelivery(query:string) {\r\n    return instance.post('', {'query': `${query}`,\r\n      'locations': [\r\n        {'country': 'Беларусь', 'region': 'Минск'}\r\n      ],\r\n      'restrict_value': true\r\n    },\r\n    {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',\r\n        'Authorization': 'Token ' + KEY\r\n      },\r\n    })\r\n  }\r\n}\r\n\r\n\r\n","import {useEffect, useState, ChangeEvent, FocusEvent} from 'react'\r\nimport {Form} from 'react-bootstrap'\r\nimport {useClickOutside} from 'react-click-outside-hook'\r\nimport {DeliveryAdressType} from '../../../common/types/userTypes'\r\nimport {ApiDelivery} from '../../../api/ApiDelivery'\r\nimport useDebounce from '../../../utils/useDebounce'\r\nimport Spinner from '../../Spinner/Spinner'\r\nimport './searchDelivery.scss'\r\n\r\ntype PropsType = {\r\n  searchValue: (value:string) => void\r\n  currentValue:string\r\n  required?: boolean,\r\n  isInvalid?: boolean,\r\n  onChange?: (e: ChangeEvent<HTMLInputElement>) => void,\r\n  onBlur?: (e: FocusEvent<HTMLInputElement>) => void,\r\n}\r\n\r\nconst SearchDelivery = (props:PropsType) => {\r\n  const [ref, isClickedOutside] = useClickOutside()\r\n\r\n  const [adress, setAdress] = useState<DeliveryAdressType[]>([])\r\n  const [isOpen, setIsOpen] = useState<boolean>(false)\r\n  const [searchQuery, setSearchQuery] = useState<string>('')\r\n  const [isLoading, setIsLoading] = useState<boolean>(false)\r\n\r\n  const isEmpty = !adress || adress.length === 0\r\n\r\n  const debouncedSearchQuery = useDebounce(searchQuery, 1000)\r\n\r\n  useEffect(() => {\r\n    const getData = async (query: string) => {\r\n      setSearchQuery(query)\r\n      setIsOpen(true)\r\n      setIsLoading(true)\r\n      if (!query || query.trim() === '') return\r\n\r\n      const response: {data:any} = await\r\n      ApiDelivery.getDelivery(searchQuery)\r\n      setIsLoading(false)\r\n      setAdress(response.data.suggestions)\r\n    }\r\n    getData(debouncedSearchQuery)\r\n    setIsOpen(false)\r\n  }, [debouncedSearchQuery])\r\n\r\n  useEffect(() => {\r\n    if (searchQuery) {\r\n      setIsOpen(true)\r\n      setIsLoading(true)\r\n    } else {\r\n      setIsOpen(false)\r\n      setIsLoading(false)\r\n    }\r\n  }, [debouncedSearchQuery])\r\n\r\n  useEffect(() => {\r\n    if (isClickedOutside) {\r\n      setIsOpen(false)\r\n      setSearchQuery('')\r\n      setIsLoading(false)\r\n    }\r\n  }, [isClickedOutside])\r\n\r\n  const itemClickHandler = (value: string) => {\r\n    props.searchValue(value)\r\n    setSearchQuery('')\r\n    setIsOpen(false)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Form className='mx-6 d-flex-pos justify-content-end' ref={ref}>\r\n        <label htmlFor='search' className='street-lable'>Улица</label>\r\n        <Form.Control\r\n          placeholder={props.currentValue}\r\n          required\r\n          name='search'\r\n          value={searchQuery}\r\n          onChange={(e)=>setSearchQuery(e.target.value)}\r\n        />\r\n\r\n        {isLoading && <Spinner />}\r\n        {isEmpty && isOpen && (\r\n          <ul className='autocomplete_delivery autocomplete-warn'>\r\n            Начните вводить название улицы\r\n          </ul>\r\n        )}\r\n\r\n        {isOpen && isEmpty && !isLoading && (\r\n          <ul className='autocomplete_delivery autocomplete-warn'>\r\n            Совпадений не найдено для &quot;{debouncedSearchQuery}&quot;\r\n          </ul>\r\n        )}\r\n\r\n        {isOpen && !isEmpty && !isLoading && (\r\n          <ul\r\n            className='autocomplete_delivery'\r\n          >\r\n            {adress.map((adress:any, index: number) => {\r\n              const temp=adress.value.split(' ')\r\n              return (\r\n                <li\r\n                  className='autocomplete__item_delivery'\r\n                  key={index}\r\n                  onClick={() => itemClickHandler(temp[1])}\r\n                >\r\n                  {temp[1]}\r\n                </li>\r\n              )\r\n            })}\r\n          </ul>\r\n        )}\r\n      </Form>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SearchDelivery\r\n","import React, {ChangeEvent, FocusEvent, useState} from 'react'\r\nimport DatePicker from 'react-date-picker'\r\nimport {\r\n  Form,\r\n  Row,\r\n  Col,\r\n  FloatingLabel,\r\n  Button,\r\n  ToggleButton,\r\n  ToggleButtonGroup\r\n} from 'react-bootstrap'\r\nimport {useHistory} from 'react-router-dom'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\n\r\nimport SearchDelivery from\r\n  '../../../components/userProfile/deliveryAdress/SearchDelivery'\r\nimport {addOrder} from '../../../redux/actions'\r\nimport totalSum from '../totalSum'\r\nimport {AppStoreType} from '../../../redux/reducers/rootReducer'\r\nimport {DeliveryAdressType, UserType} from '../../../common/types/userTypes'\r\n\r\nimport './OrderForms.scss'\r\n\r\n\r\ninterface ITakeawayFormProps {\r\n  handleRadioValueClearance: (value: string) => void\r\n}\r\n\r\nconst DeliveryForm: React.FC<ITakeawayFormProps> =\r\n  ({handleRadioValueClearance}) => {\r\n    const history = useHistory()\r\n    const city = 'г.Минск'\r\n\r\n    const user = useSelector<AppStoreType, UserType & DeliveryAdressType>(\r\n      (state) => state.user.userProfile)\r\n\r\n    const [date, setDate] = useState<Date>(new Date())\r\n    const [timeSlot, setTimeSlot] = useState<string>('')\r\n    const [isTimeInputSkipped, setTimeInputSkipped] = useState<boolean>(false)\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState<string>('')\r\n    const [isPaymentInputSkipped, setPaymentInputSkipped] =\r\n      useState<boolean>(false)\r\n\r\n    const [street, setStreet] = useState<string>(user.street)\r\n    const [streetError, setStreetError] = useState<boolean>(false)\r\n    const [homeNumber, setHomeNumber] = useState<string>(`${user.homeNumber}`)\r\n    const [homeNumberError, setHomeNumberError] = useState<boolean>(false)\r\n    const [homePart, setHomePart] = useState<string>(`${user.homePart}`)\r\n    const [flat, setFlat] = useState<string>(`${user.flat}`)\r\n\r\n    const useInput = () => {\r\n      const [isDirty, setDirty] = useState<boolean>(false)\r\n\r\n      const onBlur = (e: ChangeEvent<HTMLSelectElement> |\r\n        FocusEvent<HTMLInputElement>) => {\r\n        setDirty(true)\r\n      }\r\n\r\n      return {\r\n        onBlur,\r\n        isDirty\r\n      }\r\n    }\r\n\r\n    const timeValidation = useInput()\r\n    const streetValidation = useInput()\r\n    const homeValidation = useInput()\r\n\r\n    const streetSelect = (value:string) => {\r\n      setStreet(value)\r\n    }\r\n\r\n    const isTimeInvalid =\r\n      !timeValidation.isDirty ||\r\n      timeValidation.isDirty && isTimeInputSkipped\r\n\r\n    const timeSlots: Array<string> = [\r\n      '16:00 - 18:00',\r\n      '18:00 - 20:00',\r\n      '20:00 - 22:00',\r\n    ]\r\n\r\n    const clearCheckedOrderType = (checkedValue: string) => {\r\n      handleRadioValueClearance(checkedValue)\r\n    }\r\n\r\n    const sum = totalSum()\r\n\r\n    const dispatch = useDispatch()\r\n    const handleSubmit = ((e: React.MouseEvent<Element, MouseEvent>)=> {\r\n      const adress = {\r\n        city,\r\n        street,\r\n        homeNumber,\r\n        homePart,\r\n        flat\r\n      }\r\n\r\n      const adressValues = Object.values(adress)\r\n        .toString()\r\n        .replace(/[,\\s]*,[,\\s]*/g, ', ')\r\n        .replace(/^,/, '').replace(/,$/, '')\r\n\r\n      dispatch(addOrder({\r\n        address: adressValues,\r\n        date: date.toLocaleDateString(),\r\n        time: timeSlot,\r\n        type: 'Доставка',\r\n        paymentType: paymentMethod,\r\n        price: sum\r\n      }))\r\n      history.push('/confirmation')\r\n    })\r\n\r\n    return (\r\n      <div className='delivery-form shadow'>\r\n        <div className='form-section'>\r\n          <div className='form-data'>\r\n            <div className='section-numeration'>\r\n              <span>1</span>\r\n            </div>\r\n\r\n            <div className='section-header'>\r\n              <span>Выберите дату</span>\r\n            </div>\r\n\r\n            <div className='section-content'>\r\n              <DatePicker\r\n                clearIcon={null}\r\n                format='dd.MM.y'\r\n                minDate={new Date()}\r\n                onChange={(date: Date) => setDate(date)}\r\n                required\r\n                value={date}\r\n                dayAriaLabel='Day'\r\n                monthAriaLabel='Month'\r\n                yearAriaLabel='Year'\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className='form-separation'></div>\r\n        </div>\r\n\r\n        <div className='form-section'>\r\n          <div className='form-data'>\r\n            <div className='section-numeration'>\r\n              <span>2</span>\r\n            </div>\r\n\r\n            <div className='section-header'>\r\n              <span>Выберите время</span>\r\n            </div>\r\n\r\n            <div className='section-content'>\r\n              <FloatingLabel\r\n                controlId='floatingSelectGrid'\r\n                label='Доставка доступна с 16:00 до 22:00'\r\n              >\r\n                <Form.Select\r\n                  aria-label='Select time slot'\r\n                  defaultValue={timeSlot}\r\n                  onChange={(e: ChangeEvent<HTMLSelectElement>) => {\r\n                    setTimeSlot(e.target.value)\r\n                    setTimeInputSkipped(!e.target.value)\r\n                  }}\r\n                  onBlur={(e) => timeValidation.onBlur(e)}\r\n                  isInvalid={isTimeInputSkipped}\r\n                >\r\n                  <option value={''}>Выбрать...</option>\r\n                  {timeSlots.map((time, idx) => (\r\n                    <option value={time} key={time}>{time}</option>\r\n                  ))}\r\n                </Form.Select>\r\n              </FloatingLabel>\r\n              {\r\n                (timeValidation.isDirty && !timeSlot) &&\r\n                  <div className='error'>\r\n                    Пожалуйста, выберите время доставки для текущего заказа\r\n                  </div>\r\n              }\r\n            </div>\r\n\r\n          </div>\r\n          <div className='form-separation'></div>\r\n        </div>\r\n\r\n        <div className='form-section'>\r\n          <div className='form-data'>\r\n            <div className='section-numeration'>\r\n              <span>3</span>\r\n            </div>\r\n\r\n            <div className='section-header'>\r\n              <span>Укажите адрес</span>\r\n            </div>\r\n\r\n            <div className='section-content'>\r\n\r\n              <div>\r\n                <Row className='mb-3'>\r\n                  <Col>\r\n                    <span className='street-lable'>{city}</span>\r\n                    <SearchDelivery\r\n                      required\r\n                      searchValue={streetSelect}\r\n                      currentValue={street}\r\n                      isInvalid={streetValidation.isDirty && !streetValidation}\r\n                      onChange={(e: ChangeEvent<HTMLInputElement>) => {\r\n                        setStreet(e.target.value)\r\n                        setStreetError(false)\r\n                      }}\r\n                      onBlur={(e: FocusEvent<HTMLInputElement>) => {\r\n                        streetValidation.onBlur(e)\r\n                        setStreetError(true)\r\n                      }}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n\r\n                {\r\n                  (streetError && !street) &&\r\n                <div className='error error-adress'>\r\n                  Пожалуйста, укажите адрес доставки!\r\n                </div>\r\n                }\r\n                <Row>\r\n                  <Col>\r\n                    <Form.Control\r\n                      placeholder='Дом'\r\n                      required\r\n                      name='house'\r\n                      maxLength={3}\r\n                      defaultValue={homeNumber}\r\n                      isInvalid={homeValidation.isDirty && !homeNumber}\r\n                      onChange={(e: ChangeEvent<HTMLInputElement>) => {\r\n                        setHomeNumber(e.target.value)\r\n                        setHomeNumberError(false)\r\n                      }\r\n                      }\r\n                      onBlur={(e: FocusEvent<HTMLInputElement>) => {\r\n                        homeValidation.onBlur(e)\r\n                        setHomeNumberError(true)\r\n                      }}\r\n                    />\r\n                  </Col>\r\n                  <Col>\r\n                    <Form.Control\r\n                      placeholder='Корпус'\r\n                      defaultValue={homePart}\r\n                      onChange={(e: ChangeEvent<HTMLInputElement>) =>\r\n                        setHomePart(e.target.value)}\r\n                    />\r\n                  </Col>\r\n                  <Col>\r\n                    <Form.Control\r\n                      placeholder='Квартира'\r\n                      maxLength={4}\r\n                      defaultValue={flat}\r\n                      onChange={(e: ChangeEvent<HTMLInputElement>) =>\r\n                        setFlat(e.target.value)}\r\n                    />\r\n                  </Col>\r\n                  {\r\n                    (homeNumberError && !homeNumber) &&\r\n                  <div className='error'>\r\n                    Поле не может быть пустым!\r\n                  </div>\r\n                  }\r\n                </Row>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className='form-separation'></div>\r\n        </div>\r\n\r\n        <div className='form-section'>\r\n          <div className='form-data'>\r\n            <div className='section-numeration'>\r\n              <span>4</span>\r\n            </div>\r\n\r\n            <div className='section-header'>\r\n              <span>Выберите способ оплаты</span>\r\n            </div>\r\n\r\n            <div className='section-content payment-types'>\r\n              <ToggleButtonGroup\r\n                className='w-100'\r\n                type='radio'\r\n                name='options'\r\n                size='sm'\r\n                defaultValue={paymentMethod}\r\n              >\r\n                <ToggleButton\r\n                  id='tbg-radio-1'\r\n                  value='Наличными'\r\n                  variant='outline-warning'\r\n                  onChange={(e) => {\r\n                    setPaymentMethod(e.currentTarget.value)\r\n                    setPaymentInputSkipped(!e.currentTarget.value)\r\n                  }}\r\n                >\r\n                Наличными\r\n                </ToggleButton>\r\n                <ToggleButton\r\n                  id='tbg-radio-2'\r\n                  value='Картой онлайн'\r\n                  variant='outline-warning'\r\n                  onChange={(e) => {\r\n                    setPaymentMethod(e.currentTarget.value)\r\n                    setPaymentInputSkipped(!e.currentTarget.value)\r\n                  }}\r\n                >\r\n                Картой онлайн\r\n                </ToggleButton>\r\n                <ToggleButton\r\n                  id='tbg-radio-3'\r\n                  value='Картой на месте'\r\n                  variant='outline-warning'\r\n                  onChange={(e) => {\r\n                    setPaymentMethod(e.currentTarget.value)\r\n                    setPaymentInputSkipped(!e.currentTarget.value)\r\n                  }}\r\n                >\r\n                Картой на месте\r\n                </ToggleButton>\r\n              </ToggleButtonGroup>\r\n              {\r\n                isPaymentInputSkipped &&\r\n              <div className='error'>\r\n                Пожалуйста, выберите способ оплаты для текущего заказа\r\n              </div>\r\n              }\r\n            </div>\r\n          </div>\r\n\r\n          <div className='form-separation'></div>\r\n        </div>\r\n\r\n        <div className='form-section'>\r\n          <div className='form-buttons'>\r\n            <Button\r\n              variant='outline-secondary mx-2'\r\n              onClick={() => clearCheckedOrderType('')}\r\n            >\r\n              Отмена\r\n            </Button>\r\n            <Button\r\n              variant='outline-warning'\r\n              disabled={\r\n                isTimeInvalid ||\r\n                !street ||\r\n                !homeNumber ||\r\n                isPaymentInputSkipped\r\n              }\r\n              onClick={\r\n                (e) => {\r\n                  !paymentMethod && setPaymentInputSkipped(true)\r\n\r\n                  if (paymentMethod &&\r\n                    !isTimeInvalid &&\r\n                    street &&\r\n                    homeNumber\r\n                  ) handleSubmit(e)\r\n                }\r\n              }\r\n            >\r\n              Далее\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default DeliveryForm\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport DatePicker from 'react-date-picker'\r\nimport {\r\n  Form,\r\n  FloatingLabel,\r\n  Button,\r\n  ToggleButton,\r\n  ToggleButtonGroup\r\n} from 'react-bootstrap'\r\nimport {useHistory} from 'react-router-dom'\r\nimport {useDispatch} from 'react-redux'\r\nimport {addOrder} from '../../../redux/actions'\r\nimport totalSum from '../totalSum'\r\n\r\nimport './OrderForms.scss'\r\n\r\ninterface ITakeawayFormProps {\r\n  handleRadioValueClearance: (value: string) => void\r\n}\r\n\r\nconst TakeawayForm: React.FC<ITakeawayFormProps> =\r\n  ({handleRadioValueClearance}) => {\r\n    const history = useHistory()\r\n    const [date, setDate] = useState<Date>(new Date())\r\n    const [timeSlot, setTimeSlot] = useState<string>('')\r\n    const [paymentMethod, setPaymentMethod] = useState<string>('')\r\n    const [isTimeInputSkipped, setTimeInputSkipped] = useState<boolean>(false)\r\n    const [isPaymentInputSkipped, setPaymentInputSkipped] =\r\n      useState<boolean>(false)\r\n\r\n    const useInput = () => {\r\n      const [isDirty, setDirty] = useState<boolean>(false)\r\n\r\n      const onBlur = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        setDirty(true)\r\n      }\r\n\r\n      return {\r\n        onBlur,\r\n        isDirty\r\n      }\r\n    }\r\n\r\n    const time = useInput()\r\n\r\n    const isTimeInvalid =\r\n      !time.isDirty ||\r\n      time.isDirty && isTimeInputSkipped\r\n\r\n    const timeSlots: Array<string> = [\r\n      '10:00 - 12:00',\r\n      '12:00 - 14:00',\r\n      '14:00 - 16:00',\r\n      '16:00 - 18:00',\r\n      '18:00 - 20:00',\r\n      '20:00 - 22:00',\r\n    ]\r\n\r\n    const clearCheckedOrderType = (checkedValue: string) => {\r\n      handleRadioValueClearance(checkedValue)\r\n    }\r\n\r\n    const sum = totalSum()\r\n    const dispatch = useDispatch()\r\n    const handleSubmit = (e: React.MouseEvent<Element, MouseEvent>) => {\r\n      dispatch(addOrder({\r\n        date: date.toLocaleDateString(),\r\n        time: timeSlot,\r\n        type: 'Навынос',\r\n        paymentType: paymentMethod,\r\n        price: sum\r\n      }))\r\n      history.push('/confirmation')\r\n    }\r\n\r\n    return (\r\n      <div className='takeaway-form shadow'>\r\n        <div className='form-section'>\r\n          <div className='form-data'>\r\n            <div className='section-numeration'>\r\n              <span>1</span>\r\n            </div>\r\n\r\n            <div className='section-header'>\r\n              <span>Выберите дату</span>\r\n            </div>\r\n\r\n            <div className='section-content'>\r\n              <DatePicker\r\n                clearIcon={null}\r\n                format='dd.MM.y'\r\n                minDate={new Date()}\r\n                onChange={(date: Date) => setDate(date)}\r\n                required\r\n                value={date}\r\n                dayAriaLabel='Day'\r\n                monthAriaLabel='Month'\r\n                yearAriaLabel='Year'\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className='form-separation'></div>\r\n        </div>\r\n\r\n        <div className='form-section'>\r\n          <div className='form-data'>\r\n            <div className='section-numeration'>\r\n              <span>2</span>\r\n            </div>\r\n\r\n            <div className='section-header'>\r\n              <span>Выберите время</span>\r\n            </div>\r\n\r\n            <div className='section-content'>\r\n              <FloatingLabel\r\n                controlId='floatingSelectGrid'\r\n                label='Самовывоз возможен с 10:00 до 22:00'\r\n              >\r\n                <Form.Select\r\n                  aria-label='Floating label select example'\r\n                  defaultValue={timeSlot}\r\n                  onChange={(e: ChangeEvent<HTMLSelectElement>) => {\r\n                    setTimeSlot(e.target.value)\r\n                    setTimeInputSkipped(!e.target.value)\r\n                  }}\r\n                  onBlur={(e) => time.onBlur(e)}\r\n                  isInvalid={isTimeInputSkipped}\r\n                >\r\n                  <option value=''>Выбрать...</option>\r\n                  {timeSlots.map((time, idx) => (\r\n                    <option value={time} key={time}>{time}</option>\r\n                  ))}\r\n                </Form.Select>\r\n              </FloatingLabel>\r\n              {\r\n                (time.isDirty && isTimeInputSkipped) &&\r\n                  <div className='error'>\r\n                    Пожалуйста, выберите время доставки для текущего заказа\r\n                  </div>\r\n              }\r\n            </div>\r\n          </div>\r\n\r\n          <div className='form-separation'></div>\r\n        </div>\r\n\r\n        <div className='form-section'>\r\n          <div className='form-data'>\r\n            <div className='section-numeration'>\r\n              <span>3</span>\r\n            </div>\r\n\r\n            <div className='section-header'>\r\n              <span>Выберите способ оплаты</span>\r\n            </div>\r\n\r\n            <div className='section-content payment-types'>\r\n              <ToggleButtonGroup\r\n                className='w-100'\r\n                type='radio'\r\n                name='options'\r\n                size='sm'\r\n                defaultValue={paymentMethod}\r\n              >\r\n                <ToggleButton\r\n                  id='tbg-radio-1'\r\n                  value='Наличными'\r\n                  variant='outline-warning'\r\n                  onChange={(e) => {\r\n                    setPaymentMethod(e.currentTarget.value)\r\n                    setPaymentInputSkipped(false)\r\n                  }}\r\n                >\r\n                  Наличными\r\n                </ToggleButton>\r\n                <ToggleButton\r\n                  id='tbg-radio-2'\r\n                  value='Картой онлайн'\r\n                  variant='outline-warning'\r\n                  onChange={(e) => {\r\n                    setPaymentMethod(e.currentTarget.value)\r\n                    setPaymentInputSkipped(false)\r\n                  }}\r\n                >\r\n                  Картой онлайн\r\n                </ToggleButton>\r\n                <ToggleButton\r\n                  id='tbg-radio-3'\r\n                  value='Картой на месте'\r\n                  variant='outline-warning'\r\n                  onChange={(e) => {\r\n                    setPaymentMethod(e.currentTarget.value)\r\n                    setPaymentInputSkipped(false)\r\n                  }}\r\n                >\r\n                  Картой на месте\r\n                </ToggleButton>\r\n              </ToggleButtonGroup>\r\n              {\r\n                isPaymentInputSkipped &&\r\n                <div className='error'>\r\n                  Пожалуйста, выберите способ оплаты для текущего заказа\r\n                </div>\r\n              }\r\n            </div>\r\n          </div>\r\n\r\n          <div className='form-separation'></div>\r\n        </div>\r\n\r\n        <div className='form-section'>\r\n          <div className='form-buttons'>\r\n            <Button\r\n              variant='outline-secondary mx-2'\r\n              onClick={() => clearCheckedOrderType('')}\r\n            >\r\n              Отмена\r\n            </Button>\r\n            <Button\r\n              variant='outline-warning'\r\n              disabled={\r\n                !date ||\r\n                isTimeInvalid ||\r\n                isPaymentInputSkipped\r\n              }\r\n              onClick={\r\n                (e) => {\r\n                  !paymentMethod && setPaymentInputSkipped(true)\r\n                  if (paymentMethod && !isTimeInvalid) handleSubmit(e)\r\n                }\r\n              }\r\n            >\r\n              Далее\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default TakeawayForm\r\n","import React, {useState} from 'react'\r\nimport {useDispatch} from 'react-redux'\r\n\r\nimport OrderItem from './OrderItem'\r\nimport Toggler from './ToggleButton'\r\n\r\nimport ReserveATableForm from './OrderForms/ReserveATableForm'\r\nimport DeliveryForm from './OrderForms/DeliveryForm'\r\nimport TakeawayForm from './OrderForms/TakeawayForm'\r\n\r\nimport {clearCart} from '../../redux/actions'\r\n\r\nimport {TRadioBtnParams} from '../../common/types/cartTypes'\r\n\r\nimport './Cart.scss'\r\nimport {ApiCart} from '../../api/ApiCart'\r\nimport Cookies from 'js-cookie'\r\nimport {orderedToast} from '../OrderToast/OrderedToast'\r\nimport {DishInCart} from '../../common/types/dishesType'\r\n\r\ntype PropsType = {\r\n  dishes: DishInCart[]\r\n}\r\nconst UserCart = (props: PropsType) => {\r\n  const [orderType, setOrderType] = useState<string>('')\r\n  const radios: TRadioBtnParams[] = [\r\n    {name: 'Забронировать стол', value: 'reserve-a-table'},\r\n    {name: 'Доставка', value: 'delivery'},\r\n    {name: 'Навынос', value: 'takeaway'},\r\n  ]\r\n\r\n  const totalSum = props.dishes.reduce(\r\n    (sum: number, current) =>\r\n      sum + Number(current.price) * current.numberOfDishes,\r\n    0\r\n  )\r\n  const cartSectionsClassName =\r\n    props.dishes.length < 1 ? 'cart-sections hidden' : 'cart-sections'\r\n\r\n  const orderCodes: JSX.Element[] = props.dishes.map((order) => (\r\n    <OrderItem\r\n      key={order.id}\r\n      id={order.id}\r\n      name={order.name}\r\n      price={order.price}\r\n      imageURL={order.imageURL}\r\n      numberOfDishes={order.numberOfDishes}\r\n      position={order.position}\r\n    />\r\n  ))\r\n\r\n  const dispatch = useDispatch()\r\n  const handleClearCart = (e: React.MouseEvent<Element, MouseEvent>) => {\r\n    e.preventDefault()\r\n    ApiCart.clearCart(Cookies.get('token'))\r\n    dispatch(clearCart())\r\n    orderedToast(`Корзина очищена`)\r\n  }\r\n\r\n  const handleRadioValueChange = (value: string) => {\r\n    setOrderType(value)\r\n  }\r\n\r\n  const handleRadioValueClearance = (value: string) => {\r\n    setOrderType(value)\r\n  }\r\n\r\n  return (\r\n    <div className='cart'>\r\n      <div className='container'>\r\n        <div className='cart-title'>Корзина</div>\r\n\r\n        {props.dishes.length < 1 && (\r\n          <div className='cart-empty'>\r\n            <span>В корзине пока нет товаров</span>\r\n          </div>\r\n        )}\r\n\r\n        <div className={cartSectionsClassName}>\r\n          <div className='cart-section'>\r\n            <div className='section-block section-title'>\r\n              <div>\r\n                <span className='uppercase'>Ваш заказ</span>\r\n              </div>\r\n              <div>\r\n                <button\r\n                  className='clear-button'\r\n                  type='button'\r\n                  onClick={(e) => handleClearCart(e)}\r\n                >\r\n                  Очистить корзину\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div className='section-block section-data orders'>\r\n              {orderCodes}\r\n            </div>\r\n            <div className='section-block cart-total'>\r\n              <span className='uppercase'>Итого: {totalSum} BYN</span>\r\n            </div>\r\n          </div>\r\n\r\n          <div className='cart-section'>\r\n            <div className='section-block section-title'>\r\n              <span className='uppercase'>Тип заказа</span>\r\n            </div>\r\n            <div className='section-block section-data options'>\r\n              <Toggler\r\n                radios={radios}\r\n                size='lg'\r\n                checkedBtn={orderType}\r\n                handleRadioValueChange={(value: string) =>\r\n                  handleRadioValueChange(value)\r\n                }\r\n              />\r\n            </div>\r\n            {orderType === 'reserve-a-table' && (\r\n              <ReserveATableForm\r\n                handleRadioValueClearance={(value: string) =>\r\n                  handleRadioValueClearance(value)\r\n                }\r\n              />\r\n            )}\r\n            {orderType === 'delivery' &&\r\n              <DeliveryForm\r\n                handleRadioValueClearance={(value: string) =>\r\n                  handleRadioValueClearance(value)\r\n                }\r\n              />}\r\n            {orderType === 'takeaway' && (\r\n              <TakeawayForm\r\n                handleRadioValueClearance={(value: string) =>\r\n                  handleRadioValueClearance(value)\r\n                }\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserCart\r\n","import {useEffect, useState} from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport Cookies from 'js-cookie'\r\n\r\nimport UserCart from '../../components/cartPageComponents/Cart'\r\n\r\nimport {DishInCart, ApiDish} from '../../common/types/dishesType'\r\n\r\nimport {addDishToCart, clearCart} from '../../redux/actions'\r\nimport {useAppSelector} from '../../redux/hooks'\r\n\r\nimport {ApiCart} from '../../api/ApiCart'\r\n\r\nimport {mapApiDishToDishInCart} from '../../utils/typeMappers'\r\nimport Spinner from 'src/components/Spinner/Spinner'\r\n\r\nconst Cart = () => {\r\n  const dispatch = useDispatch()\r\n  const [isLoading, setIsLoading] = useState<boolean>(false)\r\n\r\n  const isAuthorized: boolean =\r\n    useAppSelector((state) => state.auth.isAuthorized)\r\n\r\n  const dishes: DishInCart[] =\r\n    useAppSelector((state) => state.cart.dishes)\r\n\r\n  const handleLoad = () => {\r\n    setIsLoading(true)\r\n    ApiCart.getCart(Cookies.get('token')).then((response) => {\r\n      setIsLoading(false)\r\n      response.data.cart.forEach((dish: ApiDish) => {\r\n        dispatch(\r\n          addDishToCart(mapApiDishToDishInCart(dish))\r\n        )\r\n      })\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isAuthorized) {\r\n      dispatch(clearCart())\r\n      handleLoad()\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      {isLoading && <Spinner />}\r\n      <UserCart dishes={dishes} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Cart\r\n","\r\n\r\nimport './Logo.scss'\r\nconst Logo = () => {\r\n  return (\r\n    <div className='logo'>\r\n      <h1 className='OceanBarText'>\r\n        Ocean Bar\r\n      </h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Logo\r\n","\r\nimport {Link} from 'react-router-dom'\r\nimport {Nav} from 'react-bootstrap'\r\n\r\nimport Logo from '../Logo/Logo'\r\nimport './Header.scss'\r\n\r\nconst OceanBarHeader = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        background:\r\n          'linear-gradient(to top, transparent, #252525), ' +\r\n          'url(/header.png)',\r\n        backgroundPosition: 'left',\r\n        padding: '100px',\r\n        color: '#252525'\r\n      }}\r\n      className='OceanBarHeader'\r\n    >\r\n      <Logo />\r\n      <h5 className={'tasty-quick-quality'}>Вкусно. Быстро. Качественно</h5>\r\n      <Nav className='justify-content-center'>\r\n        <Nav.Item>\r\n          <Nav.Link as={Link} to={'/menu'}>\r\n            <button className={'menu-btn'}>\r\n              <span className='menu-text-main-page'>Меню</span>\r\n            </button>\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n      </Nav>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default OceanBarHeader\r\n","\r\nimport './HowItWorks.scss'\r\n\r\nconst HowItWorks = () => {\r\n  return (\r\n    <div className='HowItWorks'>\r\n      <h5 className='HowItWorks-text'>Как это работает</h5>\r\n      <p className='howItWorks-info'>\r\n        4 простых шага для экономии вашего времени\r\n      </p>\r\n      <ul className='steps'>\r\n        <li>\r\n          <div className='step'>1</div>\r\n          <p className='hint'>Забронируйте стол</p>\r\n        </li>\r\n        <li>\r\n          <div className='step'>2</div>\r\n          <p className='hint'>Сделайте предзаказ</p>\r\n        </li>\r\n        <li>\r\n          <div className='step'>3</div>\r\n          <p className='hint'>Оплатите онлайн</p>\r\n        </li>\r\n        <li>\r\n          <div className='step'>4</div>\r\n          <p className='hint'>К вашему приходу все готово</p>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HowItWorks\r\n","import {useState, ChangeEvent} from 'react'\r\nimport {useSelector} from 'react-redux'\r\nimport {Card, Button, Form} from 'react-bootstrap'\r\n// import Cookies from 'js-cookie'\r\n\r\nimport {UserType, ValidationType} from '../../../common/types/userTypes'\r\nimport {AppStoreType} from '../../../redux/reducers/rootReducer'\r\nimport {useValidation} from '../../../utils/validation'\r\nimport {ApiReserve} from '../../../api/ApiBookTable'\r\n\r\nimport './BookATable.scss'\r\n\r\ntype FormControlElement = HTMLInputElement | HTMLTextAreaElement\r\n\r\nconst BookATable = () => {\r\n  // const token = Cookies.get('token')\r\n\r\n  const user =\r\n    useSelector<AppStoreType, UserType>((state) => state.user.userProfile)\r\n\r\n  const [needPhoneCall, setNeedPhoneCall] = useState<boolean>(false)\r\n\r\n  const useInput = (initialValue: string, validations: ValidationType) => {\r\n    const [value, setValue] = useState<string>(initialValue)\r\n    const [isDirty, setDirty] = useState<boolean>(false)\r\n    const valid = useValidation(value, validations)\r\n\r\n    const onChange = (e: ChangeEvent<FormControlElement>) => {\r\n      setValue(e.target.value)\r\n    }\r\n\r\n    const onBlur = (e: ChangeEvent<FormControlElement>) => {\r\n      setDirty(true)\r\n    }\r\n\r\n    return {\r\n      value,\r\n      onChange,\r\n      onBlur,\r\n      isDirty,\r\n      ...valid\r\n    }\r\n  }\r\n\r\n  const phoneNumber = useInput('', {\r\n    isEmpty: true,\r\n    phoneNumberError: true,\r\n  })\r\n\r\n  const userName = useInput('', {\r\n    isEmpty: true,\r\n    firstNameError: true,\r\n    minLengthError: 2,\r\n    maxLengthError: 30,\r\n  })\r\n\r\n  const isPhoneNumberInvalid =\r\n    phoneNumber.isDirty &&\r\n    (phoneNumber.isEmpty || phoneNumber.phoneNumberError)\r\n\r\n  const isUserNameInvalid =\r\n    (userName.firstNameError && userName.isDirty) ||\r\n    (userName.isEmpty && userName.isDirty)\r\n\r\n  const reservOrder={\r\n    date: 'уточнить',\r\n    name: userName.value,\r\n    phone: phoneNumber.value,\r\n    time: 'уточнить',\r\n    amountofpeople: 4\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setNeedPhoneCall(!needPhoneCall)\r\n    ApiReserve.bookTableUnregistred(reservOrder)\r\n    // .then((res)=>console.log(res))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {\r\n        needPhoneCall ? (\r\n          <div className='registration-form'>\r\n            <div className='container'>\r\n              <Card className='shadow p-3 my-5 bg-body rounded'>\r\n                <Card.Body>\r\n                  <Card.Title><h2>Заявка принята!</h2></Card.Title>\r\n                  <Card.Text className='mb-5'>\r\n                    <h4>Администратор свяжется с вами в течение 10 минут</h4>\r\n                  </Card.Text>\r\n                  <Button\r\n                    variant='outline-warning'\r\n                    type='button'\r\n                    onClick={() => handleClose()}\r\n                  >\r\n                    Ok\r\n                  </Button>\r\n                </Card.Body>\r\n              </Card>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className='book-a-table'>\r\n            <h2 className='bookTable'>Забронируйте стол по телефону</h2>\r\n            <div >\r\n              <Form className='order-form'>\r\n                <Form.Floating className='mx-1'>\r\n                  <Form.Control\r\n                    id='userName'\r\n                    type='text'\r\n                    placeholder={user.name}\r\n                    value={userName.value}\r\n                    isInvalid={isUserNameInvalid}\r\n                    onChange={(e) => userName.onChange(e)}\r\n                    onBlur={(e) => userName.onBlur(e)}\r\n                  />\r\n                  <label htmlFor='userName'>\r\n                    Имя\r\n                  </label>\r\n                </Form.Floating>\r\n                {\r\n                  isUserNameInvalid &&\r\n                  <div className='error'>\r\n                    Имя обязательно\r\n                  </div>\r\n                }\r\n                <br />\r\n\r\n                <Form.Floating className='mx-1 my-3'>\r\n                  <Form.Control\r\n                    id='userPhones'\r\n                    type='phoneNumber'\r\n                    placeholder={user.phone}\r\n                    value={phoneNumber.value}\r\n                    isInvalid={isPhoneNumberInvalid}\r\n                    onChange={(e) => phoneNumber.onChange(e)}\r\n                    onBlur={(e) => phoneNumber.onBlur(e)}\r\n                  />\r\n                  <label htmlFor='userPhones'>\r\n                    Номер телефона\r\n                  </label>\r\n                  {\r\n                    isPhoneNumberInvalid &&\r\n                    <div className='error'>\r\n                      Телефон должен содержать код в формате\r\n                      +375 (+ опционально) либо 80 и 9 цифр основного номера.\r\n                      Обязательно к заполнению.\r\n                    </div>\r\n                  }\r\n                </Form.Floating>\r\n              </Form>\r\n            </div>\r\n\r\n            <div className={'order-button-container'}>\r\n              <button className={'order-button'}\r\n                onClick={handleClose}\r\n                disabled={\r\n                  isUserNameInvalid ||\r\n                  isPhoneNumberInvalid ||\r\n                  phoneNumber.isEmpty ||\r\n                  userName.isEmpty\r\n                }\r\n              >\r\n                <span className='menu-text-main-page'>Забронировать</span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default BookATable\r\n","\r\nimport {DishType} from '../../../common/types/dishesType'\r\n\r\ntype PropsType = {\r\n  categoryDish: DishType[]\r\n}\r\n\r\nconst SliderGallertItem = (props: PropsType) => {\r\n  const imgWidth = '400px'\r\n  const imgHeight = '300px'\r\n  const imgMargin = '20px'\r\n\r\n  return (\r\n    <div\r\n      key={props.categoryDish[0].id}\r\n      style={{\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'center'\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          margin: imgMargin,\r\n          height: imgHeight,\r\n          width: imgWidth,\r\n          backgroundImage: `url(${props.categoryDish[0].imageURL})`,\r\n          backgroundSize: 'cover',\r\n          backgroundPosition: 'center'\r\n        }}\r\n      />\r\n\r\n      <div\r\n        style={{\r\n          margin: imgMargin,\r\n          height: imgHeight,\r\n          width: imgWidth,\r\n          backgroundImage: `url(${props.categoryDish[1].imageURL})`,\r\n          backgroundSize: 'cover',\r\n          backgroundPosition: 'center'\r\n        }}\r\n      />\r\n\r\n      <div\r\n        style={{\r\n          margin: imgMargin,\r\n          height: imgHeight,\r\n          width: imgWidth,\r\n          backgroundImage: `url(${props.categoryDish[2].imageURL})`,\r\n          backgroundSize: 'cover',\r\n          backgroundPosition: 'center'\r\n        }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SliderGallertItem\r\n","import {Carousel} from 'react-bootstrap'\r\nimport {useState} from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport {useAppSelector} from '../../../redux/hooks'\r\nimport SliderGallertItem from './SliderGalleryItem'\r\nimport {PATH} from '../../../pages/menuPage/Menu/MenuRoutes'\r\n\r\n\r\nconst ControlledCarousel = () => {\r\n  const allDishes = useAppSelector((state) => state.dish.dishes\r\n  )\r\n\r\n  const desertDishes = allDishes.filter((dish) => {\r\n    return dish.dishCategory === 'Десерты'\r\n  })\r\n  const oystersDishes = allDishes.filter((dish) => {\r\n    return dish.dishCategory === 'Запеченные устрицы'\r\n  })\r\n  const platoDishes = allDishes.filter((dish) => {\r\n    return dish.dishCategory === 'Плато'\r\n  })\r\n  const saladDishes = allDishes.filter((dish) => {\r\n    return dish.dishCategory === 'Салаты'\r\n  })\r\n  const soupDishes = allDishes.filter((dish) => {\r\n    return dish.dishCategory === 'Супы'\r\n  })\r\n\r\n  const [index, setIndex] = useState(1)\r\n  const handleSelect = (selectedIndex: number) => {\r\n    setIndex(selectedIndex)\r\n  }\r\n\r\n  return (\r\n    <Carousel activeIndex={index} onSelect={handleSelect} variant='dark'>\r\n      <Carousel.Item>\r\n        <NavLink to={PATH.DESSERT}>\r\n          <SliderGallertItem categoryDish={desertDishes} />\r\n        </NavLink>\r\n      </Carousel.Item>\r\n      <Carousel.Item>\r\n        <NavLink to={PATH.SOUP}>\r\n          <SliderGallertItem categoryDish={soupDishes} />\r\n        </NavLink>\r\n      </Carousel.Item>\r\n      <Carousel.Item>\r\n        <NavLink to={PATH.SALAD}>\r\n          <SliderGallertItem categoryDish={saladDishes} />\r\n        </NavLink>\r\n      </Carousel.Item>\r\n      <Carousel.Item>\r\n        <NavLink to={PATH.OYSTERS}>\r\n          <SliderGallertItem categoryDish={oystersDishes} />\r\n        </NavLink>\r\n      </Carousel.Item>\r\n      <Carousel.Item>\r\n        <NavLink to={PATH.PLATO}>\r\n          <SliderGallertItem categoryDish={platoDishes} />\r\n        </NavLink>\r\n      </Carousel.Item>\r\n    </Carousel>\r\n  )\r\n}\r\n\r\nexport default ControlledCarousel\r\n","import {Row, Col} from 'react-bootstrap'\r\n\r\nimport SliderGallery from './SliderGallery'\r\nimport Spinner from '../../../components/Spinner/Spinner'\r\nimport {useAppSelector} from '../../../redux/hooks'\r\n\r\nconst Slider = () => {\r\n  const allDishes = useAppSelector((state) => state.dish.dishes)\r\n  const isLoading = useAppSelector((state) => state.dish.isLoading\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <br/><br/>\r\n      <Row >\r\n        <Col> <h2> Предложение недели </h2> </Col>\r\n      </Row>\r\n      <Row className='justify-content-md-center'>\r\n        <Col xs lg='1'></Col>\r\n        <Col>\r\n\r\n          { isLoading && <Spinner/>}\r\n          { allDishes.length > 10 ? <SliderGallery/> : null }\r\n        </Col>\r\n        <Col xs lg='1'></Col>\r\n      </Row>\r\n      <br/><br/><br/><br/>\r\n    </>\r\n\r\n  )\r\n}\r\n\r\nexport default Slider\r\n","\r\nimport OceanBarHeader from '../../components/homePageComponents/Header/Header'\r\n// eslint-disable-next-line max-len\r\nimport HowItWorks from '../../components/homePageComponents/HowItWorks/HowItWorks'\r\n// eslint-disable-next-line max-len\r\nimport BookATable from '../../components/homePageComponents/BookATable/BookATable'\r\nimport Slider from '../../components/homePageComponents/Slider/Slider'\r\n\r\nconst Home = () => {\r\n  return (\r\n    <>\r\n      <OceanBarHeader />\r\n      <HowItWorks />\r\n      <BookATable />\r\n      <Slider />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import {useState, ChangeEvent} from 'react'\r\nimport {useHistory} from 'react-router-dom'\r\nimport {Form, Button, Modal, CloseButton} from 'react-bootstrap'\r\n\r\nimport Spinner from '../../components/Spinner/Spinner'\r\n\r\nimport {ApiAuth} from '../../api/ApiAuth'\r\n\r\nimport {useValidation} from '../../utils/validation'\r\n\r\nimport {ValidationType} from '../../common/types/userTypes'\r\n\r\nimport './SignUpForm.scss'\r\n\r\ntype FormControlElement = HTMLInputElement | HTMLTextAreaElement\r\n\r\nconst SignUp = () => {\r\n  const history = useHistory()\r\n\r\n  const [authFailed, setAuthFailed] = useState(false)\r\n  const [isLoading, setIsLoading] = useState<boolean>(false)\r\n\r\n  const useInput = (initialValue: string, validations: ValidationType) => {\r\n    const [value, setValue] = useState(initialValue)\r\n    const [isDirty, setDirty] = useState(false)\r\n    const valid = useValidation(value, validations)\r\n\r\n    const onChange = (e: ChangeEvent<FormControlElement>) => {\r\n      setValue(e.target.value)\r\n      setAuthFailed(false)\r\n    }\r\n\r\n    const onBlur = (e: ChangeEvent<FormControlElement>) => {\r\n      setDirty(true)\r\n    }\r\n\r\n    return {\r\n      value,\r\n      onChange,\r\n      onBlur,\r\n      isDirty,\r\n      ...valid,\r\n    }\r\n  }\r\n\r\n  const firstName = useInput('', {\r\n    isEmpty: true,\r\n    minLengthError: 2,\r\n    maxLengthError: 30,\r\n    firstNameError: true,\r\n  })\r\n\r\n  const lastName = useInput('', {\r\n    isEmpty: true,\r\n    minLengthError: 3,\r\n    maxLengthError: 30,\r\n    lastNameError: true,\r\n  })\r\n\r\n  const email = useInput('', {\r\n    isEmpty: true,\r\n    minLengthError: 8,\r\n    maxLengthError: 325,\r\n    emailError: true,\r\n  })\r\n\r\n  const phoneNumber = useInput('', {\r\n    isEmpty: true,\r\n    phoneNumberError: true,\r\n  })\r\n\r\n  const password = useInput('', {\r\n    isEmpty: true,\r\n    minLengthError: 8,\r\n    maxLengthError: 15,\r\n    passwordError: true,\r\n  })\r\n\r\n  const user = {\r\n    name: firstName.value,\r\n    secondname: lastName.value,\r\n    email: email.value,\r\n    password: password.value,\r\n    phone: phoneNumber.value,\r\n    id: null,\r\n  }\r\n\r\n  const isFirstNameInvalid =\r\n    firstName.isDirty &&\r\n    (firstName.isEmpty ||\r\n      firstName.minLengthError ||\r\n      firstName.maxLengthError ||\r\n      firstName.firstNameError)\r\n\r\n  const isLastNameInvalid =\r\n    lastName.isDirty &&\r\n    (lastName.isEmpty ||\r\n      lastName.minLengthError ||\r\n      lastName.maxLengthError ||\r\n      lastName.lastNameError)\r\n\r\n  const isEmailInvalid =\r\n    email.isDirty &&\r\n    (email.isEmpty ||\r\n      email.minLengthError ||\r\n      email.maxLengthError ||\r\n      email.emailError)\r\n\r\n  const isPhoneNumberInvalid =\r\n    phoneNumber.isDirty && (phoneNumber.isEmpty || phoneNumber.phoneNumberError)\r\n\r\n  const isPasswordInvalid =\r\n    password.isDirty &&\r\n    (password.isEmpty ||\r\n      password.minLengthError ||\r\n      password.maxLengthError ||\r\n      password.passwordError)\r\n\r\n  const handleClose = () => {\r\n    history.push('/')\r\n  }\r\n\r\n  const handleSubmit = (e: React.MouseEvent<Element, MouseEvent>) => {\r\n    e.preventDefault()\r\n    setIsLoading(true)\r\n\r\n    ApiAuth.register(\r\n      user.name,\r\n      user.secondname,\r\n      user.email,\r\n      user.password,\r\n      user.phone\r\n    ).then((response) => {\r\n      if (response.status >= 400) {\r\n        setIsLoading(false)\r\n        throw new Error(response.statusText)\r\n      } else {\r\n        setIsLoading(false)\r\n      }\r\n    })\r\n      .then(() => history.push('/signup-success'))\r\n      .catch((error) => {\r\n        setIsLoading(false)\r\n        setAuthFailed(true)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div className='registration-form'>\r\n      <div className='container'>\r\n        <Modal.Dialog className='shadow p-3 mb-5 bg-body rounded'>\r\n          <Modal.Header className='border-0'>\r\n            <Modal.Title className='form-title'>Регистрация</Modal.Title>\r\n            <CloseButton onClick={() => handleClose()} />\r\n          </Modal.Header>\r\n\r\n          {isLoading && <Spinner />}\r\n          {!isLoading && authFailed && (\r\n            <div className='error validation'>\r\n              Пользователь с таким адресом электронной почты уже существует.\r\n            </div>\r\n          )}\r\n\r\n          <Modal.Body>\r\n            <Form className='my-3' style={{width: '100%'}}>\r\n              <Form.Floating className='mb-3 mx-3'>\r\n                <Form.Control\r\n                  autoFocus\r\n                  id='userFirstName'\r\n                  type='firstName'\r\n                  placeholder='Иван'\r\n                  value={firstName.value}\r\n                  onChange={(e) => firstName.onChange(e)}\r\n                  onBlur={(e) => firstName.onBlur(e)}\r\n                />\r\n                <label htmlFor='userFirstName'>Имя</label>\r\n                {isFirstNameInvalid && (\r\n                  <div className='error'>\r\n                    Это поле должно содержать 2-30 знаков, без специальных\r\n                    символов (#, %, &, !, $, etc.) и чисел (0-9). Обязательно к\r\n                    заполнению.\r\n                  </div>\r\n                )}\r\n              </Form.Floating>\r\n\r\n              <Form.Floating className='mb-3 mx-3'>\r\n                <Form.Control\r\n                  id='userLastName'\r\n                  type='lastName'\r\n                  placeholder='Иванов'\r\n                  value={lastName.value}\r\n                  onChange={(e) => lastName.onChange(e)}\r\n                  onBlur={(e) => lastName.onBlur(e)}\r\n                />\r\n                <label htmlFor='userLastName'>Фамилия</label>\r\n                {isLastNameInvalid && (\r\n                  <div className='error'>\r\n                    Это поле должно содержать 3-30 знаков, без специальных\r\n                    символов (#, %, &, !, $, etc.) и чисел (0-9). Обязательно к\r\n                    заполнению.\r\n                  </div>\r\n                )}\r\n              </Form.Floating>\r\n\r\n              <Form.Floating className='mb-3 mx-3'>\r\n                <Form.Control\r\n                  id='userEmail'\r\n                  type='email'\r\n                  placeholder='name@example.com'\r\n                  value={email.value}\r\n                  onChange={(e) => email.onChange(e)}\r\n                  onBlur={(e) => email.onBlur(e)}\r\n                />\r\n                <label htmlFor='userEmail'>Электронная почта</label>\r\n                {isEmailInvalid && (\r\n                  <div className='error'>\r\n                    Электронная почта должна быть в формате xxx@yyy.zzz, без\r\n                    специальных символов (#, %, &, !, $, etc.). Обязательно к\r\n                    заполнению.\r\n                  </div>\r\n                )}\r\n              </Form.Floating>\r\n\r\n              <Form.Floating className='mb-3 mx-3'>\r\n                <Form.Control\r\n                  id='userPhoneNumber'\r\n                  type='phoneNumber'\r\n                  placeholder='+375-XX-XXX-XX-XX'\r\n                  value={phoneNumber.value}\r\n                  onChange={(e) => phoneNumber.onChange(e)}\r\n                  onBlur={(e) => phoneNumber.onBlur(e)}\r\n                />\r\n                <label htmlFor='userPhoneNumber'>Телефон</label>\r\n                {isPhoneNumberInvalid && (\r\n                  <div className='error'>\r\n                    Телефон должен содержать код в формате +375 (+ опционально)\r\n                    либо 80 и 9 цифр основного номера. Обязательно к заполнению.\r\n                  </div>\r\n                )}\r\n              </Form.Floating>\r\n\r\n              <Form.Floating className='mx-3'>\r\n                <Form.Control\r\n                  id='userPassword'\r\n                  type='password'\r\n                  placeholder='password'\r\n                  value={!authFailed ? password.value : ''}\r\n                  onChange={(e) => password.onChange(e)}\r\n                  onBlur={(e) => password.onBlur(e)}\r\n                />\r\n                <label htmlFor='userPassword'>Пароль</label>\r\n                {isPasswordInvalid && (\r\n                  <div className='error'>\r\n                    Пароль должен содержать 8-15 символов (включая 1 символ в\r\n                    верхнем регистре, 1 символ в нижнем регистре и 1 цифру) без\r\n                    пробелов и специальных знаков (#, %, &, !, $, etc.).\r\n                    Обязательно к заполнению.\r\n                  </div>\r\n                )}\r\n              </Form.Floating>\r\n            </Form>\r\n          </Modal.Body>\r\n\r\n          <Modal.Footer className='justify-content-center border-0'>\r\n            <Button\r\n              variant='outline-secondary'\r\n              type='button'\r\n              onClick={() => handleClose()}\r\n            >\r\n              Отменить\r\n            </Button>\r\n            <Button\r\n              disabled={\r\n                !firstName.inputValid ||\r\n                !lastName.inputValid ||\r\n                !email.inputValid ||\r\n                !phoneNumber.inputValid ||\r\n                !password.inputValid ||\r\n                authFailed\r\n              }\r\n              variant='outline-warning'\r\n              type='submit'\r\n              onClick={(e) => handleSubmit(e)}\r\n            >\r\n              Зарегистрироваться\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal.Dialog>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignUp\r\n","\r\n\r\nimport SignUpForm from '../../components/signUpPageComponents/SignUpForm'\r\n\r\nconst SignUp = () => {\r\n  return (\r\n    <div>\r\n      <SignUpForm />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignUp\r\n","\r\nimport {useHistory} from 'react-router-dom'\r\nimport {Card, Button} from 'react-bootstrap'\r\n\r\nconst SignUpSuccess = () => {\r\n  const history = useHistory()\r\n\r\n  const handleClick = () => {\r\n    history.push('/')\r\n  }\r\n  return (\r\n    <div className='registration-form'>\r\n      <div className='container'>\r\n        <Card className='shadow p-3 my-5 bg-body rounded'>\r\n          <Card.Body>\r\n            <Card.Title>Вы успешно зарегистрированы!</Card.Title>\r\n            <Card.Text className='mb-5'>\r\n              На Вашу почту было отправлено письмо с информацией о том,\r\n              как активировать аккаунт.\r\n            </Card.Text>\r\n            <Button\r\n              variant='outline-warning'\r\n              type='button'\r\n              onClick={() => handleClick()}\r\n            >\r\n              Ok\r\n            </Button>\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignUpSuccess\r\n","import SignUpSuccess from '../../components/signUpPageComponents/SignUpSuccess'\r\n\r\nconst SignUpSucess = () => {\r\n  return (\r\n    <>\r\n      <SignUpSuccess />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SignUpSucess\r\n","import {AxiosResponse} from 'axios'\r\n\r\nimport {url} from '../api'\r\nimport {CommonOrderType, IGetOrderDishesResponse, IOrderResponse} from\r\n  '../common/types/orderType'\r\nimport {$api} from './ApiAuth'\r\n\r\n\r\nexport const ApiOrder = {\r\n  async createOrder(\r\n    order: CommonOrderType, token: string | undefined\r\n  ): Promise<AxiosResponse<any>> {\r\n    return await $api.post<{order: IOrderResponse}>(`${url}/order`,\r\n      order,\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        }\r\n      })\r\n  },\r\n\r\n  async getOrders(\r\n    token: string | undefined\r\n  ) : Promise<AxiosResponse<IOrderResponse>> {\r\n    return await $api.get<IOrderResponse>('/order')\r\n  },\r\n\r\n  async getOrderDishes(\r\n    token: string | undefined,\r\n    orderId: number\r\n  ): Promise<AxiosResponse<IGetOrderDishesResponse>> {\r\n    return $api.get<IGetOrderDishesResponse>(`/order/dishes/${orderId}`)\r\n  }\r\n}\r\n","/* eslint-disable react/prop-types */\r\ninterface DishViewProps {\r\n  name: string,\r\n  quantity: number,\r\n  price: number,\r\n  defaultIngredients: string,\r\n  addedIngredients: string\r\n}\r\n\r\nconst DishView: React.FC<DishViewProps> = ({\r\n  name,\r\n  quantity,\r\n  price,\r\n  defaultIngredients,\r\n  addedIngredients\r\n}) => {\r\n  const getRemovedIngredients = (\r\n    defaultIngredients: string,\r\n    addedIngredients: string\r\n  ) => {\r\n    const defaultListArr = defaultIngredients.split(';')\r\n    const addedListArr = addedIngredients.slice(1, -1).split(';')\r\n    const removedListArr =\r\n      defaultListArr.filter((el) => addedListArr.indexOf(el) === -1)\r\n\r\n    return removedListArr.join(', ')\r\n  }\r\n\r\n  return (\r\n    <div className='history-order-item'>\r\n      <div className='history-header-name flex-column'>\r\n        <span className='details-name'>\r\n          {name}\r\n        </span>\r\n        {\r\n          defaultIngredients.length !== addedIngredients.slice(1, -1).length &&\r\n          <>\r\n            <span className='details-notice'>\r\n              без добавления ингредиента:\r\n            </span>\r\n            <span className='details-notice'>\r\n              {getRemovedIngredients(defaultIngredients, addedIngredients)}\r\n            </span>\r\n          </>\r\n        }\r\n      </div>\r\n      <div className='history-header-quant'>\r\n        <span className='counter'>\r\n          {quantity}\r\n        </span>\r\n      </div>\r\n      <div className='history-header-price'>\r\n        <span>\r\n          {price} BYN\r\n        </span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DishView\r\n","import {AxiosResponse} from 'axios'\r\n\r\nimport {$api} from './ApiAuth'\r\nimport {\r\n  IGetOrdersResponse,\r\n  IGetOrderDishesResponse\r\n} from '../common/types/orderType'\r\n\r\nexport const ApiOrder = {\r\n  async getOrders(\r\n    token: string | undefined\r\n  ): Promise<AxiosResponse<IGetOrdersResponse>> {\r\n    return $api.get<IGetOrdersResponse>('/order')\r\n  },\r\n\r\n  async getOrderDishes(\r\n    token: string | undefined,\r\n    orderId: number\r\n  ): Promise<AxiosResponse<IGetOrderDishesResponse>> {\r\n    return $api.get<IGetOrderDishesResponse>(`/order/dishes/${orderId}`)\r\n  }\r\n}\r\n","/* eslint-disable react/prop-types */\r\nimport {useEffect, useState} from 'react'\r\nimport {Accordion} from 'react-bootstrap'\r\nimport Cookies from 'js-cookie'\r\n\r\nimport DishView from './dishView'\r\nimport {ApiOrder} from '../../api/ApiGetUserOrders'\r\nimport {IOrderDishesResponse} from '../../common/types/orderType'\r\n\r\ninterface OrderViewProps {\r\n  price: number,\r\n  state: string,\r\n  type: string,\r\n  date: string,\r\n  time: string,\r\n  tableSize: string,\r\n  paymentType: string,\r\n  address: string,\r\n  id: string,\r\n}\r\n\r\nconst OrderView: React.FC<OrderViewProps> = ({\r\n  price,\r\n  state,\r\n  type,\r\n  date,\r\n  time,\r\n  tableSize,\r\n  paymentType,\r\n  address,\r\n  id\r\n}) => {\r\n  const [orderDishes, setOrderDishes] = useState<IOrderDishesResponse[]>([])\r\n  const token = Cookies.get('token')\r\n\r\n  const getOrderDishes = () => {\r\n    ApiOrder.getOrderDishes(token, Number(id)).then((response) => {\r\n      const apiOrderDishes: IOrderDishesResponse[] = response.data.dishes\r\n      setOrderDishes(apiOrderDishes)\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    getOrderDishes()\r\n  }, [])\r\n\r\n  const dishesCodes = orderDishes.map((dish) =>\r\n    <DishView\r\n      key={dish.id}\r\n      name={dish.dish.name}\r\n      quantity={dish.quantity}\r\n      price={dish.dish.price}\r\n      defaultIngredients={dish.dish.ingredients}\r\n      addedIngredients={dish.ingredients}\r\n    />\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <Accordion.Item eventKey={id} key={id}>\r\n        <Accordion.Header>\r\n          <div className='history-order-title'>\r\n              Заказ №{id} на {date}г\r\n          </div>\r\n        </Accordion.Header>\r\n        <Accordion.Body>\r\n          <div className='history-order-block'>\r\n            <div className='shadow border'>\r\n              <div className='history-order-item'>\r\n                <div className='history-header-name'>\r\n                  Название\r\n                </div>\r\n                <div className='history-header-quant'>\r\n                  Количество\r\n                </div>\r\n                <div className='history-header-price'>\r\n                  Цена за 1 позицию\r\n                </div>\r\n              </div>\r\n              <div className='details-devider' />\r\n\r\n              <div className='history-order-items'>\r\n                {dishesCodes}\r\n              </div>\r\n\r\n              <div className='history-order-type-block'>\r\n                <div className='row'>\r\n                  <div className='col order-type-header'>\r\n                    Тип заказа:\r\n                  </div>\r\n                  <div className='col order-type-text'>\r\n                    {type}\r\n                  </div>\r\n                </div>\r\n                <div className='row'>\r\n                  <div className='col order-type-header'>\r\n                    Дата:\r\n                  </div>\r\n                  <div className='col order-type-text'>\r\n                    {date}\r\n                  </div>\r\n                </div>\r\n                <div className='row'>\r\n                  <div className='col order-type-header'>\r\n                    Время:\r\n                  </div>\r\n                  <div className='col order-type-text'>\r\n                    {time}\r\n                  </div>\r\n                </div>\r\n                {type === 'Доставка' &&\r\n                  <div className='row'>\r\n                    <div className='col order-type-header'>\r\n                      Адрес доставки:\r\n                    </div>\r\n                    <div className='col order-type-text'>\r\n                      {address}\r\n                    </div>\r\n                  </div>\r\n                }\r\n                {\r\n                  type === 'Бронирование стола' &&\r\n                  <div className='row'>\r\n                    <div className='col order-type-header'>\r\n                      Стол на:\r\n                    </div>\r\n                    <div className='col order-type-text'>\r\n                      {tableSize}\r\n                    </div>\r\n                  </div>\r\n                }\r\n              </div>\r\n\r\n              <div className='details-devider'></div>\r\n              <div className='row mb-3'>\r\n                <div className='col history-total text-right'>\r\n                  Итого:\r\n                </div>\r\n                <div className='col history-total'>\r\n                  {price} BYN\r\n                </div>\r\n              </div>\r\n              <div className='details-devider' />\r\n              <div className='row'>\r\n                <div className='col order-type-header mb'>\r\n                  Cтатус заказа:\r\n                </div>\r\n                <div className='col order-type-text mb'>\r\n                  {state}\r\n                </div>\r\n              </div>\r\n              <div className='row'>\r\n                <div className='col order-type-header mb'>\r\n                  Тип оплаты:\r\n                </div>\r\n                <div className='col order-type-text mb'>\r\n                  {paymentType}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Accordion.Body>\r\n      </Accordion.Item>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OrderView\r\n","import {useEffect, useState} from 'react'\r\nimport {Accordion} from 'react-bootstrap'\r\nimport Cookies from 'js-cookie'\r\n\r\nimport {ApiOrder} from '../../api/ApiOrder'\r\nimport OrderView from './orderView'\r\nimport {IOrderResponse} from '../../common/types/orderType'\r\n\r\n\r\nconst CurrentOrders = () => {\r\n  const [currOrders, setCurrentOrders] = useState<IOrderResponse[]>([])\r\n\r\n  const handleLoad = () => {\r\n    ApiOrder.getOrders(Cookies.get('token'))\r\n      .then((response) => {\r\n        const apiCurrentOrders: IOrderResponse[] = response.data.orders\r\n          .filter((order: IOrderResponse) => order.state === 'В процессе')\r\n        setCurrentOrders(apiCurrentOrders)\r\n      })\r\n      .catch((error) => {\r\n        throw new Error(error)\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    handleLoad()\r\n  }, [])\r\n\r\n  const orderCodes = currOrders?.map((order) =>\r\n    <OrderView\r\n      key={order.id}\r\n      price={order.price}\r\n      state={order.state}\r\n      type={order.type}\r\n      date={order.date}\r\n      time={order.time}\r\n      tableSize={order.tableSize}\r\n      paymentType={order.paymentType}\r\n      address={order.address}\r\n      id={String(order.id)}\r\n    />\r\n  )\r\n  return (\r\n    <>\r\n      <Accordion flush>\r\n        {orderCodes}\r\n      </Accordion>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CurrentOrders\r\n","import {useEffect, useState} from 'react'\r\nimport {Accordion} from 'react-bootstrap'\r\nimport Cookies from 'js-cookie'\r\n\r\nimport OrderView from './orderView'\r\nimport {ApiOrder} from '../../api/ApiGetUserOrders'\r\nimport {IOrderResponse} from '../../common/types/orderType'\r\n\r\nconst CompletedOrders = () => {\r\n  const [doneOrders, setDoneOrders] = useState<IOrderResponse[]>([])\r\n  const token = Cookies.get('token')\r\n\r\n  const handleLoad = () => {\r\n    ApiOrder.getOrders(token).then((response) => {\r\n      const apiDoneOrders: IOrderResponse[] = response.data.orders\r\n        .filter((order) => order.state === 'Выполнен')\r\n      setDoneOrders(apiDoneOrders)\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    handleLoad()\r\n  }, [])\r\n\r\n  const orderCodes = doneOrders?.map((order) =>\r\n    <OrderView\r\n      key={order.id}\r\n      price={order.price}\r\n      state={order.state}\r\n      type={order.type}\r\n      date={order.date}\r\n      time={order.time}\r\n      tableSize={order.tableSize}\r\n      paymentType={order.paymentType}\r\n      address={order.address}\r\n      id={String(order.id)}\r\n    />\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <Accordion flush>\r\n        {orderCodes}\r\n      </Accordion>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CompletedOrders\r\n","import Tabs from 'react-bootstrap/Tabs'\r\nimport {Tab} from 'react-bootstrap'\r\n\r\nimport CurrentOrders from './currentOrders'\r\nimport CompletedOrders from './completedOrders'\r\n\r\nimport '../../pages/profilePage/profile.scss'\r\n\r\n\r\nconst orderHistory = () => {\r\n  return (\r\n    <>\r\n      <Tabs\r\n        defaultActiveKey='current'\r\n        id='uncontrolled-tab'\r\n        className='mb-3 fs'>\r\n        <Tab\r\n          eventKey='current'\r\n          title='Текущие заказы'\r\n        >\r\n          <CurrentOrders />\r\n        </Tab>\r\n        <Tab\r\n          eventKey='history'\r\n          title='История заказов'\r\n          className='link-color'\r\n        >\r\n          <CompletedOrders />\r\n        </Tab>\r\n      </Tabs>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default orderHistory\r\n","import {ChangeEvent, useState} from 'react'\r\nimport {Row, Col, Form, Button} from 'react-bootstrap'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {AppStoreType} from '../../../redux/reducers/rootReducer'\r\nimport {DeliveryAdressType} from '../../../common/types/userTypes'\r\nimport {setUserPersonalDataTC} from '../../../redux/reducers/userReducer'\r\nimport SearchDelivery from './SearchDelivery'\r\nimport Spinner from '../../Spinner/Spinner'\r\n\r\n\r\ntype PropsType = {\r\n  changeStatus: (status:boolean) => void\r\n}\r\n\r\nconst ShiftingDeliveryAPI = (props:PropsType) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const delivery = useSelector<AppStoreType,\r\n   DeliveryAdressType>((state) => state.user.userProfile)\r\n\r\n  const loading = useSelector<AppStoreType,\r\n   boolean>((state) => state.user.isLoading)\r\n\r\n  const [homeNumber, setHome] = useState(delivery.homeNumber)\r\n  const [homePart, setHomePart] = useState(delivery.homePart)\r\n  const [street, setStreet] = useState(delivery.street)\r\n  const [flat, setFlat] = useState(delivery.flat)\r\n\r\n  const setDelivery=()=>{\r\n    dispatch(setUserPersonalDataTC(userDeliveryData))\r\n    props.changeStatus(false)\r\n  }\r\n\r\n  const userDeliveryData = {\r\n    homeNumber: homeNumber,\r\n    homePart: homePart,\r\n    street: street,\r\n    flat: flat,\r\n  }\r\n\r\n  const streetSelect=(value: string)=>{\r\n    setStreet(value)\r\n  }\r\n  const homeSelect=(e: ChangeEvent<HTMLInputElement>)=>{\r\n    setHome(e.target.value)\r\n  }\r\n\r\n  const homePartSelect=(e: ChangeEvent<HTMLInputElement>)=>{\r\n    setHomePart(e.target.value)\r\n  }\r\n  const flatSelect=(e: ChangeEvent<HTMLInputElement>)=>{\r\n    setFlat(e.target.value)\r\n  }\r\n\r\n  return (\r\n    <div className='info-block'>\r\n      { loading && <Spinner/> }\r\n      <Row>\r\n        <Col xs={'auto'} sm={0} md={10} lg={10}>\r\n        </Col>\r\n        <Col xs={'auto'} sm={12} md={2} lg={2}>\r\n          <h5 style={{cursor: 'pointer', color: 'gray'}}\r\n            onClick={() => props.changeStatus(false)}>\r\n              Oтмена\r\n          </h5>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Col xs={'auto'} sm={11} md={9} lg={9}>\r\n        <Row>\r\n          <Col xs={'auto'} sm={6} md={8} lg={8}>\r\n            <h4>г.Минск</h4>\r\n            <br/>\r\n          </Col>\r\n          <Col>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <SearchDelivery\r\n            searchValue={streetSelect}\r\n            currentValue={street}\r\n          />\r\n        </Row>\r\n        <br/>\r\n        <Row>\r\n          <Col >\r\n            <label htmlFor='home'>Дом</label>\r\n            <Form.Control\r\n              type='number'\r\n              placeholder={homeNumber}\r\n              required\r\n              style={{width: '100%'}}\r\n              name='home'\r\n              value={homeNumber}\r\n              onChange={homeSelect}\r\n            />\r\n          </Col>\r\n          <Col >\r\n            <label htmlFor='homePart'>Корпус</label>\r\n            <Form.Control\r\n              type='number'\r\n              placeholder={homePart}\r\n              required\r\n              style={{width: '100%'}}\r\n              name='homePart'\r\n              value={homePart}\r\n              onChange={homePartSelect}\r\n            />\r\n          </Col>\r\n          <Col >\r\n            <label htmlFor='flat'>Квартира</label>\r\n            <Form.Control\r\n              type='number'\r\n              placeholder={flat}\r\n              required\r\n              style={{width: '100%'}}\r\n              name='flat'\r\n              value={flat}\r\n              onChange={flatSelect}\r\n            />\r\n          </Col>\r\n\r\n        </Row>\r\n        <br/>\r\n      </Col>\r\n      <Col>\r\n      </Col>\r\n      <Button\r\n        className='btn btn-outline-warning offset-md-9'\r\n        variant='outline-warning'\r\n        type='submit'\r\n        onClick={() => setDelivery()}\r\n      >\r\n        Сохранить\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ShiftingDeliveryAPI\r\n","import {useSelector} from 'react-redux'\r\nimport {Col, Row} from 'react-bootstrap'\r\nimport {useDispatch} from 'react-redux'\r\nimport {DeliveryAdressType} from '../../../common/types/userTypes'\r\nimport {AppStoreType} from '../../../redux/reducers/rootReducer'\r\nimport {setUserPersonalDataTC} from '../../../redux/reducers/userReducer'\r\n\r\n\r\ntype PropsType = {\r\n  changeStatus: (status:boolean) => void\r\n  changeAbsent: (status:boolean) => void\r\n}\r\n\r\nconst completedDelivery = (props:PropsType) => {\r\n  const delivery = useSelector<AppStoreType,\r\n   DeliveryAdressType>((state) => state.user.userProfile)\r\n  const dispatch = useDispatch()\r\n\r\n  const userDeliveryData = {\r\n    homeNumber: '',\r\n    homePart: '',\r\n    street: '',\r\n    flat: '',\r\n  }\r\n\r\n  const delDelivery=()=>{\r\n    dispatch(setUserPersonalDataTC(userDeliveryData))\r\n    props.changeStatus(true)\r\n    props.changeAbsent(true)\r\n  }\r\n\r\n  return (\r\n    <div className='info-block'>\r\n      <Row>\r\n        <span style={{cursor: 'pointer', color: 'gray', textAlign: 'right'}}\r\n          onClick={()=>delDelivery()}\r\n        >\r\n          Удалить адрес\r\n        </span>\r\n      </Row>\r\n      <Row>\r\n        <Col><div className='user-name'>\r\n          <h5>г.Минск</h5></div>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col><div className='user-name'>\r\n          <h5>Улица&nbsp;{delivery.street}</h5></div>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <div className='user-name'>\r\n            <h5>Дом&nbsp;{delivery.homeNumber}</h5>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <div className='user-name'>\r\n            <h5>Корпус&nbsp;{delivery.homePart}</h5>\r\n          </div></Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <div className='user-name'>\r\n            <h5>Квартира&nbsp;{delivery.flat}</h5>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <br/>\r\n      <button\r\n        className='btn btn-outline-warning offset-md-9'\r\n        onClick={()=>{\r\n          props.changeStatus(true)\r\n        }}\r\n      >\r\n        Изменить\r\n      </button>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default completedDelivery\r\n","\r\ntype PropsType = {\r\n  changeAbsent: (status:boolean) => void\r\n}\r\n\r\nconst absentDelivery = (props:PropsType) => {\r\n  return (\r\n    <div className='info-block'>\r\n      <div>\r\n        <br/>\r\n        <div style={{color: '#8d95a1', textAlign: 'center'}}>\r\n          <b><i>Вы пока не добавили адрес доставки</i></b>\r\n        </div>\r\n        <br/>\r\n        <button\r\n          className='btn btn-outline-warning offset-md-4'\r\n          onClick={()=>{\r\n            props.changeAbsent(false)\r\n          }}\r\n        >\r\n        Добавить адрес доставки\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default absentDelivery\r\n","import {useState} from 'react'\r\nimport {useEffect} from 'react'\r\nimport {AppStoreType} from '../../redux/reducers/rootReducer'\r\nimport {CommonUserType} from '../../common/types/userTypes'\r\nimport {useSelector} from 'react-redux'\r\nimport ShiftingDeliveryAPI from\r\n  './deliveryAdress/shiftingDeliveryAPI'\r\nimport CompletedDelivery from\r\n  './deliveryAdress/completedDelivery'\r\nimport AbsentDelivery from\r\n  './deliveryAdress/absentDelivery'\r\n\r\n\r\nconst DeliveryAdress = () => {\r\n  const delivery = useSelector<AppStoreType,\r\n   CommonUserType>((state:any) => state.user.userProfile)\r\n  const [isChange, setChangeStatus] = useState<boolean>(true)\r\n  const [adressAbsent, setAdressAbsent] = useState<boolean>(true)\r\n\r\n  useEffect(() => {\r\n    if (delivery.street=='') {\r\n      setAdressAbsent(true)\r\n    } else {\r\n      setAdressAbsent(false)\r\n      setChangeStatus(false)\r\n    }\r\n  }, [delivery])\r\n\r\n\r\n  const changeAbsent=(status:boolean)=>{\r\n    setAdressAbsent(status)\r\n  }\r\n  const changeStatus=(status:boolean)=>{\r\n    setChangeStatus(status)\r\n  }\r\n\r\n  return (\r\n    <div className='profile-block ml-md-auto' >\r\n      <h2>Адрес доставки</h2>\r\n\r\n      {adressAbsent ?\r\n        <AbsentDelivery changeAbsent={changeAbsent}/> :\r\n        <>\r\n          {isChange ?\r\n            <ShiftingDeliveryAPI changeStatus={changeStatus}/> :\r\n            <CompletedDelivery\r\n              changeStatus={changeStatus}\r\n              changeAbsent={changeAbsent}\r\n            />\r\n          }\r\n        </>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DeliveryAdress\r\n","/* eslint-disable no-invalid-this */\r\n/* eslint-disable require-jsdoc */\r\nimport React from 'react'\r\nimport Cards from 'react-credit-cards'\r\nimport {Button} from 'react-bootstrap'\r\nimport 'react-credit-cards/lib/styles.scss'\r\nimport 'react-credit-cards/es/styles-compiled.css'\r\nimport {Row, Col} from 'react-bootstrap'\r\nimport {BankCardType} from '../../../common/types/bankCardTypes'\r\nimport './NewBankCardForm.scss'\r\n\r\ntype PropTypes = {\r\n  returnCard: (card: BankCardType ) => void\r\n}\r\n\r\nexport default class PaymentForm extends React.Component<PropTypes> {\r\n  state =\r\n   {cvc: '', expiry: '', focus: '', name: '', number: '', disableStatus: false}\r\n\r\n  fieldFocus = (e: any) => {\r\n    this.setState({focus: e.target.name})\r\n  }\r\n\r\n   cvcOnBlur = (e: any) => {\r\n     this.setState({focus: 'number'})\r\n   }\r\n\r\n  numberChange = (e: any) => {\r\n    const {name, value} = e.target\r\n    if ( e.target.value.length<17) {\r\n      this.setState({[name]: value})\r\n    }\r\n  }\r\n\r\n  nameChange = (e: any) => {\r\n    const {name, value} = e.target\r\n    if (isNaN(+e.target.value)==false) {\r\n    } else {\r\n      this.setState({[name]: value})\r\n    }\r\n  }\r\n\r\n  expiryChange = (e:any) => {\r\n    const {name, value} = e.target\r\n    if ( e.target.value.length<5 && e.target.value<1230 ) {\r\n      this.setState({[name]: value})\r\n    }\r\n  }\r\n  cvcChange = (e:any) => {\r\n    const {name, value} = e.target\r\n    if ( e.target.value.length<4) {\r\n      this.setState({[name]: value})\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const handleSubmit=()=>{\r\n      if (this.state.cvc.length===3 && this.state.expiry.length===4 &&\r\n        this.state.number.length===16 && this.state.name.length>1) {\r\n        const id=Date.now()\r\n        this.props.returnCard({...this.state, id})\r\n        this.setState({...this.state, disableStatus: false})\r\n      } else {\r\n        this.setState({...this.state, disableStatus: true})\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div style={{height: '100%', margin: '10px'}} >\r\n        <div id='PaymentForm' >\r\n          <Row>\r\n            <Col xs={'auto'} sm={1} md={6} lg={1} xl={6}>\r\n            </Col>\r\n            <Col xs={'auto'} sm={7} md={5} lg={8} xl={6}>\r\n              Введите реквизиты карты\r\n            </Col>\r\n            <br/>\r\n            <br/>\r\n          </Row>\r\n          <Row>\r\n            <Col xs={'auto'} sm={7} md={5} lg={5} xl={5} >\r\n              <div style={{transform: 'scale(0.8)'}} >\r\n                <Cards\r\n                  cvc={this.state.cvc}\r\n                  expiry={this.state.expiry}\r\n                  focused={this.state.focus}\r\n                  name={this.state.name}\r\n                  number={this.state.number}\r\n                />\r\n              </div>\r\n            </Col>\r\n\r\n            <Col xs={'auto'} sm={6} md={6} lg={8} xl={7}>\r\n              <div style={{marginLeft: '50px'}}>\r\n                {this.state.disableStatus ?\r\n                  <div style={{color: 'red', fontSize: '12px'}}>\r\n                    не все данные заполнены\r\n                  </div>:\r\n                  null}\r\n                <form style={{display: 'flex',\r\n                  flexDirection: 'column'}}>\r\n                  <span style={{fontSize: '10px'}}>Имя владельца</span>\r\n                  <input style={{borderRadius: '5px', height: '25px',\r\n                    marginTop: '-6px', width: '200px', border: '1px solid',\r\n                    fontSize: '10px',\r\n                  }}\r\n                  type='text'\r\n                  name='name'\r\n                  placeholder='Ivan Ivanov'\r\n                  onChange={this.nameChange}\r\n                  onFocus={this.fieldFocus}\r\n                  />\r\n                </form>\r\n\r\n                <form style={{display: 'flex', flexDirection: 'column'}}>\r\n                  <span style={{fontSize: '10px'}}>Номер карты</span>\r\n                  <input style={{borderRadius: '5px', height: '25px',\r\n                    marginTop: '-5px', width: '200px', border: '1px solid',\r\n                    fontSize: '10px'}}\r\n                  type='number'\r\n                  name='number'\r\n                  value={this.state.number}\r\n                  placeholder='xxxx xxxx xxxx xxxx'\r\n                  onChange={this.numberChange}\r\n                  onFocus={this.fieldFocus}\r\n                  />\r\n                </form>\r\n\r\n                <div style={{\r\n                  display: 'flex',\r\n                  justifyContent: 'space-between',\r\n                  width: '200px'\r\n                }}>\r\n\r\n                  <form\r\n                    style={{display: 'flex',\r\n                      flexDirection: 'column',\r\n                    }}\r\n                  >\r\n                    <span style={{fontSize: '10px'}}>Срок действия</span>\r\n                    <input style={{borderRadius: '5px', height: '25px',\r\n                      marginTop: '-5px', width: '70px', border: '1px solid',\r\n                      fontSize: '10px'}}\r\n                    type='number'\r\n                    name='expiry'\r\n                    placeholder='месяц/год'\r\n                    value={this.state.expiry}\r\n                    onChange={this.expiryChange}\r\n                    onFocus={this.fieldFocus}\r\n                    className='testtt'\r\n                    />\r\n                  </form>\r\n\r\n\r\n                  <form\r\n                    style={{display: 'flex',\r\n                      flexDirection: 'column',\r\n                    }}\r\n                  >\r\n                    <span style={{fontSize: '10px'}}>CVC</span>\r\n                    <input style={{borderRadius: '5px', height: '25px',\r\n                      marginTop: '-5px', width: '50px', border: '1px solid',\r\n                      fontSize: '10px'}}\r\n                    type='number'\r\n                    name='cvc'\r\n                    placeholder='***'\r\n                    value={this.state.cvc}\r\n                    onChange={this.cvcChange}\r\n                    onFocus={this.fieldFocus}\r\n                    onBlur={this.cvcOnBlur}\r\n                    />\r\n                  </form>\r\n\r\n                </div>\r\n                <br/>\r\n                <Button\r\n                  style={{\r\n                    borderRadius: '10px',\r\n                    width: '200px',\r\n                    color: 'white',\r\n                    backgroundColor: '#ff9e05'\r\n                  }}\r\n                  variant='outline-warning'\r\n                  type='submit'\r\n                  onClick={() => handleSubmit()}\r\n                >\r\n          Готово\r\n                </Button>\r\n\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n\r\n\r\n        </div>\r\n        <br/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import {useDispatch} from 'react-redux'\r\nimport {CloseButton, Modal} from 'react-bootstrap'\r\nimport {BankCardType} from '../../../common/types/bankCardTypes'\r\nimport {setBankCardTC} from '../../../redux/reducers/bankCardReducer'\r\nimport NewBankCardForm from './NewBankCardForm'\r\n\r\n\r\ntype PropsType = {\r\n  changeStatus: () => void\r\n}\r\n\r\nconst previewCard = (props:PropsType) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const returnCard=(card: BankCardType)=>{\r\n    dispatch(setBankCardTC(card))\r\n    props.changeStatus()\r\n  }\r\n\r\n  const handleClose = () => {\r\n    props.changeStatus()\r\n  }\r\n\r\n  return (\r\n    <div className='info-block' >\r\n      <Modal.Header className='border-0'>\r\n        <CloseButton onClick={() => handleClose()} />\r\n      </Modal.Header>\r\n      <NewBankCardForm returnCard={returnCard}/>\r\n      <br/>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default previewCard\r\n","/* eslint-disable no-invalid-this */\r\n/* eslint-disable require-jsdoc */\r\nimport React from 'react'\r\nimport Cards from 'react-credit-cards'\r\nimport {BankCardType} from '../../../common/types/bankCardTypes'\r\nimport 'react-credit-cards/lib/styles.scss'\r\nimport 'react-credit-cards/es/styles-compiled.css'\r\n\r\ntype PropTypes = {\r\n  card: BankCardType,\r\n  cardNumber: number,\r\n  deleteCard: (cardNumber: number) => void\r\n}\r\nexport default class PaymentForm extends React.Component<PropTypes> {\r\n  state = {\r\n    cvc: '',\r\n    expiry: '',\r\n    focus: '',\r\n    name: '',\r\n    number: ''\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({...this.state, ...this.props.card,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{height: '150px', margin: '10px'}}\r\n        key={this.props.card.id}\r\n        test-key={this.props.card.id}\r\n      >\r\n        <div id='PaymentForm'\r\n          style={{transform: 'scale(0.6)',\r\n            width: '100px',\r\n            paddingLeft: '40px'\r\n          }} >\r\n          <Cards\r\n            cvc={this.state.cvc}\r\n            expiry={this.state.expiry}\r\n            focused={this.state.focus}\r\n            name={this.state.name}\r\n            number={this.state.number}\r\n          />\r\n        </div>\r\n        <div style={{paddingLeft: '250px', marginTop: '-105px'}}\r\n          className='order-block'\r\n        >\r\n          <div className='order-deletion'\r\n            style={{display: 'flex'}}\r\n            onClick={() => this.props.deleteCard(this.props.cardNumber)}\r\n          >\r\n            <i className=\r\n              'far fa-trash-alt icon-height delete-button'></i>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import {useSelector} from 'react-redux'\r\nimport {useDispatch} from 'react-redux'\r\nimport {userCardsType} from '../../../common/types/bankCardTypes'\r\nimport {AppStoreType} from '../../../redux/reducers/rootReducer'\r\nimport {deleteBankCardTC} from '../../../redux/reducers/bankCardReducer'\r\nimport PreviewCardsItem from '../myCards/previewCardItem'\r\nimport {Row} from 'react-bootstrap'\r\n\r\n\r\ntype PropsType = {\r\n  changeStatus: (status:boolean) => void\r\n  changeAbsent: (status:boolean) => void\r\n}\r\n\r\nconst previewCard = (props:PropsType) => {\r\n  const userCards =\r\n   useSelector<AppStoreType, userCardsType>((state) => state.bankCard.userCards)\r\n  const dispatch = useDispatch()\r\n\r\n  const deleteCard=(cardNumber: number)=>{\r\n    dispatch(deleteBankCardTC(cardNumber))\r\n  }\r\n\r\n  return (\r\n    <div className='info-block' >\r\n\r\n      {userCards.map((card, i) =>{\r\n        return (\r\n          <Row key={card.id}>\r\n            <PreviewCardsItem\r\n              cardNumber={i}\r\n              card={card}\r\n              deleteCard={deleteCard}\r\n            />\r\n          </Row>)\r\n      }) }\r\n\r\n      <br/>\r\n      <button\r\n        className='btn btn-outline-warning offset-md-8'\r\n        onClick={()=>{\r\n          props.changeStatus(true)\r\n        }}\r\n      >\r\n        Добавить карту\r\n      </button>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default previewCard\r\n","type PropsType = {\r\n  changeAbsent: (status:boolean) => void\r\n}\r\n\r\nconst absentDelivery = (props:PropsType) => {\r\n  return (\r\n    <div className='info-block'>\r\n      <div style={{color: '#8d95a1', textAlign: 'center',\r\n        display: 'flex', flexDirection: 'column'}}>\r\n        <b><i>У вас не привязана ни одна карта!</i></b>\r\n        <b><i>Добавить карту?</i></b>\r\n        <br/>\r\n        <button style={{width: '150px'}}\r\n          className='btn btn-outline-warning offset-md-9'\r\n          onClick={()=>{\r\n            props.changeAbsent(false)\r\n          }}\r\n        >\r\n        Добавить карту\r\n        </button>\r\n      </div>\r\n\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default absentDelivery\r\n","import {useState} from 'react'\r\nimport {useEffect} from 'react'\r\nimport {AppStoreType} from '../../redux/reducers/rootReducer'\r\nimport {userCardsType} from '../../common/types/bankCardTypes'\r\nimport {useSelector} from 'react-redux'\r\nimport NewBankCardContainer from './myCards/NewBankCardContainer'\r\nimport PreviewCards from './myCards/previewCards'\r\nimport AbsentBankCard from './myCards/absentCard'\r\n\r\nimport '../../pages/profilePage/profile.scss'\r\n\r\n\r\nconst MyCreditCards = () => {\r\n  const userCards =\r\n   useSelector<AppStoreType, userCardsType>((state) => state.bankCard.userCards)\r\n\r\n  const [isAddingCard, setIsAddingCard] = useState<boolean>(false)\r\n  const [cardAbsent, setCardAbsent] = useState<boolean>(false)\r\n\r\n  useEffect(() => {\r\n    if (userCards.length<1) {\r\n      setCardAbsent(true)\r\n      setIsAddingCard(true)\r\n    } else {\r\n      setCardAbsent(false)\r\n      setIsAddingCard(false)\r\n    }\r\n  }, [userCards])\r\n\r\n  const changeAbsent=(status:boolean)=>{\r\n    setCardAbsent(false)\r\n  }\r\n\r\n  const changeIsAddingCard=()=>{\r\n    setIsAddingCard(!isAddingCard)\r\n  }\r\n\r\n  return (\r\n    <div className='profile-block ml-md-auto' >\r\n      <h2> Мои карты</h2>\r\n\r\n      {cardAbsent ?\r\n        <AbsentBankCard changeAbsent={changeAbsent}/> :\r\n        <>\r\n          {isAddingCard ?\r\n            <NewBankCardContainer\r\n              changeStatus={changeIsAddingCard}\r\n            /> :\r\n            <PreviewCards\r\n              changeStatus={changeIsAddingCard}\r\n              changeAbsent={changeAbsent}\r\n            />\r\n          }\r\n        </>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MyCreditCards\r\n","import {useState} from 'react'\r\nimport {ApiUser} from '../../../api/ApiUser'\r\nimport {UserType} from '../../../common/types/userTypes'\r\nimport {AppStoreType} from '../../../redux/reducers/rootReducer'\r\nimport {useSelector} from 'react-redux'\r\nimport {Form, Button, Modal} from 'react-bootstrap'\r\nimport {ValidationType} from '../../../common/types/userTypes'\r\nimport {useValidation} from '../../../utils/validation'\r\nimport Spinner from '../../Spinner/Spinner'\r\nimport Cookies from 'js-cookie'\r\n\r\nconst passwordResetForm = () => {\r\n  const token = Cookies.get('token')\r\n  const userPersonal =\r\n   useSelector<AppStoreType, UserType>((state) => state.user.userProfile)\r\n\r\n  const [authFailed, setAuthFailed] = useState(false)\r\n  const [oldPassword, setOldPassword] = useState('')\r\n  const [oldPassCorrect, setOldPassCorrect] = useState(false)\r\n  const [retypeNewPass, setRetypeNewPass] = useState('')\r\n  const [showOldPassError, setShowOldPassError] = useState(false)\r\n  const [newPassIsEqual, setNewPassIsEqual] = useState(false)\r\n  const [showEqualPassError, setShowEqualPassError] = useState(false)\r\n  const [passSuccessChanged, setPassSuccessChanged] = useState(false)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n\r\n\r\n  const oldPassChange = (e: any) => {\r\n    setOldPassword(e.target.value)\r\n    setShowOldPassError(false)\r\n  }\r\n\r\n  const oldPassCheck = (e: any) => {\r\n    e.preventDefault()\r\n    setIsLoading(true)\r\n    ApiUser.checkUserPassword(\r\n      token,\r\n      {password: oldPassword, email: userPersonal.email}\r\n    )\r\n      .then((resp: any) =>{\r\n        if (resp.status > 400) {\r\n          throw new Error(resp.statusText)\r\n        }\r\n        // if (resp.data.token) {\r\n        if (resp.data.accessToken) {\r\n          setOldPassCorrect(true)\r\n          setShowOldPassError(false)\r\n        }\r\n        setIsLoading(false)\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response)\r\n        setIsLoading(false)\r\n        setOldPassCorrect(false)\r\n        setShowOldPassError(true)\r\n      })\r\n  }\r\n\r\n  const setNewPass = (e: any) => {\r\n    if (!newPassIsEqual) {\r\n      setShowEqualPassError(true)\r\n      return\r\n    }\r\n    e.preventDefault()\r\n    setIsLoading(true)\r\n    ApiUser.changeUserPassword(\r\n      token, userPersonal.id, {password: newUserPassword.password}\r\n    )\r\n      .then((resp: any) =>{\r\n        if (resp.status > 400) {\r\n          throw new Error(resp.statusText)\r\n        }\r\n        if (resp.statusText=='OK') {\r\n          setPassSuccessChanged(true)\r\n          setOldPassword('')\r\n          setOldPassCorrect(false)\r\n          setRetypeNewPass('')\r\n          password.value='' // Не работает => как обнулить это значение???\r\n          // или задиспатчить запрос за данными =>\r\n          // перерисовать всю страницу ???\r\n        }\r\n        setIsLoading(false)\r\n      })\r\n      .catch((error) => {\r\n        setIsLoading(false)\r\n        console.log(error.response)\r\n      })\r\n  }\r\n\r\n  const changeRetypeNewPass=(e: any)=>{\r\n    setRetypeNewPass(e.target.value)\r\n    setShowEqualPassError(false)\r\n\r\n    if (e.target.value===newUserPassword.password &&\r\n      e.target.value!=='') {\r\n      setNewPassIsEqual(true)\r\n    } else {\r\n      setNewPassIsEqual(false)\r\n    }\r\n  }\r\n\r\n  const useInput = (initialValue: string, validations: ValidationType) => {\r\n    const [value, setValue] = useState(initialValue)\r\n    const [isDirty, setDirty] = useState(false)\r\n    const valid = useValidation(value, validations)\r\n\r\n    const onChange = (e: any) => {\r\n      setValue(e.target.value)\r\n      setAuthFailed(false)\r\n    }\r\n\r\n    const onBlur = (e: any) => {\r\n      setDirty(true)\r\n    }\r\n\r\n    return {\r\n      value,\r\n      onChange,\r\n      onBlur,\r\n      isDirty,\r\n      ...valid\r\n    }\r\n  }\r\n\r\n  const password = useInput('', {\r\n    isEmpty: true,\r\n    minLengthError: 8,\r\n    maxLengthError: 15,\r\n    passwordError: true,\r\n  })\r\n\r\n  const newUserPassword = {\r\n    password: password.value,\r\n  }\r\n\r\n  const isPasswordInvalid = password.isDirty &&\r\n   (password.isEmpty || password.minLengthError || password.maxLengthError ||\r\n     password.passwordError)\r\n\r\n  return (\r\n    <div className='login-form'>\r\n      { isLoading && <Spinner/> }\r\n      <div className='container'>\r\n        <Modal.Dialog className='shadow p-3 mb-5 bg-body rounded'>\r\n\r\n          <Modal.Body>\r\n            <Form className='my-3' style={{width: '100%'}}>\r\n\r\n              {passSuccessChanged &&\r\n              <div\r\n                style={{display: 'flex',\r\n                  flexDirection: 'column',\r\n                  alignItems: 'center',\r\n                }}\r\n              >\r\n                <h4>Пароль успешно изменен</h4>\r\n                <Button\r\n                  className='btn btn-outline-warning offset-md-0'\r\n                  variant='outline-warning'\r\n                  type='submit'\r\n                  onClick={() => setPassSuccessChanged(false)}\r\n                >\r\n             Ok\r\n                </Button>\r\n              </div>}\r\n\r\n              {!passSuccessChanged &&\r\n              <>\r\n                {!oldPassCorrect &&<><h4>Подтвердите старый пароль</h4><br/></>}\r\n                <Form.Floating className='mb-3 mx-3'>\r\n                  {!oldPassCorrect &&<>\r\n                    <Form.Control\r\n                      id='userOldPassword'\r\n                      disabled={oldPassCorrect}\r\n                      type='password'\r\n                      placeholder='password'\r\n                      value={oldPassword}\r\n                      onChange={(e) => oldPassChange(e)}\r\n                    />\r\n                    <label htmlFor='userOldPassword'>Старый пароль</label>\r\n                    {(showOldPassError) &&\r\n                 <div className='error'>\r\n                  Вы ввели не верный пароль </div>\r\n                    }\r\n                  </>}\r\n\r\n                  { !oldPassCorrect && <>\r\n                    <Modal.Footer className='justify-content-center border-0'>\r\n                      <br/><br/><br/>\r\n                      <Button\r\n                        className='btn btn-outline-warning offset-md-4'\r\n                        variant='outline-warning'\r\n                        type='submit'\r\n                        onClick={(e) => oldPassCheck(e)}\r\n                      >\r\n              Проверить\r\n                      </Button>\r\n                    </Modal.Footer>\r\n                  </>}\r\n\r\n                </Form.Floating>\r\n\r\n              </>}\r\n\r\n\r\n              {oldPassCorrect &&<><h4>Введите новый пароль</h4><br/></>}\r\n              { oldPassCorrect &&\r\n              <>\r\n                <Form.Floating className='mb-3 mx-3'>\r\n                  <Form.Control\r\n                    id='userNewPassword'\r\n                    disabled={!oldPassCorrect}\r\n                    type='password'\r\n                    placeholder='password'\r\n                    value={!authFailed ? password.value : ''}\r\n                    onChange={(e) => password.onChange(e)}\r\n                    onBlur={(e) => password.onBlur(e)}\r\n                  />\r\n                  <label htmlFor='userNewPassword'>Новый пароль</label>\r\n                  {\r\n                    isPasswordInvalid &&\r\n                <div className='error'>\r\n                  Пароль должен содержать 8-15 символов\r\n                  (включая 1 символ в верхнем регистре,\r\n                  1 символ в нижнем регистре и 1 цифру)\r\n                  без пробелов и специальных знаков (#, %, &, !, $, etc.).\r\n                  Обязательно к заполнению.\r\n                </div>\r\n                  }\r\n                </Form.Floating>\r\n\r\n                <Form.Floating className='mx-3'>\r\n                  <Form.Control\r\n                    id='userAgainNewPassword'\r\n                    disabled={!oldPassCorrect}\r\n                    type='password'\r\n                    placeholder='password'\r\n                    value={retypeNewPass}\r\n                    onChange={(e) => changeRetypeNewPass(e)}\r\n                  />\r\n                  <label htmlFor='userAgainNewPassword'>\r\n                  Повторите новый пароль\r\n                  </label>\r\n\r\n                  {(!newPassIsEqual && showEqualPassError) &&\r\n                     (retypeNewPass!=='') &&\r\n                <div className='error'>\r\n                  Пароли не совпадают\r\n                </div>\r\n                  }\r\n                </Form.Floating>\r\n\r\n              </>}\r\n\r\n            </Form>\r\n          </Modal.Body>\r\n\r\n          { oldPassCorrect && <>\r\n            <Modal.Footer className='justify-content-center border-0'>\r\n              <Button\r\n                className='btn btn-outline-warning offset-md-0'\r\n                disabled={isPasswordInvalid || retypeNewPass===''}\r\n                variant='outline-warning'\r\n                type='submit'\r\n                onClick={(e) => setNewPass(e)}\r\n              >\r\n             Сохранить\r\n              </Button>\r\n            </Modal.Footer>\r\n          </>}\r\n\r\n        </Modal.Dialog>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default passwordResetForm\r\n\r\n\r\n","\r\nimport PasswordResetFrorm from './passwordReset/passwordResetForm'\r\n\r\n\r\nconst PasswordReset = () => {\r\n  return (\r\n    <div className='profile-block ml-md-auto'>\r\n      <h2>\r\n        Изменение пароля\r\n      </h2>\r\n      <div className='info-block'>\r\n        <PasswordResetFrorm/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PasswordReset\r\n","import {useState} from 'react'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport {AppStoreType} from '../../../redux/reducers/rootReducer'\r\nimport {Form, Button, Modal, CloseButton} from 'react-bootstrap'\r\nimport {ValidationType} from '../../../common/types/userTypes'\r\nimport {UserType} from '../../../common/types/userTypes'\r\nimport {useValidation} from '../../../utils/validation'\r\nimport {setUserPersonalDataTC} from '../../../redux/reducers/userReducer'\r\nimport Cookies from 'js-cookie'\r\n\r\ntype PropsType = {\r\n  changeStatus: (status:boolean) => void\r\n}\r\n\r\nconst shiftingPersonalForm = (props:PropsType) => {\r\n  const userData =\r\n   useSelector<AppStoreType, UserType>((state) => state.user.userProfile)\r\n\r\n  const token = Cookies.get('token')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const [authFailed, setAuthFailed] = useState(false)\r\n\r\n  const useInput = (initialValue: string, validations: ValidationType) => {\r\n    const [value, setValue] = useState(initialValue)\r\n    const [isDirty, setDirty] = useState(false)\r\n    const valid = useValidation(value, validations)\r\n\r\n    const onChange = (e: any) => {\r\n      setValue(e.target.value)\r\n      setAuthFailed(false)\r\n    }\r\n\r\n    const onBlur = (e: any) => {\r\n      setDirty(true)\r\n    }\r\n\r\n    return {\r\n      value,\r\n      onChange,\r\n      onBlur,\r\n      isDirty,\r\n      ...valid\r\n    }\r\n  }\r\n\r\n  const firstName = useInput(`${userData.name}`, {\r\n    isEmpty: true,\r\n    minLengthError: 2,\r\n    maxLengthError: 30,\r\n    firstNameError: true,\r\n  })\r\n\r\n  const lastName = useInput(`${userData.secondname}`, {\r\n    isEmpty: true,\r\n    minLengthError: 3,\r\n    maxLengthError: 30,\r\n    lastNameError: true,\r\n  })\r\n\r\n  const email = useInput(`${userData.email}`, {\r\n    isEmpty: true,\r\n    minLengthError: 5,\r\n    maxLengthError: 30,\r\n    emailError: true,\r\n  })\r\n\r\n  const phoneNumber = useInput(`${userData.phone}`, {\r\n    isEmpty: true,\r\n    phoneNumberError: true,\r\n  })\r\n\r\n  const userPersonalData = {\r\n    name: firstName.value,\r\n    secondname: lastName.value,\r\n    email: email.value,\r\n    phone: phoneNumber.value,\r\n  }\r\n\r\n  const isFirstNameInvalid = firstName.isDirty &&\r\n      (firstName.isEmpty || firstName.minLengthError ||\r\n         firstName.maxLengthError || firstName.firstNameError)\r\n  const isLastNameInvalid = lastName.isDirty &&\r\n   (lastName.isEmpty || lastName.minLengthError ||\r\n     lastName.maxLengthError || lastName.lastNameError)\r\n  const isEmailInvalid = email.isDirty &&\r\n   (email.isEmpty || email.minLengthError ||\r\n     email.maxLengthError || email.emailError)\r\n  const isPhoneNumberInvalid = phoneNumber.isDirty &&\r\n   (phoneNumber.isEmpty || phoneNumber.phoneNumberError)\r\n\r\n  const handleSubmit = (e: any) => {\r\n    e.preventDefault()\r\n    props.changeStatus(true)\r\n    dispatch(setUserPersonalDataTC(userPersonalData, token))\r\n  }\r\n\r\n  const handleClose = () => {\r\n    props.changeStatus(true)\r\n  }\r\n\r\n  return (\r\n    <div className='registration-form'>\r\n      <div className='container'>\r\n        <Modal.Dialog className='shadow p-3 mb-5 bg-body rounded'>\r\n          <Modal.Header className='border-0'>\r\n            <Modal.Title className='form-title'>Измените данные</Modal.Title>\r\n            <CloseButton onClick={() => handleClose()} />\r\n          </Modal.Header>\r\n\r\n          {\r\n            authFailed &&\r\n            <div className='error validation'>\r\n              Пользователь с таким адресом электронной почты уже существует.\r\n            </div>\r\n          }\r\n\r\n          <Modal.Body>\r\n            <Form className='my-3' style={{width: '100%'}}>\r\n              <Form.Floating className='mb-3 mx-3'>\r\n                <Form.Control\r\n                  id='userFirstName'\r\n                  type='firstName'\r\n                  placeholder='Иван'\r\n                  value={firstName.value}\r\n                  onChange={(e) => firstName.onChange(e)}\r\n                  onBlur={(e) => firstName.onBlur(e)}\r\n                />\r\n                <label htmlFor='userFirstName'>Имя</label>\r\n                {\r\n                  isFirstNameInvalid &&\r\n                  <div className='error'>\r\n                    Это поле должно содержать 2-30 знаков,\r\n                    без специальных символов (#, %, &, !, $, etc.) и\r\n                    чисел (0-9). Обязательно к заполнению.\r\n                  </div>\r\n                }\r\n              </Form.Floating>\r\n\r\n              <Form.Floating className='mb-3 mx-3'>\r\n                <Form.Control\r\n                  id='userLastName'\r\n                  type='lastName'\r\n                  placeholder='Иванов'\r\n                  value={lastName.value}\r\n                  onChange={(e) => lastName.onChange(e)}\r\n                  onBlur={(e) => lastName.onBlur(e)}\r\n                />\r\n                <label htmlFor='userLastName'>Фамилия</label>\r\n                {\r\n                  isLastNameInvalid &&\r\n                  <div className='error'>\r\n                    Это поле должно содержать 3-30 знаков,\r\n                    без специальных символов (#, %, &, !, $, etc.) и\r\n                    чисел (0-9). Обязательно к заполнению.\r\n                  </div>\r\n                }\r\n              </Form.Floating>\r\n\r\n              <Form.Floating className='mb-3 mx-3'>\r\n                <Form.Control\r\n                  id='userEmail'\r\n                  type='email'\r\n                  placeholder='name@example.com'\r\n                  value={email.value}\r\n                  onChange={(e) => email.onChange(e)}\r\n                  onBlur={(e) => email.onBlur(e)}\r\n                />\r\n                <label htmlFor='userEmail'>Электронная почта</label>\r\n                {\r\n                  isEmailInvalid &&\r\n                  <div className='error'>\r\n                    Электронная почта должна быть в формате xxx@yyy.zzz,\r\n                    без специальных символов (#, %, &, !, $, etc.).\r\n                    Обязательно к заполнению.\r\n                  </div>\r\n                }\r\n              </Form.Floating>\r\n\r\n              <Form.Floating className='mb-3 mx-3'>\r\n                <Form.Control\r\n                  id='userPhoneNumber'\r\n                  type='phoneNumber'\r\n                  placeholder='+375-XX-XXX-XX-XX'\r\n                  value={phoneNumber.value}\r\n                  onChange={(e) => phoneNumber.onChange(e)}\r\n                  onBlur={(e) => phoneNumber.onBlur(e)}\r\n                />\r\n                <label htmlFor='userPhoneNumber'>Телефон</label>\r\n                {\r\n                  isPhoneNumberInvalid &&\r\n                  <div className='error'>\r\n                    Телефон должен содержать код в формате\r\n                    +375 (+ опционально) либо 80 и 9 цифр основного номера.\r\n                    Обязательно к заполнению.\r\n                  </div>\r\n                }\r\n              </Form.Floating>\r\n            </Form>\r\n          </Modal.Body>\r\n\r\n          <Modal.Footer className='justify-content-center border-0'>\r\n            <Button\r\n              disabled={!firstName.inputValid ||\r\n                !lastName.inputValid ||\r\n                !email.inputValid ||\r\n                !phoneNumber.inputValid ||\r\n                authFailed}\r\n              variant='outline-warning'\r\n              type='submit'\r\n              onClick={(e) => handleSubmit(e)}\r\n            >\r\n              Сохранить\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal.Dialog>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default shiftingPersonalForm\r\n","import {UserType} from '../../../common/types/userTypes'\r\nimport {AppStoreType} from '../../../redux/reducers/rootReducer'\r\nimport Spinner from '../../Spinner/Spinner'\r\nimport {useSelector} from 'react-redux'\r\nimport {Col, Row} from 'react-bootstrap'\r\n\r\ntype PropsType = {\r\n  changeStatus: (status:boolean) => void\r\n}\r\n\r\nconst completedPersonal = (props:PropsType) => {\r\n  const user =\r\n   useSelector<AppStoreType, UserType>((state) => state.user.userProfile)\r\n  const loading =\r\n   useSelector<AppStoreType, boolean>((state) => state.user.isLoading)\r\n\r\n  return (\r\n    <div className='info-block'>\r\n      { loading && <Spinner/> }\r\n      <br/>\r\n      <Row>\r\n        <Col>\r\n          <div className='user-name'>\r\n            <h5>{user && user.name}</h5>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <div className='user-name'>\r\n            <h5>{user && user.secondname}</h5>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col >\r\n          <div className='user-name'>\r\n            <h5>{user && user.email}</h5>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <div className='user-name'>\r\n            <h5>{user && user.phone}</h5>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <br/>\r\n      <button\r\n        className='btn btn-outline-warning offset-md-9'\r\n        onClick={()=>{\r\n          props.changeStatus(false)\r\n        }}\r\n      >\r\n        Изменить\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default completedPersonal\r\n","import {useState} from 'react'\r\nimport ShiftingPersonalForm from './personalData/shiftingPersonalForm'\r\n\r\nimport CompletedPersonal from\r\n  './personalData/completedPersonal'\r\n\r\n\r\nconst PersonalData = () => {\r\n  const [isShifting, setChangeStatus] = useState<boolean>(true)\r\n  const changeStatus=(status:boolean)=>{\r\n    setChangeStatus(status)\r\n  }\r\n\r\n  return (\r\n    <div className='profile-block ml-md-auto'>\r\n      <h2 className='profile-subtitle'>\r\n        Личные данные\r\n      </h2>\r\n      {isShifting ?\r\n        <CompletedPersonal changeStatus={changeStatus}/> :\r\n        <ShiftingPersonalForm changeStatus={changeStatus}/> }\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PersonalData\r\n","import {useHistory} from 'react-router-dom'\r\nimport Cookies from 'js-cookie'\r\nimport {useAppDispatch} from '../../redux/hooks'\r\nimport {logOut} from '../../redux/actions'\r\nimport OrderHistory from '../../components/userProfile/orderHistory'\r\nimport DeliveryAdress from '../../components/userProfile/deliveryAdress'\r\nimport MyCreditCards from '../../components/userProfile/myCards'\r\nimport PasswordReset from '../../components/userProfile/passwordReset'\r\nimport PersonalData from '../../components/userProfile/personalData'\r\nimport './profile.scss'\r\n\r\nconst UserProfile = () => {\r\n  const history = useHistory()\r\n  const dispatch = useAppDispatch()\r\n\r\n\r\n  const handleClose = () => {\r\n    Cookies.remove('token')\r\n    Cookies.remove('refreshToken') //\r\n    // localStorage.removeItem('token')\r\n    dispatch(logOut())\r\n    history.push('/')\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className='container-md'>\r\n        <div className='title-group'>\r\n          <h1 className='profile-title'>\r\n            Профиль\r\n          </h1>\r\n          <div className='profile-line'/>\r\n          <button className='btn-exit btn' onClick={handleClose}>Выйти</button>\r\n        </div>\r\n\r\n        <div className='row justify-content-start'>\r\n          <div className='col-lg-6'>\r\n            <PersonalData />\r\n            <DeliveryAdress/>\r\n            <PasswordReset/>\r\n            <MyCreditCards/>\r\n          </div>\r\n          <div className='col-lg-6 profile-block history ml-md-auto'>\r\n            <OrderHistory/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserProfile\r\n\r\n","import {Button, Card} from 'react-bootstrap'\r\nimport {useHistory} from 'react-router'\r\nimport {useDispatch} from 'react-redux'\r\nimport Cookies from 'js-cookie'\r\n\r\nimport {clearCart} from '../../redux/actions'\r\nimport ScrollToTop from '../../components/scrollToTop/ScrollToTop'\r\nimport {ApiCart} from '../../api/ApiCart'\r\nimport {useAppSelector} from '../../redux/hooks'\r\n\r\nimport './confirmation.scss'\r\n\r\ntype ConfirmProps = {\r\n  orderID: number\r\n}\r\n\r\n// eslint-disable-next-line react/prop-types\r\nconst Message: React.FC<ConfirmProps> = ({orderID}) => {\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n\r\n  const handleClose = () => {\r\n    history.push('/')\r\n\r\n    ApiCart.clearCart(Cookies.get('token'))\r\n    dispatch(clearCart())\r\n  }\r\n\r\n  const {date} = useAppSelector(\r\n    (state) => state.order\r\n  )\r\n\r\n\r\n  return (\r\n    <>\r\n      <ScrollToTop />\r\n      <div className='container'>\r\n        <Card className='shadow p-3 my-5 bg-body rounded'>\r\n          <Card.Body>\r\n            <Card.Title><h2>Спасибо за ваш заказ!</h2></Card.Title>\r\n            <Card.Text className='mb-5 message-text'>\r\n              Номер вашего заказа : {orderID}, к выдаче {date} г.\r\n            </Card.Text>\r\n            <Button\r\n              variant='outline-warning'\r\n              type='button'\r\n              onClick={() => handleClose()}\r\n            >\r\n              Ok\r\n            </Button>\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Message\r\n\r\n","import {useAppSelector} from '../../redux/hooks'\r\n\r\nconst DetailsData = () => {\r\n  const orderingUser = useAppSelector(\r\n    (state) => state.user.userProfile\r\n  )\r\n  const orderDetails = useAppSelector(\r\n    (state) => state.order\r\n  )\r\n\r\n  return (\r\n    <div className='details-ordertype-block'>\r\n      <div className='row'>\r\n        <div className='col order-type-header'>\r\n          Тип заказа:\r\n        </div>\r\n        <div className='col order-type-text'>\r\n          {orderDetails.type}\r\n        </div>\r\n      </div>\r\n      <div className='row'>\r\n        <div className='col order-type-header'>\r\n          Дата:\r\n        </div>\r\n        <div className='col order-type-text'>\r\n          {orderDetails.date}\r\n        </div>\r\n      </div>\r\n      <div className='row'>\r\n        <div className='col order-type-header'>\r\n          Время:\r\n        </div>\r\n        <div className='col order-type-text'>\r\n          {orderDetails.time}\r\n        </div>\r\n      </div>\r\n      <div className='row'>\r\n        <div className='col order-type-header'>\r\n          Контактная информация:\r\n        </div>\r\n        <div className='col order-type-text'>\r\n          {orderingUser.name},  {orderingUser.phone}\r\n        </div>\r\n      </div>\r\n      {orderDetails.type === 'Доставка' && (\r\n        <div className='row'>\r\n          <div className='col order-type-header'>\r\n            Адрес доставки:\r\n          </div>\r\n          <div className='col order-type-text'>\r\n            {orderDetails.address}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {orderDetails.type === 'Бронирование стола' && (\r\n        <div className='row'>\r\n          <div className='col order-type-header'>\r\n            Стол на:\r\n          </div>\r\n          <div className='col order-type-text'>\r\n            {orderDetails.tableSize}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DetailsData\r\n","import {ChangeEvent, useState} from 'react'\r\nimport {FloatingLabel, Form} from 'react-bootstrap'\r\n\r\nimport {useAppSelector} from '../../redux/hooks'\r\nimport NewBankCardContainer from '../userProfile/myCards/NewBankCardContainer'\r\n\r\n\r\nconst ChoosePaymentCart = () => {\r\n  const [isDirty, setDirty] = useState<boolean>(false)\r\n  const [isAddingCard, setIsAddingCard] = useState<boolean>(false)\r\n\r\n  const myCards = useAppSelector(\r\n    (state) => state.bankCard.userCards\r\n  )\r\n\r\n  const changeIsAddingCard=()=>{\r\n    setIsAddingCard(!isAddingCard)\r\n  }\r\n  // const [card, setPaymentCard] = useState<BankCardType>()\r\n\r\n  return (\r\n    <div className='choose-cards-select'>\r\n      {isAddingCard ?\r\n        <div className='shadow new-card'>\r\n          <NewBankCardContainer changeStatus={changeIsAddingCard}/>\r\n        </div> :\r\n        <>\r\n          <FloatingLabel\r\n            className='choose-cards-select'\r\n            controlId='floatingSelect'\r\n            label='Выберите карту для оплаты'\r\n          >\r\n            <Form.Select\r\n              aria-label='Select payment card'\r\n              // defaultValue={card.name}\r\n              onChange={(e: ChangeEvent<HTMLSelectElement>) => {\r\n                // setPaymentCard(e.target.value)\r\n                setDirty(!e.target.value)\r\n              } }\r\n              onBlur={() => setDirty(true)}\r\n              isInvalid={isDirty}\r\n            >\r\n              <option value=''>Выбрать...</option>\r\n              {myCards.map((card) => (\r\n                <>\r\n                  {/* <i className='far fa-credit-card'></i> */}\r\n                  <option\r\n                    value={card.number}\r\n                    key={card.id}\r\n                  >\r\n                карта No {card.number}\r\n                  </option>\r\n                </>\r\n              ))}\r\n            </Form.Select>\r\n          </FloatingLabel>\r\n          <button\r\n            className='add-btn btn btn-outline-secondary'\r\n            onClick={() => changeIsAddingCard()}\r\n          >\r\n            + Добавить карту\r\n          </button>\r\n        </>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ChoosePaymentCart\r\n","import {Image} from 'react-bootstrap'\r\n\r\nimport {useAppSelector} from '../../redux/hooks'\r\nimport {DishInCart} from '../../common/types/dishesType'\r\nimport DetailsData from './DetailsData'\r\nimport totalSum from '../cartPageComponents/totalSum'\r\nimport ChoosePaymentCart from './ChoosePaymentCart'\r\n\r\nimport './orderDetails.scss'\r\n\r\n\r\nconst OrderDetailsSection = () => {\r\n  const total = totalSum()\r\n  const orderedDishes = useAppSelector<DishInCart[]>(\r\n    (state) => state.cart.dishes\r\n  )\r\n  const orderCompleted = useAppSelector(\r\n    (state) => state.order\r\n  )\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className='details-block'>\r\n        <div className='details-title'>\r\n         Заказ:\r\n        </div>\r\n        <div className='shadow details-border'>\r\n          <div className='details-item'>\r\n            <div className='\r\n              details-item-block\r\n              details-header\r\n              detail-header-name'\r\n            >\r\n              <span>Название</span>\r\n            </div>\r\n            <div className='details-item-block details-header'>\r\n              <span>Количество</span>\r\n            </div>\r\n            <div className='details-item-block details-header'>\r\n              <span>Цена за 1 позицию</span>\r\n            </div>\r\n          </div>\r\n          <div className='details-devider' />\r\n          {orderedDishes.map((item, id) =>\r\n            <div key={item.id}>\r\n              <div className='details-item' id={String(item.id)} key={item.id}>\r\n                <div className='details-item-block details-img'>\r\n                  <Image className='rounded-3' src={item.imageURL} />\r\n                </div>\r\n\r\n                <div className='details-item-block details-dish-name'>\r\n                  <a className='details-name'>{item.name}</a>\r\n                </div>\r\n                <div className='details-item-block details-counter'>\r\n                  <span className='counter'>{item.numberOfDishes}</span>\r\n                </div>\r\n                <div className='details-item-block details-sum'>\r\n                  <span>{Number(item.price) * item.numberOfDishes} BYN</span>\r\n                </div>\r\n              </div>\r\n              <div className='details-devider' />\r\n            </div>\r\n          )}\r\n\r\n          <DetailsData />\r\n\r\n          <div className='details-devider'></div>\r\n          <div className='row mb-3'>\r\n            <div className='col order-type-total text-right'>\r\n              Итого:\r\n            </div>\r\n            <div className='col order-type-total'>\r\n              {total} BYN\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='details-payment'>\r\n\r\n          {orderCompleted.paymentType === 'Наличными' && (\r\n            <div className='row'>\r\n              <div className='col order-type-total text-right'>\r\n                  Оплата:\r\n              </div>\r\n              <div className='col text'>\r\n                  На месте наличными\r\n              </div>\r\n            </div>\r\n          )}\r\n          {orderCompleted.paymentType === 'Картой на месте' && (\r\n            <div className='row'>\r\n              <div className='col order-type-total text-right'>\r\n                Оплата:\r\n              </div>\r\n              <div className='col text'>\r\n                  На месте картой\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n        {orderCompleted.paymentType === 'Картой онлайн' && (\r\n          <>\r\n            <div className='online-payment'>\r\n              <div className=' order-type-total'>\r\n                Оплата:\r\n              </div>\r\n              <div className=''>\r\n                <ChoosePaymentCart />\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OrderDetailsSection\r\n\r\n\r\n","import {useState} from 'react'\r\nimport {Button} from 'react-bootstrap'\r\nimport {useHistory} from 'react-router-dom'\r\nimport Cookies from 'js-cookie'\r\n\r\nimport {useAppSelector} from '../../redux/hooks'\r\nimport Message from './Message'\r\nimport Spinner from '../../components/Spinner/Spinner'\r\nimport OrderDetailsSection from\r\n  '../../components/confirmationComponents/OrderDetailsSection'\r\nimport {ApiOrder} from '../../api/ApiOrder'\r\n\r\nimport './confirmation.scss'\r\n\r\n\r\nconst Confirmation = () => {\r\n  const history = useHistory()\r\n  const token = Cookies.get('token')\r\n\r\n  const [success, setSuccess] = useState<boolean>(false)\r\n  const [orderID, setOrderID] = useState<number>(0)\r\n  const [isLoading, setIsLoading] = useState<boolean>(false)\r\n\r\n  const orderCompleted = useAppSelector(\r\n    (state) => state.order\r\n  )\r\n\r\n  const handleClose = () => {\r\n    history.goBack()\r\n  }\r\n  const handleSubmit = () => {\r\n    setIsLoading(true)\r\n    ApiOrder.createOrder(orderCompleted, token)\r\n      .then((response) => {\r\n        setIsLoading(false)\r\n        const apiOrderID: any = response.data.order.id\r\n        setOrderID(apiOrderID)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {isLoading && <Spinner />}\r\n      {success ?\r\n        <Message orderID={orderID}/> :\r\n        <div className='confirmation'>\r\n          <div className='container'>\r\n            <Button\r\n              className='justify-content-start go-back'\r\n              variant='link'\r\n              type='button'\r\n              onClick={() => handleClose()}\r\n            >\r\n          Вернуться назад\r\n            </Button>\r\n            <div className='confirm-title'>\r\n          Подтверждение заказа\r\n            </div>\r\n            <OrderDetailsSection />\r\n          </div>\r\n          <div className='confirm-submit-button'>\r\n            <Button\r\n              type='submit'\r\n              className='btn'\r\n              variant='warning'\r\n              size='lg'\r\n              onClick={() => {\r\n                handleSubmit()\r\n                setSuccess(!success)\r\n              }}\r\n            >\r\n          Подтвердить\r\n            </Button>{' '}\r\n          </div>\r\n        </div>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nexport default Confirmation\r\n\r\n\r\n","import {useState} from 'react'\r\nimport {ApiAuth, TOKEN_EXPIRATION_TIME} from '../../../api/ApiAuth'\r\nimport AdminHeader from './AdminHeader'\r\nimport ScrollToTop from '../../../components/scrollToTop/ScrollToTop'\r\nimport {Form, Button} from 'react-bootstrap'\r\nimport Cookies from 'js-cookie'\r\n\r\nconst Admin = () => {\r\n  const [isAdmin, setIsAdmin] = useState<boolean>(false)\r\n  const [password, setPassword] = useState<string>('')\r\n  const [login, setLogin] = useState<string>('')\r\n  const [passIsWrong, setPassIsWrong] = useState<boolean>(false)\r\n\r\n  const inputPassword=(e:any)=>{\r\n    setPassword(e.target.value)\r\n  }\r\n\r\n  const inputLogin=(e:any)=>{\r\n    setLogin(e.target.value)\r\n  }\r\n\r\n  const checkPasword=()=>{\r\n    ApiAuth.login(login, password)\r\n      .then((response) => {\r\n        try {\r\n          if (response.status >= 200 && response.status < 300) {\r\n            Cookies.set(\r\n              'token',\r\n              response.data.accessToken,\r\n              {expires: TOKEN_EXPIRATION_TIME}\r\n            )\r\n            Cookies.set(\r\n              'refreshToken',\r\n              response.data.refreshToken,\r\n              {expires: TOKEN_EXPIRATION_TIME}\r\n            )\r\n            setIsAdmin(true)\r\n            setPassIsWrong(false)\r\n          } else {\r\n            setIsAdmin(false)\r\n            setPassIsWrong(true)\r\n            // setIsLoading(false)\r\n            throw new Error(response.statusText)\r\n          }\r\n        } catch (error) {\r\n          setIsAdmin(false)\r\n          setPassIsWrong(true)\r\n          console.log(error)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        setIsAdmin(false)\r\n        setPassIsWrong(true)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <ScrollToTop />\r\n      <br/>\r\n      <h2 style={{padding: '20px', color: 'black'}}>\r\n             Панель администратора\r\n      </h2>\r\n\r\n      {isAdmin?\r\n        null :\r\n        <>\r\n          <h4 style={{padding: '20px', color: 'black'}}>\r\n             для входа:\r\n          </h4>\r\n          <div style={{display: 'flex', justifyContent: 'center'}}>\r\n            <div>\r\n              <h5> введите логин администратора</h5>\r\n              <Form.Control\r\n                style={{width: '400px'}}\r\n                id='userName'\r\n                type='password'\r\n                value={login}\r\n                onChange={(e) => inputLogin(e)}\r\n              />\r\n              <br/>\r\n              <h5> введите пароль администратора</h5>\r\n              <Form.Control\r\n                style={{width: '400px'}}\r\n                id='userName'\r\n                type='password'\r\n                value={password}\r\n                onChange={(e) => inputPassword(e)}\r\n              />\r\n              <br/>\r\n            </div>\r\n          </div>\r\n          <Button\r\n            onClick={()=>checkPasword()}\r\n            style={{width: '160px'}}\r\n            variant='outline-warning'\r\n          >\r\n              Вход\r\n          </Button>\r\n        </>}\r\n\r\n      {passIsWrong? <div\r\n        style={{color: 'red', marginTop: '40px'}}>\r\n        <h3>пароль неверный</h3>\r\n      </div> : null }\r\n\r\n      {isAdmin ?\r\n        <AdminHeader/>:\r\n        <div style={{height: '200px'}}>\r\n        </div>}\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Admin\r\n","import {\r\n  Switch,\r\n  Route,\r\n} from 'react-router-dom'\r\n\r\nimport Menu from '../pages/menuPage/menuPage'\r\nimport Admin from '../pages/adminPage/adminPage'\r\nimport Booking from '../pages/bookingPage/bookingPage'\r\nimport Login from '../pages/loginPage/loginPage'\r\nimport Page404 from '../pages/page404/page404'\r\nimport UserCart from '../pages/cartPage/cartPage'\r\nimport Home from '../pages/homePage/homePage'\r\nimport SignUp from '../pages/signupPage/signupPage'\r\nimport SignUpSucess from '../pages/signupSucessPage/signupSucessPage'\r\nimport UserProfile from '../pages/profilePage/profile'\r\nimport Confirmation from '../pages/confirmationPage/confirmationPage'\r\nimport CheckPasword from '../../src/pages/adminPage/Admin/CheckPassword'\r\n\r\n\r\nconst SwitchPager = () => (\r\n  <>\r\n    <Switch>\r\n      <Route exact path='/'>\r\n        <Home/>\r\n      </Route>\r\n\r\n      <Route path='/menu'>\r\n        <Menu/>\r\n      </Route>\r\n\r\n      <Route exact path='/admin'>\r\n        <CheckPasword/>\r\n      </Route>\r\n      <Route path='/admin'>\r\n        <Admin/>\r\n      </Route>\r\n\r\n      <Route path='/cart'>\r\n        <UserCart />\r\n      </Route>\r\n\r\n      <Route path='/booking-table'>\r\n        <Booking />\r\n      </Route>\r\n\r\n      <Route path='/login'>\r\n        <Login />\r\n      </Route>\r\n\r\n      <Route path='/signup-success'>\r\n        <SignUpSucess />\r\n      </Route>\r\n      <Route path='/signup'>\r\n        <SignUp />\r\n      </Route>\r\n\r\n      <Route path='/profile'>\r\n        <UserProfile />\r\n      </Route>\r\n\r\n      <Route path='/dishes'>\r\n      </Route>\r\n\r\n      <Route path='/cart'>\r\n      </Route>\r\n\r\n      <Route path='/confirmation'>\r\n        <Confirmation />\r\n      </Route>\r\n\r\n      <Route path='*'>\r\n        <Page404 />\r\n      </Route>\r\n    </Switch>\r\n  </>\r\n)\r\n\r\n\r\nexport default SwitchPager\r\n","import {useEffect} from 'react'\r\nimport {BrowserRouter as Router} from 'react-router-dom'\r\nimport {useDispatch} from 'react-redux'\r\nimport {ToastContainer} from 'react-toastify'\r\nimport {Container} from 'react-bootstrap'\r\nimport axios from 'axios'\r\nimport Cookies from 'js-cookie'\r\n\r\nimport NavBarComponent from './components/homePageComponents/Navbar/navBarComp'\r\nimport ContactsCard from\r\n  './components/homePageComponents/ContactsCard/ContactsCard'\r\nimport ErrorBoundary from './components/ErrorBoundary/ErrorBoundary'\r\nimport Footer from './components/homePageComponents/Footer/Footer'\r\n\r\nimport MenuRoutes from './pages/menuPage/Menu/MenuRoutes'\r\nimport ScrollToTop from './components/scrollToTop/ScrollToTop'\r\nimport AdminRoutes from './pages/adminPage/Admin/AdminRoutes'\r\n\r\nimport {IAuthResponse} from './common/types/authResponseTypes'\r\n\r\nimport {checkAuth} from './redux/actions'\r\nimport {getDishesFromApiTC} from '../src/redux/reducers/dishesReducer'\r\nimport {getUserPersonalDataTC} from '../src/redux/reducers/userReducer'\r\n\r\nimport {TOKEN_EXPIRATION_TIME} from './api/ApiAuth'\r\nimport {url} from './api/index'\r\n\r\nimport SwitchPager from './utils/swich'\r\n\r\nimport '!style-loader!css-loader!react-toastify/dist/ReactToastify.css'\r\nimport './App.scss'\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const handleAuthCheck = async () => {\r\n    const response = await axios.get<IAuthResponse>(\r\n      `${url}/users/refreshUser`, {\r\n        withCredentials: true\r\n      }\r\n    )\r\n    Cookies.set(\r\n      'token',\r\n      response.data.accessToken,\r\n      {expires: TOKEN_EXPIRATION_TIME}\r\n    )\r\n    Cookies.set(\r\n      'refreshToken',\r\n      response.data.refreshToken,\r\n      {expires: TOKEN_EXPIRATION_TIME}\r\n    )\r\n    const user = response.data.data\r\n    dispatch(checkAuth(user))\r\n    dispatch(getUserPersonalDataTC())\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (Cookies.get('token')) {\r\n      handleAuthCheck()\r\n      dispatch(getUserPersonalDataTC())\r\n    }\r\n\r\n    dispatch(getDishesFromApiTC())\r\n  }, [])\r\n\r\n  return (\r\n    <Router>\r\n      <ErrorBoundary >\r\n        <div>\r\n          <ToastContainer\r\n            position='top-right'\r\n            autoClose={2500}\r\n            hideProgressBar={false}\r\n            newestOnTop={false}\r\n            closeOnClick\r\n            rtl={false}\r\n            pauseOnFocusLoss\r\n            draggable\r\n            pauseOnHover\r\n          />\r\n        </div>\r\n        <div className='App'>\r\n          <header className='App-header'>\r\n            <NavBarComponent />\r\n          </header>\r\n          <main className='main'>\r\n            <SwitchPager />\r\n            <ScrollToTop />\r\n            <Container>\r\n              <MenuRoutes />\r\n              <AdminRoutes />\r\n            </Container>\r\n          </main>\r\n          <ContactsCard />\r\n          <Footer />\r\n        </div>\r\n      </ErrorBoundary>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport {store} from './redux/store'\r\nimport {Provider} from 'react-redux'\r\n\r\nimport './index.scss'\r\n\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}